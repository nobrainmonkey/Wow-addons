
PlaterDB = {
["captured_spells"] = {
[2649] = {
["isChanneled"] = false,
["source"] = "MT",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165189,
},
[61684] = {
["isChanneled"] = false,
["source"] = "MT",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165189,
},
[451102] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "扬升者维斯可里亚",
["npcID"] = 211261,
},
[448213] = {
["encounterName"] = "拉夏南",
["source"] = "拉夏南",
["npcID"] = 213937,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2839,
},
[386176] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "未知目标",
["npcID"] = 17252,
},
[450756] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "夜幕司令官",
["npcID"] = 214762,
},
[461870] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "萨拉塔斯",
["npcID"] = 229227,
},
[451107] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "苏雷吉网法师",
["npcID"] = 210966,
},
[426787] = {
["encounterName"] = "阿努布伊卡基",
["source"] = "阿努布伊卡基",
["npcID"] = 211089,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2838,
},
[1242074] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "夜幕咒刃",
["npcID"] = 213894,
},
[453140] = {
["encounterName"] = "代言人夏多克朗",
["source"] = "代言人夏多克朗",
["npcID"] = 211087,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2837,
},
[1238902] = {
["source"] = "未知目标",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 26125,
},
[453141] = {
["encounterName"] = "代言人夏多克朗",
["source"] = "代言人夏多克朗",
["npcID"] = 211087,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2837,
},
[453173] = {
["encounterName"] = "代言人夏多克朗",
["type"] = "DEBUFF",
["source"] = "代言人夏多克朗",
["npcID"] = 211087,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 2837,
},
[434441] = {
["encounterName"] = "拉夏南",
["type"] = "DEBUFF",
["source"] = "拉夏南",
["npcID"] = 213937,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 2839,
},
[19483] = {
["isChanneled"] = false,
["source"] = "地狱火爪牙",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 89,
},
[448888] = {
["encounterName"] = "拉夏南",
["source"] = "拉夏南",
["npcID"] = 213937,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2839,
},
[452127] = {
["encounterName"] = "阿努布伊卡基",
["source"] = "阿努布伊卡基",
["npcID"] = 211089,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2838,
},
[24450] = {
["isChanneled"] = false,
["source"] = "Cat",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165189,
},
[451112] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "夜幕战略家",
["npcID"] = 213934,
},
[431491] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "夜幕司令官",
["npcID"] = 214762,
},
[419204] = {
["type"] = "BUFF",
["source"] = "科蕾娜·大地之女",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 209072,
},
[451113] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "苏雷吉网法师",
["npcID"] = 210966,
},
[431333] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "夜幕暗法师",
["npcID"] = 213893,
},
[431365] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "夜幕祭师",
["npcID"] = 214761,
},
[434096] = {
["encounterName"] = "拉夏南",
["type"] = "DEBUFF",
["source"] = "拉夏南",
["npcID"] = 213937,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 2839,
},
[434668] = {
["encounterName"] = "拉夏南",
["type"] = "DEBUFF",
["source"] = "阿拉希炸弹",
["npcID"] = 217124,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 2839,
},
[453496] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "夜幕咒刃",
["npcID"] = 225479,
},
[431303] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "夜幕影法师",
["npcID"] = 213892,
},
[1242993] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "不稳定的黑暗",
["npcID"] = 213905,
},
[431494] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "夜幕战略家",
["npcID"] = 213934,
},
[433622] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "布莱恩·铜须",
["npcID"] = 210759,
},
[453212] = {
["encounterName"] = "代言人夏多克朗",
["source"] = "代言人夏多克朗",
["npcID"] = 211087,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2837,
},
[426860] = {
["encounterName"] = "阿努布伊卡基",
["source"] = "阿努布伊卡基",
["npcID"] = 211089,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2838,
},
[434576] = {
["encounterName"] = "拉夏南",
["type"] = "DEBUFF",
["source"] = "拉夏南",
["npcID"] = 213937,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 2839,
},
[426734] = {
["encounterName"] = "代言人夏多克朗",
["source"] = "代言人夏多克朗",
["npcID"] = 211087,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2837,
},
[453214] = {
["encounterName"] = "代言人夏多克朗",
["type"] = "DEBUFF",
["source"] = "代言人夏多克朗",
["npcID"] = 211087,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 2837,
},
[428735] = {
["isChanneled"] = false,
["source"] = "树人",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 103822,
},
[451119] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "死亡尖啸者艾肯塔克",
["npcID"] = 211263,
},
[108446] = {
["isChanneled"] = false,
["source"] = "未知目标",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 417,
},
[426736] = {
["encounterName"] = "代言人夏多克朗",
["type"] = "DEBUFF",
["source"] = "代言人夏多克朗",
["npcID"] = 211087,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 2837,
},
[434579] = {
["encounterName"] = "拉夏南",
["type"] = "DEBUFF",
["source"] = "拉夏南",
["npcID"] = 213937,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 2839,
},
[431309] = {
["encounterName"] = "拉夏南",
["source"] = "夜幕影法师",
["npcID"] = 228540,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2839,
},
[451026] = {
["encounterName"] = "代言人夏多克朗",
["source"] = "代言人夏多克朗",
["npcID"] = 211087,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2837,
},
[453345] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "暗影具象",
["npcID"] = 211341,
},
[446615] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "夜幕筑暗师",
["npcID"] = 213885,
},
[459753] = {
["isChanneled"] = false,
["source"] = "芬雷尔",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 228224,
},
[434589] = {
["isChanneled"] = false,
["source"] = "大恶魔",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 217429,
},
[188046] = {
["isChanneled"] = false,
["source"] = "梦境住民",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 198489,
},
[1236640] = {
["isChanneled"] = false,
["source"] = "树妖",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 244905,
},
[428545] = {
["isChanneled"] = false,
["source"] = "树人",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 103822,
},
[453856] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "代言人夏多克朗",
["npcID"] = 225601,
},
[201754] = {
["isChanneled"] = false,
["source"] = "WB",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165189,
},
[432520] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "夜幕暗法师",
["npcID"] = 213893,
},
[444490] = {
["source"] = "先祖",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 245543,
},
[434407] = {
["encounterName"] = "拉夏南",
["source"] = "拉夏南",
["npcID"] = 213937,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2839,
},
[199845] = {
["isChanneled"] = false,
["source"] = "灵能魔",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 101398,
},
[427192] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "阿努布伊卡基",
["npcID"] = 211089,
},
[457913] = {
["type"] = "BUFF",
["source"] = "部署的导风塔杖",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 227482,
},
[427378] = {
["encounterName"] = "阿努布伊卡基",
["type"] = "DEBUFF",
["source"] = "阿努布伊卡基",
["npcID"] = 211089,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 2838,
},
[16827] = {
["isChanneled"] = false,
["source"] = "MT",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165189,
},
[463428] = {
["encounterName"] = "拉夏南",
["type"] = "DEBUFF",
["source"] = "拉夏南",
["npcID"] = 213937,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 2839,
},
[1242681] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "夜幕影行者",
["npcID"] = 213895,
},
[428086] = {
["encounterName"] = "代言人夏多克朗",
["source"] = "代言人夏多克朗",
["npcID"] = 211087,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2837,
},
[449001] = {
["isChanneled"] = false,
["source"] = "树人",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 103822,
},
[453859] = {
["encounterName"] = "代言人夏多克朗",
["type"] = "BUFF",
["source"] = "代言人夏多克朗",
["npcID"] = 211087,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 2837,
},
[431364] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "夜幕祭师",
["npcID"] = 214761,
},
[1232888] = {
["type"] = "BUFF",
["source"] = "迪门修斯",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 234478,
},
[431349] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "夜幕筑暗师",
["npcID"] = 213885,
},
[432448] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "夜幕祭师",
["npcID"] = 214761,
},
[434113] = {
["encounterName"] = "拉夏南",
["type"] = "DEBUFF",
["source"] = "喷射丝线",
["npcID"] = 217188,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 2839,
},
[434089] = {
["encounterName"] = "拉夏南",
["source"] = "拉夏南",
["npcID"] = 213937,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2839,
},
[431350] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "夜幕筑暗师",
["npcID"] = 213885,
},
[426735] = {
["encounterName"] = "代言人夏多克朗",
["type"] = "DEBUFF",
["source"] = "代言人夏多克朗",
["npcID"] = 211087,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 2837,
},
[1217528] = {
["isChanneled"] = false,
["source"] = "WB",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165189,
},
[427001] = {
["encounterName"] = "阿努布伊卡基",
["source"] = "阿努布伊卡基",
["npcID"] = 211089,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2838,
},
[432565] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "暗影具象",
["npcID"] = 211341,
},
[431637] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "夜幕影行者",
["npcID"] = 228537,
},
[160772] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "落网的受害者",
["npcID"] = 225601,
},
[450854] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "死亡尖啸者艾肯塔克",
["npcID"] = 211263,
},
[452099] = {
["encounterName"] = "阿努布伊卡基",
["source"] = "活化暗影",
["npcID"] = 224616,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2838,
},
[90328] = {
["isChanneled"] = false,
["source"] = "MT",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165189,
},
[451117] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "坚不可摧的伊克斯雷腾",
["npcID"] = 211262,
},
},
["profileKeys"] = {
["Maweidk - Illidan"] = "Jundies Plater",
["Maweihunt - Illidan"] = "Jundies Plater",
["Maweidoodoo - Illidan"] = "Jundies Plater",
["Maweireborn - Illidan"] = "Default",
["Maweigavel - Illidan"] = "Jundies Plater",
},
["profiles"] = {
["Default"] = {
["use_ui_parent"] = true,
["class_colors"] = {
["DEATHKNIGHT"] = {
["colorStr"] = "ffc31d3a",
},
["WARRIOR"] = {
["colorStr"] = "ffc69a6d",
},
["PALADIN"] = {
["colorStr"] = "fff48bb9",
},
["WARLOCK"] = {
["colorStr"] = "ff8687ed",
},
["DEMONHUNTER"] = {
["colorStr"] = "ffa22fc8",
},
["SHAMAN"] = {
["colorStr"] = "ff006fdd",
},
["DRUID"] = {
["colorStr"] = "ffff7c09",
},
["EVOKER"] = {
["colorStr"] = "ff33937e",
},
["ROGUE"] = {
["colorStr"] = "fffff467",
},
},
["hook_auto_imported"] = {
["Reorder Nameplate"] = 4,
["Dont Have Aura"] = 1,
["Players Targetting Amount"] = 4,
["Color Automation"] = 1,
["Extra Border"] = 2,
["Cast Bar Icon Config"] = 2,
["Aura Reorder"] = 3,
["Hide Neutral Units"] = 1,
["Combo Points"] = 6,
["Target Color"] = 3,
["Execute Range"] = 1,
["Attacking Specific Unit"] = 2,
},
["expansion_triggerwipe"] = {
[10] = true,
},
["script_data"] = {
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage(unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    self.BigSparkle = self.BigSparkle or Plater:CreateImage(self.FrameOverlay)\n    self.BigSparkle.texture = [[Interface\\AddOns\\Plater\\images\\cast_bar_vertical_spark.png]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    self.BigSparkle:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    self.BigSparkle:ClearAllPoints()\n    self.BigSparkle:SetPoint (\"topleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 0)\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0\nend\n\n\n\n\n",
["Time"] = 1719711112,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = true,
["Revision"] = 831,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a special animation changing the cast bar color.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "To get a list of color names, use: /plater colors",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the health bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Health Bar Height Mod",
},
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = false,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Use Cast Bar Color",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above Use Cast Bar Color",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.431372,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast Bar Color",
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 4,
["Name"] = "Dot X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 6,
["Key"] = "yOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot Y Offset",
},
{
["Type"] = 7,
["Key"] = "castColor",
["Value"] = {
},
["Name"] = "Color List by SpellId",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Insert the spellId in the Key, and the color name in the Value",
},
},
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    self.BigSparkle:Show()\n    self.BigSparkle:SetWidth(8)\n    self.BigSparkle:SetHeight(self:GetHeight() + unitFrame.healthBar:GetHeight())\n    self.BigSparkle:SetScale(1)\n    self.BigSparkle:SetVertexColor(1,1, 1, 1)\n    envTable.overlaySpark:Hide()\n    \n    self.Spark:Hide()\n    \n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.dotAnimation:SetPoint(\"bottomright\", self, \"bottomright\", scriptTable.config.xOffset, -scriptTable.config.yOffset)\n    \n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, customColor or scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)        \n        Plater.DenyColorChange(unitFrame, true)            \n    end\n    \nend",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_important_bycolor.png",
["Name"] = "Cast - Important by Color [P]",
["PlaterCore"] = 1,
["semver"] = "",
["Desc"] = "Used on casts that make the mob explode, summon or transform if the cast passes.",
["SpellIds"] = {
432967,
446717,
451379,
451067,
448013,
448057,
322486,
341709,
321226,
429428,
},
["version"] = -1,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
["Time"] = 1669327144,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = true,
["Revision"] = 632,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Glow Enabled",
["Value"] = false,
["Key"] = "glowEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Glow Color",
["Value"] = {
0.403921568627451,
0.00392156862745098,
0,
1,
},
["Key"] = "glowColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Dots Enabled",
["Value"] = true,
["Key"] = "dotsEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.3215686274509804,
0,
1,
},
["Name"] = "Dots Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\n    \nend\n\n\n\n\n",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
["Name"] = "Aura - Buff Alert [Plater]",
["PlaterCore"] = 1,
["semver"] = "",
["Desc"] = "Add the buff name in the trigger box.",
["SpellIds"] = {
398151,
377738,
378149,
},
["version"] = -1,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    --set the castbar config\n    envTable.configAltCastBar = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end    \n        \n        \n    end\nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable._SpellID == 191284) then\n        Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.70, GetTime(), 191284)\n        \n        C_Timer.After(4.75, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 5.30, GetTime(), 191284)\n        end)\n        \n        C_Timer.After(4.75 + 5.30, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.30, GetTime(), 191284)\n                C_Timer.After(4.50, function() unitFrame.castBar2:Hide() end)\n        end)\n    end\n    \nend",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1671066705,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = false,
["Revision"] = 37,
["Options"] = {
},
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Icon"] = 134229,
["Name"] = "Cast - Effect After Cast [P]",
["PlaterCore"] = 1,
["semver"] = "",
["Desc"] = "Start extra cast bars for effects after the cast is done. Setup the effect on On Hide script.",
["SpellIds"] = {
191284,
},
["version"] = -1,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to run the update as fast as the game framerate\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    local dotSpeed = abs(envTable._Duration - envTable._RemainingTime) + 1.5\n    envTable.dotAnimation.textureInfo.speedMultiplier = dotSpeed\nend\n\n\n\n\n",
["Time"] = 1670201853,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = false,
["Revision"] = 533,
["Options"] = {
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 3,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "castBarHeight",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Changes the cast bar color to this one.",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Arrow:",
["Value"] = "Arrow:",
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Arrow",
["Value"] = true,
["Key"] = "showArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Arrow alpha.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 1,
["Name"] = "Arrow Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowAlpha",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Width.",
["Min"] = 4,
["Name"] = "Arrow Width",
["Value"] = 8,
["Key"] = "arrowWidth",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Height.",
["Min"] = 4,
["Fraction"] = false,
["Value"] = 8,
["Name"] = "Arrow Height",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowHeight",
},
{
["Type"] = 6,
["Name"] = "Option 13",
["Value"] = 0,
["Key"] = "option13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Dot Animation:",
["Value"] = "Dot Animation:",
["Key"] = "option12",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dot Color",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Name"] = "Dot X Offset",
["Value"] = 4,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "xOffset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Key"] = "yOffset",
["Value"] = 3,
["Name"] = "Dot Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "Option 18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option17",
["Value"] = "Nameplate Color",
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Nameplate Color",
["Value"] = false,
["Key"] = "useNameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.1843137294054031,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Health Bar Color",
},
},
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    Plater.SetCastBarColorForScript(self, true, scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end       \nend\n\n\n\n\n\n\n",
["Icon"] = 2175503,
["Name"] = "Explosion Affix M+ [Plater]",
["PlaterCore"] = 1,
["semver"] = "",
["Desc"] = "Apply several animations when the explosion orb cast starts on a Mythic Dungeon with Explosion Affix",
["SpellIds"] = {
240446,
385339,
198077,
210261,
360857,
389446,
},
["version"] = -1,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Time"] = 1669327144,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = true,
["Revision"] = 368,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Glow Enabled",
["Value"] = false,
["Key"] = "glowEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Glow Color",
["Value"] = {
0.403921568627451,
0.00392156862745098,
0,
1,
},
["Key"] = "glowColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Dots Enabled",
["Value"] = true,
["Key"] = "dotsEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.3215686274509804,
0,
1,
},
["Name"] = "Dots Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["Author"] = "Tercioo-Sylvanas",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\nend\n\n\n",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
["Name"] = "Aura - Debuff Alert [Plater]",
["PlaterCore"] = 1,
["semver"] = "",
["Desc"] = "Add the debuff name in the trigger box.",
["SpellIds"] = {
},
["version"] = -1,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1719711125,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = true,
["Revision"] = 873,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Plays a big animation when the cast start.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 4",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Flash",
["Value"] = "Flash:",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Key"] = "flashDuration",
["Value"] = 0.8,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Name"] = "Flash Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "flashColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Shake:",
["Name"] = "Shake",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Key"] = "shakeAmplitude",
["Value"] = 5,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Name"] = "Option 13",
["Value"] = 0,
["Key"] = "option13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Dot Animation",
["Value"] = "Dot Animation:",
["Key"] = "option14",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dot Color",
["Value"] = {
0.5647058823529412,
0.5647058823529412,
0.5647058823529412,
1,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 3,
["Name"] = "Dot Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "yOffset",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 19",
["Value"] = "Cast Bar",
["Key"] = "option19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Use Cast Bar Color",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
0.4117647058823529,
1,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
},
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    --Dominator on Shadowmoon Burial Grounds\n    if (envTable._SpellID == 154327) then\n        if (UnitHealth(unitId) == UnitHealthMax(unitId)) then\n            if (envTable._Duration == 604800) then\n                Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, {1, 0, 0, 1}, envTable)\n            end\n        end\n    end\n    \nend",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_shining_green.png",
["Name"] = "Cast - Shining Green [P]",
["PlaterCore"] = 1,
["semver"] = "",
["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
["SpellIds"] = {
434802,
448248,
453840,
337249,
324293,
49184,
449455,
268702,
268797,
330562,
330868,
341969,
440687,
1214780,
1214468,
426295,
422541,
427011,
427157,
427601,
424420,
444743,
},
["version"] = -1,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
["Time"] = 1670790652,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = false,
["Revision"] = 694,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a special animation showing the explosion time.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the health bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Health Bar Height Mod",
},
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = true,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Use Cast Bar Color",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above Use Cast Bar Color",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.431372,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast Bar Color",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option6",
["Value"] = "Arrow:",
["Name"] = "Arrow:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Arrow",
["Value"] = true,
["Key"] = "showArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Arrow alpha.",
["Min"] = 0,
["Key"] = "arrowAlpha",
["Value"] = 0.5,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Alpha",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Width.",
["Min"] = 4,
["Fraction"] = false,
["Value"] = 8,
["Name"] = "Arrow Width",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowWidth",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Height.",
["Min"] = 4,
["Key"] = "arrowHeight",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Height",
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 4,
["Name"] = "Dot X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 3,
["Key"] = "yOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot Y Offset",
},
{
["Type"] = 7,
["Key"] = "castColor",
["Value"] = {
{
"200682",
"darkslateblue",
},
{
"192307",
"goldenrod",
},
{
"196838",
"maroon",
},
{
"193827",
"darkgreen",
},
{
"194043",
"darkgreen",
},
{
"156718",
"DRUID",
},
{
"395859",
"ROGUE",
},
},
["Name"] = "Color List by SpellId",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Insert the spellId in the Key, and the color name in the Value",
},
},
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    else\n        envTable.topArrow:Hide()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, customColor or scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)        \n        Plater.DenyColorChange(unitFrame, true)            \n    end\n    \nend",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_red",
["Name"] = "Cast - Ultra Important [P]",
["PlaterCore"] = 1,
["semver"] = "",
["Desc"] = "Used on casts that make the mob explode or transform if the cast passes.",
["SpellIds"] = {
383823,
382670,
388537,
372851,
200682,
192307,
196838,
193827,
194043,
209410,
211464,
361180,
156718,
395859,
358320,
374045,
386757,
367500,
370225,
376200,
372107,
388923,
376934,
384899,
373960,
374724,
385551,
259732,
373424,
373084,
87618,
255041,
428926,
76634,
200050,
197546,
198079,
199193,
266181,
253544,
},
["version"] = -1,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.lifePercent = { --dragonflight\n        [214840] = {25}, --engorged crawler\n        \n    }\n    \n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["Time"] = 1719452142,
["url"] = "",
["NpcNames"] = {
"214840",
},
["Enabled"] = true,
["Revision"] = 156,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "indicatorColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Vertical Line Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Indicator color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Indicator alpha.",
["Min"] = 0.1,
["Name"] = "Vertical Line Alpha",
["Value"] = 0.79,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "indicatorAlpha",
},
{
["Type"] = 6,
["Name"] = "blank line",
["Value"] = 0,
["Key"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Fill Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "fillColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Fill color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Fill alpha.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "fillAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Fill Alpha",
},
},
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
["Name"] = "Add - Health Markers [P]",
["PlaterCore"] = 1,
["semver"] = "",
["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
["SpellIds"] = {
},
["version"] = -1,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --flash duration\n    local CONFIG_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --manually create a new texture for the flash animation\n    if (not envTable.SmallFlashTexture) then\n        envTable.SmallFlashTexture = envTable.SmallFlashTexture or Plater:CreateImage (unitFrame.castBar)\n        envTable.SmallFlashTexture:SetColorTexture (1, 1, 1)\n        envTable.SmallFlashTexture:SetAllPoints()\n    end\n    \n    --manually create a flash animation using the framework\n    if (not envTable.SmallFlashAnimationHub) then \n        \n        local onPlay = function()\n            envTable.SmallFlashTexture:Show()\n        end\n        \n        local onFinished = function()\n            envTable.SmallFlashTexture:Hide()\n        end\n        \n        local animationHub = Plater:CreateAnimationHub (envTable.SmallFlashTexture, onPlay, onFinished)\n        envTable.flashIn = Plater:CreateAnimation (animationHub, \"Alpha\", 1, CONFIG_FLASH_DURATION/2, 0, .6)\n        envTable.flashOut = Plater:CreateAnimation (animationHub, \"Alpha\", 2, CONFIG_FLASH_DURATION/2, 1, 0)\n        \n        envTable.SmallFlashAnimationHub = animationHub\n    end\n    \n    envTable.flashIn:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.flashOut:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.SmallFlashTexture:SetColorTexture (Plater:ParseColors(scriptTable.config.flashColor))\n    \nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Stop()\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    \nend\n\n\n",
["Time"] = 1669325410,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = true,
["Revision"] = 662,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Plays a small animation when the cast start.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 3",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Name"] = "Flash Duration",
["Value"] = 0.6,
["Key"] = "flashDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Name"] = "Flash Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "flashColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
},
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Play()\n    \nend\n\n\n",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
["Name"] = "Cast - Small Alert [Plater]",
["PlaterCore"] = 1,
["semver"] = "",
["Desc"] = "Flashes the Cast Bar when a spell in the trigger list is Cast. Add spell in the Add Trigger field.",
["SpellIds"] = {
376851,
396044,
381517,
373932,
397801,
208165,
392576,
198750,
387843,
387411,
211299,
198595,
198934,
198962,
156722,
350554,
348513,
351779,
328180,
319898,
281420,
274383,
259092,
367521,
374544,
385039,
382474,
369823,
377500,
260879,
186269,
378818,
371875,
372225,
200658,
266036,
265407,
164965,
429176,
428526,
418200,
407124,
200630,
415437,
264050,
267824,
271579,
301088,
423479,
},
["version"] = -1,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.NameplateColor = scriptTable.config.nameplateColor\n    envTable.NameplateSizeOffset = scriptTable.config.nameplateSizeOffset\n    \n    unitFrame.UnitImportantSkullTexture = unitFrame.UnitImportantSkullTexture or unitFrame:CreateTexture(nil, \"background\")\n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n--[=[\n\n154564 - debug\n\nUsing spellIDs for multi-language support\n\n196548 = ancient branch (academy dungeon)\n195580, 195821, 195820 = nokhub saboteur\n189886 = blazebound firestorm\n75966 = Defiled Spirit\n102019 = Stormforged Obliterator\n    187159 = Shrieking Whelp\n194897 = stormsurge totem\n104251 = duskwatch sentry\n101326 = honored ancestor\n189669 = binding speakl netharius\n192464 = raging ember neltharius\n--]=]\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)   \n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \n    unitFrame.UnitImportantSkullTexture:Hide()\n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    if (scriptTable.config.changeNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
["Time"] = 1670423785,
["url"] = "",
["NpcNames"] = {
"196548",
"195580",
"195820",
"195821",
"189886",
"75966",
"102019",
"187159",
"194897",
"104251",
"101326",
"189669",
"192464",
190381,
92538,
192464,
131009,
127315,
133361,
136330,
214117,
212483,
101008,
194745,
190426,
152033,
170234,
220368,
231176,
213751,
},
["Enabled"] = true,
["Revision"] = 572,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option6",
["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
["Name"] = "Option 6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "changeNameplateColor",
["Value"] = true,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "change to true to change the color",
},
{
["Type"] = 1,
["Key"] = "nameplateColor",
["Value"] = {
1,
0,
0.5254901960784314,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "increase the nameplate height by this value",
["Min"] = 0,
["Name"] = "Nameplate Size Offset",
["Value"] = 3,
["Key"] = "nameplateSizeOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.7137255072593689,
0,
0.5631310641765594,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Dot Color",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option10",
["Value"] = "Extra Texture",
["Name"] = "Extra Texture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "Extra Texture",
},
{
["Type"] = 4,
["Name"] = "Show Extra Texture",
["Value"] = false,
["Key"] = "showExtraTexture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show Extra Texture",
},
{
["Type"] = 1,
["Key"] = "skullColor",
["Value"] = {
1,
0.4627450980392157,
0,
1,
},
["Name"] = "Texture Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Alpha",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "skullAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Alpha",
},
{
["Type"] = 2,
["Max"] = 2,
["Desc"] = "Scale",
["Min"] = 0.4,
["Name"] = "Scale",
["Value"] = 0.6,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "skullScale",
},
{
["Type"] = 7,
["Name"] = "Npc Color By NpcID",
["Value"] = {
{
"196548",
"forestgreen",
},
{
"195580",
"forestgreen",
},
{
"195820",
"forestgreen",
},
{
"195821",
"forestgreen",
},
{
"189886",
"forestgreen",
},
{
"75966",
"forestgreen",
},
{
"102019 ",
"forestgreen",
},
{
"187159",
"forestgreen",
},
{
"194897",
"forestgreen",
},
{
"104251",
"forestgreen",
},
},
["Key"] = "npcColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Key is the npcID, value is the color name",
},
},
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable.dotAnimation) then\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    end\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    unitFrame.UnitImportantSkullTexture:Show()\n    \n    --color priority:\n    local npcIdString = tostring(envTable._NpcID)\n    envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)    \n    \n    if (scriptTable.config.showExtraTexture) then\n        unitFrame.UnitImportantSkullTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.skullColor))\n        unitFrame.UnitImportantSkullTexture:SetAlpha(scriptTable.config.skullAlpha)\n        unitFrame.UnitImportantSkullTexture:SetScale(scriptTable.config.skullScale)\n        unitFrame.UnitImportantSkullTexture:SetTexture([[Interface/AddOns/Plater/media/x_64]])\n        unitFrame.UnitImportantSkullTexture:ClearAllPoints()\n        unitFrame.UnitImportantSkullTexture:SetPoint(\"right\", unitFrame.healthBar, \"left\", -2, 0)\n        unitFrame.UnitImportantSkullTexture:SetSize(28, 28)\n        unitFrame.UnitImportantSkullTexture:Show()\n    else\n        unitFrame.UnitImportantSkullTexture:Hide()\n    end\n    \n    --rules for some npcs\n    if (envTable._NpcID == 194895) then --unstable squall (explode at dying\n        unitFrame.UnitImportantSkullTexture:Hide()\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation) \n    end\n    \n    if (scriptTable.config.changeNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        \n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)        \n        \n        Plater.DenyColorChange(unitFrame, true)\n    end\n    \nend\n\n\n\n\n",
["Icon"] = "Interface\\AddOns\\Plater\\media\\skullbones_64",
["Name"] = "Add - Important [P]",
["PlaterCore"] = 1,
["semver"] = "",
["Desc"] = "Change the color and highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
["SpellIds"] = {
},
["version"] = -1,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = scriptTable.config.blinkEnabled\n        envTable.GlowEnabled = scriptTable.config.glowEnabled \n        envTable.ChangeNameplateColor = scriptTable.config.changeNameplateColor;\n        envTable.TimeLeftToBlink = scriptTable.config.timeleftToBlink;\n        envTable.BlinkSpeed = scriptTable.config.blinkSpeed; \n        envTable.BlinkColor = scriptTable.config.blinkColor; \n        envTable.BlinkMaxAlpha = scriptTable.config.blinkMaxAlpha; \n        envTable.NameplateColor = scriptTable.config.nameplateColor; \n        \n        --text color\n        envTable.TimerColorEnabled = scriptTable.config.timerColorEnabled \n        envTable.TimeLeftWarning = scriptTable.config.timeLeftWarning;\n        envTable.TimeLeftCritical = scriptTable.config.timeLeftCritical;\n        envTable.TextColor_Warning = scriptTable.config.warningColor; \n        envTable.TextColor_Critical = scriptTable.config.criticalColor; \n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        --if not envTable.blinkTexture then\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        --end\n        \n        envTable.glowEffect = envTable.glowEffect or self.overlay or Plater.CreateIconGlow (self)\n        --envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
["Time"] = 1626382829,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = true,
["Revision"] = 375,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option10",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option17",
["Value"] = "Enter the spell name or spellID in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 17",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option10",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "blinkEnabled",
["Value"] = true,
["Name"] = "Blink Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable blink",
},
{
["Type"] = 4,
["Key"] = "glowEnabled",
["Value"] = true,
["Name"] = "Glow Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable glows",
},
{
["Type"] = 4,
["Key"] = "changeNameplateColor",
["Value"] = false,
["Name"] = "Change NamePlate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'true' to enable nameplate color change",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "in seconds, affects the blink effect only",
["Min"] = 1,
["Fraction"] = true,
["Value"] = 3,
["Name"] = "Timeleft to Blink",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "timeleftToBlink",
},
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "time to complete a blink loop",
["Min"] = 0.5,
["Fraction"] = true,
["Value"] = 1,
["Name"] = "Blink Speed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "blinkSpeed",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "max transparency in the animation loop (1.0 is full opaque)",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.6,
["Name"] = "Blink Max Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "blinkMaxAlpha",
},
{
["Type"] = 1,
["Key"] = "blinkColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Blink Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color of the blink",
},
{
["Type"] = 1,
["Key"] = "nameplateColor",
["Value"] = {
0.2862745098039216,
0.00392156862745098,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "nameplate color if ChangeNameplateColor is true",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option10",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "timerColorEnabled",
["Value"] = true,
["Name"] = "Timer Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable changes in the color of the time left text",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "in seconds, affects the color of the text",
["Min"] = 1,
["Name"] = "Time Left Warning",
["Value"] = 8,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "timeLeftWarning",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "in seconds, affects the color of the text",
["Min"] = 1,
["Name"] = "Time Left Critical",
["Value"] = 3,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "timeLeftCritical",
},
{
["Type"] = 1,
["Key"] = "warningColor",
["Value"] = {
1,
0.8705882352941177,
0,
1,
},
["Name"] = "Warning Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color when the time left entered in a warning zone",
},
{
["Type"] = 1,
["Key"] = "criticalColor",
["Value"] = {
1,
0.07450980392156863,
0,
1,
},
["Name"] = "Critical Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color when the time left is critical",
},
},
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_blink",
["Name"] = "Aura - Blink by Time Left [Plater]",
["PlaterCore"] = 1,
["semver"] = "",
["Desc"] = "Blink, change the number and nameplate color. Add the debuffs int he trigger box. Set settings on constructor script.",
["SpellIds"] = {
},
["version"] = -1,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.PlaySwipeAnimation(unitFrame)\n        unitFrame.CastSwipeTexture:Show()\n        unitFrame.CastSwipeAnimation:Play()\n        unitFrame.StartSwipeAnimation:Play()\n    end\n    \n    function envTable.StopSwipeAnimation(unitFrame)\n        unitFrame.EndSwipeAnimation:Play()\n        C_Timer.After(0.21, function()\n                unitFrame.CastSwipeAnimation:Stop()\n                unitFrame.CastSwipeTexture:Hide()\n        end)\n    end\n    \n    function envTable.CreateSwipeTextureAndAnimations(unitFrame)\n        if (unitFrame.CastSwipeTexture) then\n            return\n        end\n        \n        local swipeTexture = unitFrame:CreateTexture(nil, \"overlay\")\n        swipeTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\circular_swipe]])\n        swipeTexture:SetPoint(\"center\", 0, 0)\n        swipeTexture:SetSize(64, 64)\n        swipeTexture:Hide()\n        \n        unitFrame.CastSwipeTexture = swipeTexture\n        \n        --rotation animation\n        unitFrame.CastSwipeAnimation = Plater:CreateAnimationHub(swipeTexture)\n        unitFrame.CastSwipeAnimation:SetLooping(\"repeat\")\n        unitFrame.CastSwipeAnimation.Rotation = Plater:CreateAnimation(unitFrame.CastSwipeAnimation, \"rotation\", 1, 1, 360)\n        \n        --starting animation\n        unitFrame.StartSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, function()swipeTexture:Show() end)\n        unitFrame.StartSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"alpha\", 1, 0.2, 0, 1)\n        unitFrame.StartSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"scale\", 1, 0.2, 1.3, 1.3, 1, 1)        \n        \n        --finished animation\n        unitFrame.EndSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, nil, function()swipeTexture:Hide() end)\n        unitFrame.EndSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"alpha\", 1, 0.2, 1, 0)\n        unitFrame.EndSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"scale\", 1, 0.2, 1, 1, 1.3, 1.3)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.StopSwipeAnimation(unitFrame)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["Time"] = 1670428019,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = false,
["Revision"] = 162,
["Options"] = {
{
["Type"] = 2,
["Max"] = 0.3,
["Desc"] = "Rotation Duration",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.15,
["Key"] = "rotationDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Rotation Duration",
},
{
["Type"] = 6,
["Name"] = "Option 5",
["Value"] = 0,
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.5,
["Desc"] = "Animation Start Duration",
["Min"] = 0,
["Name"] = "Animation Start Duration",
["Value"] = 0.3,
["Key"] = "animStartDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha when the animation start playing, this effect in intended to catch the player attention",
["Min"] = 0,
["Key"] = "textureStartAlpha",
["Value"] = 1,
["Name"] = "Texture Start Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "Texture Scale",
["Min"] = 0.6,
["Fraction"] = true,
["Value"] = 0.8,
["Key"] = "textureScale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Scale",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 1,
["Key"] = "textureAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Alpha",
},
{
["Type"] = 1,
["Name"] = "Texture Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "textureColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
},
["Author"] = "Butazzul-Valdrakken",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CreateSwipeTextureAndAnimations(unitFrame)\n    \n    local options = scriptTable.config\n    \n    local targetScale = scriptTable.config.textureScale\n    \n    --swipe rotation duration    \n    unitFrame.CastSwipeAnimation.Rotation:SetDuration(scriptTable.config.rotationDuration)\n    \n    --swipe texture settings\n    unitFrame.CastSwipeTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.textureColor))\n    unitFrame.CastSwipeTexture:SetScale(targetScale)\n    unitFrame.CastSwipeTexture:SetAlpha(scriptTable.config.textureAlpha)  \n    \n    unitFrame.StartSwipeAnimation.Alpha:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Alpha:SetFromAlpha(scriptTable.config.textureStartAlpha)\n    unitFrame.StartSwipeAnimation.Alpha:SetToAlpha(scriptTable.config.textureAlpha)\n    \n    unitFrame.StartSwipeAnimation.Scale:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Scale:SetScaleTo(targetScale, targetScale)\n    \n    unitFrame.EndSwipeAnimation.Scale:SetDuration(0.1)\n    unitFrame.EndSwipeAnimation.Alpha:SetDuration(0.1)\n    \n    --start playing\n    envTable.PlaySwipeAnimation(unitFrame)    \n    \nend\n\n\n",
["Icon"] = "Interface\\AddOns\\Plater\\images\\circular_swipe",
["Name"] = "Cast - Circle AoE [P]",
["PlaterCore"] = 1,
["semver"] = "",
["Desc"] = "Play a animation when the spell effect is an circular AoE around the caster.",
["SpellIds"] = {
385916,
386063,
388822,
373087,
397785,
106864,
193660,
198263,
387910,
370766,
375591,
384336,
209404,
209378,
210875,
396001,
397899,
386559,
382555,
258672,
258777,
257756,
257784,
256405,
256589,
393793,
388046,
375079,
390290,
369811,
369703,
226287,
410999,
372561,
256882,
172578,
412063,
},
["version"] = -1,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \nend\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1669340442,
["url"] = "",
["NpcNames"] = {
"195138",
"192955",
"190294",
"76518",
},
["Enabled"] = false,
["Revision"] = 161,
["Options"] = {
},
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    \n    scriptTable.allAdds = {} \n    scriptTable.nextAddWave = 0\n    scriptTable.waveTime = 20\n    \n    function scriptTable.ArrangeNpcNumbers(GUID)\n        local spawnId = select(7, strsplit (\"-\", GUID))\n        spawnId = tonumber(spawnId, 16)\n        \n        if (spawnId) then\n            --check if this is a new wave of adds\n            if (GetTime() > scriptTable.nextAddWave) then\n                scriptTable.nextAddWave = GetTime() + scriptTable.waveTime\n                scriptTable.allAdds = {}\n            end\n            \n            local bIsAlreadyOnTheList = false\n            \n            for o = 1, #scriptTable.allAdds do\n                if (scriptTable.allAdds[o][1] == GUID) then\n                    bIsAlreadyOnTheList = true\n                end\n            end\n            \n            if (not bIsAlreadyOnTheList) then\n                scriptTable.allAdds[#scriptTable.allAdds+1] = {GUID, spawnId}\n            end\n        end\n        \n        table.sort(scriptTable.allAdds, function(t1, t2) return t1[2] < t2[2] end)\n        \n        --this is a \"loop\" because this is running each time a nameplate is added!\n        \n        for namePlateIndex, plateFrame in ipairs(Plater.GetAllShownPlates()) do\n            local unitFrame = plateFrame.unitFrame\n            \n            --get the unit GUID\n            local unitGUID = unitFrame.namePlateUnitGUID\n            \n            for addId = 1, #scriptTable.allAdds do\n                local addTable = scriptTable.allAdds[addId]\n                local addGUID = addTable[1]\n                \n                if (unitGUID == addGUID) then\n                    scriptTable.TagNameplate(unitFrame, unitGUID, addId)\n                    break\n                end\n            end\n            \n        end\n    end\n    \n    function scriptTable.TagNameplate(unitFrame, GUID, addId)\n        scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        \n        if (addId and addId >= 1 and addId <= 8) then\n            unitFrame.AddSpawnIDTexture:Show()\n            unitFrame.AddIcon:Show()\n            unitFrame.AddNumber:Show()\n            \n            local addTexture = \"Interface\\\\TargetingFrame\\\\UI-RaidTargetingIcon_\" .. addId\n            \n            unitFrame.AddIcon:SetTexture(addTexture)\n            unitFrame.AddNumber:SetText(addId)\n        end\n    end\n    \n    function scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        if (not unitFrame.AddSpawnIDTexture) then\n            local healthBar = unitFrame.healthBar\n            \n            local textureBackground = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 5)\n            local addIcon = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 6)\n            local addNumber = healthBar.FrameOverlay:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)           \n            \n            unitFrame.AddSpawnIDTexture = textureBackground\n            unitFrame.AddIcon = addIcon\n            unitFrame.AddNumber = addNumber\n        end\n    end    \nend\n\n--Creature-0-2085-1-11042-153285-0002F8DB2B --training dummy for testing\n--195138 Detonating Crystal\n--192955 dracomoc illusion\n--190294 nokhub stormcaster\n--76518 ritual of bones\n\n\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \n    scriptTable.ArrangeNpcNumbers(unitFrame.namePlateUnitGUID)\n    \n    local textureBackground = unitFrame.AddSpawnIDTexture\n    textureBackground:SetSize(22, 10)\n    textureBackground:ClearAllPoints()\n    textureBackground:SetPoint(\"bottomright\", unitFrame.healthBar, \"topright\", 0, 1)\n    \n    textureBackground:SetMask([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetTexture([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetVertexColor(0.1215, 0.1176, 0.1294, 1)\n    \n    \n    --textureBackground:SetMask([[Interface/ChatFrame/UI-ChatIcon-HotS]])\n    --    \"Interface/ChatFrame/UI-ChatIcon-HotS\"\n    \n    local addIcon = unitFrame.AddIcon\n    addIcon:ClearAllPoints()\n    addIcon:SetPoint(\"left\", textureBackground, \"left\", 2, 0)\n    addIcon:SetSize(10, 10)\n    \n    local addNumber = unitFrame.AddNumber\n    addNumber:ClearAllPoints()\n    addNumber:SetPoint(\"right\", textureBackground, \"right\", -2, 0)\n    DetailsFramework:SetFontSize(addNumber, 10)\n    \nend\n\n\n",
["Icon"] = "interface/addons/plater/images/add_id_icon",
["Name"] = "Add - Tag Number [P]",
["PlaterCore"] = 1,
["semver"] = "",
["Desc"] = "Put a number above multiples adds, numbers follow their respawn id.",
["SpellIds"] = {
},
["version"] = -1,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to run the update as fast as the game framerate\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    --local dotSpeed = abs(envTable._Duration - envTable._RemainingTime) + 1.5\n    --envTable.dotAnimation.textureInfo.speedMultiplier = dotSpeed\nend\n\n\n\n\n",
["Time"] = 1719788204,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = true,
["Revision"] = 613,
["Options"] = {
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height Mod",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Changes the cast bar color to this one.",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Arrow:",
["Value"] = "Arrow:",
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Arrow",
["Value"] = true,
["Key"] = "showArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Arrow alpha.",
["Min"] = 0,
["Key"] = "arrowAlpha",
["Value"] = 1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Alpha",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Width.",
["Min"] = 4,
["Fraction"] = false,
["Value"] = 8,
["Name"] = "Arrow Width",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowWidth",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Height.",
["Min"] = 4,
["Key"] = "arrowHeight",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Height",
},
{
["Type"] = 6,
["Name"] = "Option 13",
["Value"] = 0,
["Key"] = "option13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Dot Animation:",
["Value"] = "Dot Animation:",
["Key"] = "option12",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dot Color",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 4,
["Name"] = "Dot X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 3,
["Key"] = "yOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot Y Offset",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "Option 18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option17",
["Value"] = "Nameplate Color",
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Nameplate Color",
["Value"] = false,
["Key"] = "useNameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.1843137294054031,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Health Bar Color",
},
},
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    Plater.SetCastBarColorForScript(self, true, scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end       \nend\n\n\n\n\n\n\n",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_special_ability.png",
["Name"] = "Cast - Special Ability [P]",
["PlaterCore"] = 1,
["semver"] = "",
["Desc"] = "For unique abilities that are an important part of the fight against a bosses or mini bosse.",
["SpellIds"] = {
451026,
452127,
446615,
433766,
432117,
448560,
440218,
441289,
447146,
438860,
448847,
449687,
456751,
449939,
336499,
322550,
320208,
321894,
276068,
423200,
282801,
1215412,
474298,
339573,
468841,
444034,
},
["version"] = -1,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not self.FrameOverlay.LeapArrow1) then\n        \n        self.FrameOverlay.LeapArrow1 = self.FrameOverlay:CreateTexture(nil, \"overlay\")\n        self.FrameOverlay.LeapArrow2 = self.FrameOverlay:CreateTexture(nil, \"overlay\")\n        self.FrameOverlay.LeapArrow3 = self.FrameOverlay:CreateTexture(nil, \"overlay\")\n        \n        local onPlayFunc = function()\n            --self.FrameOverlay.LeapArrow1:Show()\n            --self.FrameOverlay.LeapArrow2:Show()\n            --self.FrameOverlay.LeapArrow3:Show()            \n        end\n        local onStopFunc = function()\n            self.FrameOverlay.LeapArrow1:Hide()\n            self.FrameOverlay.LeapArrow2:Hide()\n            self.FrameOverlay.LeapArrow3:Hide()\n        end\n        \n        --first arrow animation\n        local animHub1 = DetailsFramework:CreateAnimationHub (self.FrameOverlay.LeapArrow1, onPlayFunc, onStopFunc)\n        animHub1.alpha1 = DetailsFramework:CreateAnimation (animHub1, \"alpha\", 1, 0.3, 0, 0.8)\n        animHub1.trans1 = DetailsFramework:CreateAnimation (animHub1, \"translation\", 1, 0.3, 8, 8)\n        \n        animHub1.alpha2 = DetailsFramework:CreateAnimation (animHub1, \"alpha\", 2, 0.3, 0.8, 0)\n        animHub1.trans2 = DetailsFramework:CreateAnimation (animHub1, \"translation\", 2, 0.3, 8, 8)        \n        \n        self.FrameOverlay.LeapArrow1.animation = animHub1\n        \n        --second arrow animation\n        local animHub2 = DetailsFramework:CreateAnimationHub (self.FrameOverlay.LeapArrow2, onPlayFunc, onStopFunc)\n        animHub2.alpha1 = DetailsFramework:CreateAnimation (animHub2, \"alpha\", 1, 0.3, 0, 0.8)\n        animHub2.trans1 = DetailsFramework:CreateAnimation (animHub2, \"translation\", 1, 0.3, 8, 8)\n        \n        animHub2.alpha2 = DetailsFramework:CreateAnimation (animHub2, \"alpha\", 2, 0.3, 0.8, 0)\n        animHub2.trans2 = DetailsFramework:CreateAnimation (animHub2, \"translation\", 2, 0.3, 8, 8)\n        \n        self.FrameOverlay.LeapArrow2.animation = animHub2\n        \n        --third arrow animation\n        local animHub3 = DetailsFramework:CreateAnimationHub (self.FrameOverlay.LeapArrow3, onPlayFunc, onStopFunc)\n        animHub3.alpha1 = DetailsFramework:CreateAnimation (animHub3, \"alpha\", 1, 0.3, 0, 0.8)\n        animHub3.trans1 = DetailsFramework:CreateAnimation (animHub3, \"translation\", 1, 0.3, 8, 8)\n        \n        animHub3.alpha2 = DetailsFramework:CreateAnimation (animHub3, \"alpha\", 2, 0.3, 0.8, 0)\n        animHub3.trans2 = DetailsFramework:CreateAnimation (animHub3, \"translation\", 2, 0.3, 8, 8)\n        \n        self.FrameOverlay.LeapArrow3.animation = animHub3\n        \n        self.FrameOverlay.LeapArrowTextures = {\n            self.FrameOverlay.LeapArrow1,\n            self.FrameOverlay.LeapArrow2,\n            self.FrameOverlay.LeapArrow3\n        }\n        \n        self.FrameOverlay.LeapArrowAnimations = {\n            alpha1Anim = {},\n            alpha2Anim = {},\n            trans1Anim = {},\n            trans2Anim = {},\n        }\n        \n        self.FrameOverlay.LeapArrowAnimations.alpha1Anim = {animHub1.alpha1, animHub2.alpha1, animHub3.alpha1}\n        self.FrameOverlay.LeapArrowAnimations.alpha2Anim = {animHub1.alpha2, animHub2.alpha2, animHub3.alpha2}\n        self.FrameOverlay.LeapArrowAnimations.trans1Anim = {animHub1.trans1, animHub2.trans1, animHub3.trans1}\n        self.FrameOverlay.LeapArrowAnimations.trans2Anim = {animHub1.trans2, animHub2.trans2, animHub3.trans2}        \n        \n    end\n    \nend\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    ---@type texture[]\n    local leapTextures = self.FrameOverlay.LeapArrowTextures\n    \n    for i, texture in ipairs(leapTextures) do\n        texture:Hide()\n        local animation = texture.animation\n        animation:Stop()\n    end    \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1724073562,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = true,
["Revision"] = 139,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Play an animation when the cast is a Heroic Leap",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "bRenameSpell",
["Value"] = true,
["Name"] = "Rename Spell",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Rename the name of the spell.",
},
{
["Type"] = 3,
["Key"] = "spellName",
["Value"] = "Heroic Leap",
["Name"] = "Spell Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "Name to show in the spell cast bar.",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "bUseCastbarColor",
["Value"] = false,
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change the cast bar color to the color selected below.",
},
{
["Type"] = 1,
["Key"] = "castbarColor",
["Value"] = {
0.364705890417099,
0.1058823615312576,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast Bar Color",
},
},
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.bUseCastbarColor) then\n        Plater.SetCastBarColor (unitFrame, DetailsFramework:ParseColors(scriptTable.config.castbarColor))\n    end\n    \n    \n    if (scriptTable.config.bRenameSpell) then\n        self.Text:SetText(scriptTable.config.spellName) \n    end\n    \n    ---@type texture[]\n    local leapTextures = self.FrameOverlay.LeapArrowTextures\n    for i, texture in ipairs(leapTextures) do\n        texture:SetTexture([[Interface\\AddOns\\Plater\\media\\arrow_right_64.tga]])\n        texture:ClearAllPoints()\n        texture:SetSize(self:GetHeight()*1.5, self:GetHeight()*1.5)\n        texture:SetRotation(math.pi - math.pi*0.75)        \n    end\n    \n    local startX = -10\n    leapTextures[1]:SetPoint(\"left\", self, \"left\", startX, -8)\n    leapTextures[2]:SetPoint(\"center\", self, \"center\", startX, -8)\n    leapTextures[3]:SetPoint(\"right\", self, \"right\", startX, -8)\n    \n    local animations = self.FrameOverlay.LeapArrowAnimations\n    local alpha1Animations = animations.alpha1Anim\n    local alpha2Animations = animations.alpha2Anim    \n    local trans1Animations = animations.trans1Anim\n    local trans2Animations = animations.trans2Anim    \n    \n    local castTime = envTable._Duration\n    \n    --on fade in\n    local fadeInDuration =  castTime/6\n    \n    C_Timer.After(fadeInDuration, function()\n            for i, texture in ipairs(leapTextures) do\n                texture:SetRotation(-math.pi*0.25)\n                --texture:Show()\n            end            \n    end)\n    \n    for i, alphaAnim in ipairs(alpha1Animations) do\n        alphaAnim:SetDuration(fadeInDuration)\n        alphaAnim:SetFromAlpha(0.3)\n        alphaAnim:SetToAlpha(1)\n    end\n    \n    for i, transAnim in ipairs(trans1Animations) do\n        transAnim:SetDuration(fadeInDuration)\n        transAnim:SetOffset(8, 20)\n    end\n    \n    --on fade out\n    local fadeOutDuration = castTime/2\n    \n    for i, alphaAnim in ipairs(alpha2Animations) do\n        alphaAnim:SetDuration(fadeOutDuration)\n        alphaAnim:SetFromAlpha(1)\n        alphaAnim:SetToAlpha(0.3)\n    end\n    \n    for i, transAnim in ipairs(trans2Animations) do\n        transAnim:SetDuration(fadeOutDuration)\n        transAnim:SetOffset(8, -16)\n    end    \n    \n    for i, texture in ipairs(leapTextures) do\n        texture:Show()\n        local animation = texture.animation\n        animation:Play()\n    end\n    \n    \n    --DetailsFramework:DebugVisibility(self.FrameOverlay.LeapArrow1)\nend",
["Icon"] = 236171,
["Name"] = "Cast - Heroic Leap [P]",
["PlaterCore"] = 1,
["semver"] = "",
["Desc"] = "Modify a cast bar when the unit casts a spell with the same effect of the Warrior's Heroic Leap spell.",
["SpellIds"] = {
447141,
432967,
},
["version"] = -1,
},
{
["ConstructorCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.Spark:SetVertexColor( unpack(Plater.db.profile.cast_statusbar_spark_color) )\n    PixelUtil.SetSize( self.Spark, Plater.db.profile.cast_statusbar_spark_width, self:GetHeight() )\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["Time"] = 1719711134,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = true,
["Revision"] = 75,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "In the box at right, add the spell id and the color.",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "To get a list of colors, use: /plater colors",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "Spark Scale",
["Min"] = 1,
["Fraction"] = true,
["Value"] = 1,
["Name"] = "Spark Width Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "sparkWithScale",
},
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "Spark Scale",
["Min"] = 1,
["Name"] = "Spark Height Scale",
["Value"] = 1,
["Key"] = "sparkHeightScale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 7,
["Key"] = "sparkColor",
["Value"] = {
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "",
},
},
["Author"] = "Tennah-These Go To Eleven",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --get the spark color\n    local sparkColor = scriptTable.config.sparkColor[tostring(envTable._SpellID)]\n    \n    self.Spark:SetVertexColor(DetailsFramework:ParseColors(sparkColor))\n    \n    self.Spark:SetWidth( self.Spark:GetWidth() * scriptTable.config.sparkWithScale )\n    self.Spark:SetHeight( self.Spark:GetHeight() * scriptTable.config.sparkHeightScale )\n    \nend\n\n\n",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_spark.png",
["Name"] = "Cast - Spark Color [P]",
["PlaterCore"] = 1,
["semver"] = "",
["Desc"] = "Change the spark color to differentiate a cast from another.",
["SpellIds"] = {
453140,
456713,
450088,
322614,
323730,
257348,
272422,
429427,
},
["version"] = -1,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.stopCastingX) then\n        unitFrame.stopCastingX = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 7)\n        unitFrame.stopCastingX:SetPoint(\"center\", unitFrame.castBar.Spark, \"center\", 0, 0)\n        unitFrame.stopCastingX:SetTexture([[Interface\\AddOns\\Plater\\Media\\stop_64]])\n        unitFrame.stopCastingX:SetSize(16, 16)\n        unitFrame.stopCastingX:Hide()\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:Hide()\n    end\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Hide()    \n    unitFrame.stopCastingX:Hide()\n    \n    self.Text:SetDrawLayer(\"overlay\", 0)\n    self.Spark:SetDrawLayer(\"overlay\", 3)\n    self.Spark:Show()\n    \nend\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100 / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        \n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        --print(envTable.NextPercent, envTable.CurrentTexture)\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1719679972,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = true,
["Revision"] = 551,
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Fraction"] = false,
["Value"] = 20,
["Key"] = "segmentsAmount",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Amount of Segments",
},
{
["Type"] = 1,
["Key"] = "sparkColor",
["Value"] = {
0.9568627450980391,
1,
0.9882352941176471,
1,
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.8588235294117647,
0.4313725490196079,
1,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion + 5, castBar:GetHeight() + math.random(1, 5))\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        \n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2 + math.random(-2, 2))\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        --local duration = 0.6 --debug\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(1)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration + 0.5) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(1)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    unitFrame.stopCastingX:Show()\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    self.Text:SetDrawLayer(\"artwork\", 7)\n    self.Spark:SetDrawLayer(\"artwork\", 7)\n    self.Spark:Hide()\nend\n\n\n\n\n\n\n\n\n",
["Icon"] = "Interface\\AddOns\\Plater\\media\\stop_64",
["Name"] = "Cast - Heal Stun [P]",
["PlaterCore"] = 1,
["semver"] = "",
["Desc"] = "Healing effect that cannot be interrupted.",
["SpellIds"] = {
432520,
320822,
},
["version"] = -1,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1669324381,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = false,
["Revision"] = 887,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces a notable but fast effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Fraction"] = true,
["Value"] = 0.2,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "flashDuration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 0,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "castBarHeight",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.1,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeDuration",
},
{
["Type"] = 2,
["Max"] = 200,
["Desc"] = "How strong is the shake.",
["Min"] = 10,
["Name"] = "Shake Amplitude",
["Value"] = 25,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeAmplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Name"] = "Shake Frequency",
["Value"] = 30,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeFrequency",
},
},
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_quickflash.tga",
["Name"] = "Cast - Quick Flash [P]",
["PlaterCore"] = 1,
["semver"] = "",
["Desc"] = "Play a very fast flash when the cast start",
["SpellIds"] = {
392640,
397888,
209033,
385029,
374563,
377341,
369675,
369365,
369411,
278961,
202108,
88186,
255824,
252781,
250096,
200248,
197797,
264520,
418202,
201839,
412012,
411958,
},
["version"] = -1,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsShowingCastBarTest) then\n        --don't execute on battlegrounds and arenas\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end    \n    end\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1741042861,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = true,
["Revision"] = 1285,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.1098039299249649,
0.1137254983186722,
1,
},
["Key"] = "castbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Fraction"] = true,
["Value"] = 0.1,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "flashDuration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 0,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "castBarHeight",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.1,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeDuration",
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Name"] = "Shake Amplitude",
["Value"] = 2,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeAmplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Name"] = "Shake Frequency",
["Value"] = 10,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeFrequency",
},
},
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (not Plater.IsShowingCastBarTest) then\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end\n    end\n    \n    --don't execute if the player is not the tank\n    if (not Plater.IsPlayerTank()) then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_tankbuster.png",
["Name"] = "Cast - Tankbuster [P]",
["PlaterCore"] = 1,
["semver"] = "",
["Desc"] = "Abilities casted on the tank.",
["SpellIds"] = {
280604,
1215411,
1215065,
331316,
320644,
330586,
323515,
324079,
434773,
432229,
439031,
473351,
459799,
469478,
465666,
466190,
448485,
424414,
448515,
},
["version"] = -1,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a texture to use for a flash behind the cast bar\n    \n    if (not unitFrame.backGroundFlashTextureImpTarget) then\n        unitFrame.backGroundFlashTextureImpTarget =  Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    end\n    \n    local backGroundFlashTexture = unitFrame.backGroundFlashTextureImpTarget\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    --create the target unit name box\n    if (not unitFrame.targetBox) then\n        unitFrame.targetBox = CreateFrame(\"frame\", unitFrame:GetName() .. \"ScriptImportantTarget\", unitFrame, \"BackdropTemplate\")\n        unitFrame.targetBox:SetSize(80, 20)\n        unitFrame.targetBox:SetFrameStrata(\"TOOLTIP\")\n        unitFrame.targetBox:Hide()\n        unitFrame.targetBox:SetPoint(\"left\", unitFrame, \"right\", 0, 0)\n        \n        unitFrame.targetBox:SetBackdrop({edgeFile = [[Interface\\Buttons\\WHITE8X8]], edgeSize = 1, bgFile = [[Interface\\AddOns\\Details\\images\\background]], tile = true, tileSize = 16})\n        unitFrame.targetBox:SetBackdropColor(.2, .2, .2, .8)\n        unitFrame.targetBox:SetBackdropBorderColor(0, 0, 0, 1)\n        \n        unitFrame.targetBoxName = unitFrame.targetBox:CreateFontString(nil, \"artwork\", \"GameFontNormal\")\n        unitFrame.targetBoxName:SetPoint(\"center\")\n    end\n    \n    function envTable.UpdateTargetBox(unitFrame, unitId)\n        local targetUnitId = unitId .. \"target\"\n        local unitName = UnitName(targetUnitId)\n        \n        if (unitName) then\n            if (scriptTable.config.colorByClass) then\n                Plater:SetFontColor(unitFrame.targetBoxName, \"white\")\n                unitName = Plater.SetTextColorByClass(targetUnitId, unitName)\n            else\n                Plater:SetFontColor(unitFrame.targetBoxName, scriptTable.config.textColor)\n            end\n            \n            unitFrame.targetBoxName:SetText(unitName)\n            Plater:SetFontSize(unitFrame.targetBoxName, scriptTable.config.targetNameSize)\n            unitFrame.targetBox:SetBackdropColor(Plater:ParseColors(scriptTable.config.targetBgColor))\n            unitFrame.targetBox:SetBackdropBorderColor(Plater:ParseColors(scriptTable.config.targetBgBorderColor))\n            unitFrame.targetBox:Show()\n            \n            unitFrame.targetBox:SetWidth(scriptTable.config.targetFrameWidth)\n            unitFrame.targetBox:SetHeight(scriptTable.config.targetFrameHeight)\n            \n            if (not Plater.HasDotAnimationPlaying(unitFrame.targetBox)) then\n                envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.targetBox, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n            end\n            \n            unitFrame.backGroundFlashTextureImpTarget:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n            \n            return true\n            \n        end\n    end\n    \nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.targetBox, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \n    unitFrame.targetBox:Hide()\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.UpdateTargetBox(unitFrame, unitId) \n    \nend\n\n\n",
["Time"] = 1669339628,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = true,
["Revision"] = 878,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Shows the target name in a separate box",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Flash:",
["Name"] = "Flash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Name"] = "Flash Duration",
["Value"] = 0.8,
["Key"] = "flashDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Key"] = "flashColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Flash Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Shake",
["Value"] = "Shake:",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Name"] = "Shake Duration",
["Value"] = 0.2,
["Key"] = "shakeDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Name"] = "Shake Amplitude",
["Value"] = 5,
["Key"] = "shakeAmplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Name"] = "Shake Frequency",
["Value"] = 40,
["Key"] = "shakeFrequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option14",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
0.5647058823529412,
0.5647058823529412,
0.5647058823529412,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 8,
["Key"] = "xOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Name"] = "Dot Y Offset",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "yOffset",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option19",
["Value"] = "Cast Bar",
["Name"] = "Option 19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Use Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
0.4117647058823529,
1,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
{
["Type"] = 6,
["Name"] = "Option 27",
["Value"] = 0,
["Key"] = "option27",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 28",
["Value"] = "Target Options",
["Key"] = "option28",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "",
["Min"] = 8,
["Name"] = "Text Size",
["Value"] = 14,
["Key"] = "targetNameSize",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 4,
["Name"] = "Use Class Color",
["Value"] = true,
["Key"] = "colorByClass",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Text Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "textColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Background Color",
["Value"] = {
0,
0,
0,
0.9846720322966576,
},
["Key"] = "targetBgColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Border Color",
["Value"] = {
0,
0,
0,
1,
},
["Key"] = "targetBgBorderColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 160,
["Desc"] = "",
["Min"] = 30,
["Name"] = "Frame Width",
["Value"] = 90,
["Key"] = "targetFrameWidth",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "",
["Min"] = 8,
["Key"] = "targetFrameHeight",
["Value"] = 20,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Frame Height",
},
},
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable.UpdateTargetBox(unitFrame, unitId)) then\n        \n        envTable.BackgroundFlash:Play()\n        \n        Plater.FlashNameplateBorder (unitFrame, 0.05)   \n        Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n        \n        unitFrame:PlayFrameShake (envTable.FrameShake)\n        \n        if (envTable._CanInterrupt) then\n            if (scriptTable.config.useCastbarColor) then\n                self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\n            end\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_target",
["Name"] = "Cast - Important Target [P]",
["PlaterCore"] = 1,
["semver"] = "",
["Desc"] = "Highlight the target name",
["SpellIds"] = {
270042,
260813,
},
["version"] = -1,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \n    --check if there's a timer for this spell\n    local timer = scriptTable.config.timerList[tostring(envTable._SpellID)]\n    \n    if (timer) then\n        --insert code here\n        \n        --set the castbar config\n        local config = {\n            iconTexture = \"\",\n            iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n            iconAlpha = 1,\n            iconSize = 14,\n            \n            text = \"Spikes Incoming!\",\n            textSize = 8,\n            \n            texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n            color = {.6, .6, .6, 0.8},\n            \n            isChanneling = false,\n            canInterrupt = false,\n            \n            height = 5,\n            width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n            \n            spellNameAnchor = {side = 3, x = 0, y = -2},\n            timerAnchor = {side = 5, x = 0, y = -2},\n        }\n        \n        Plater.SetAltCastBar(unitFrame.PlateFrame, config, timer, nil, nil)\n        local castBar2 = unitFrame.castBar2\n        castBar2.Text:ClearAllPoints()\n        castBar2.Text:SetPoint (\"topleft\", castBar2, \"bottomleft\", 0, 0)\n        castBar2.percentText:ClearAllPoints()\n        castBar2.percentText:SetPoint (\"topright\", castBar2, \"bottomright\", 0, 0)\n        Plater:SetFontSize(castBar2.percentText, 8)\n    end\n    \nend\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1625793282,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = true,
["Revision"] = 1154,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Cast start animation settings",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Cast Bar Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Key"] = "castbarColor",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Key"] = "flashDuration",
["Value"] = 0.4,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 5,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Key"] = "shakeAmplitude",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
{
["Type"] = 7,
["Name"] = "Timer (Key is SpellId and Value is Time)",
["Value"] = {
{
"350421",
"5",
},
{
"355787",
"15",
},
{
"348513",
"14",
},
{
"348513",
"14",
},
},
["Key"] = "timerList",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Key is the spellId and value is the amount of time of the Timer",
},
},
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
["Name"] = "Cast - Alert + Timer [P]",
["PlaterCore"] = 1,
["semver"] = "",
["Desc"] = "Player an animation when the cast start. Start a timer when the cast finishes. Set the time in the options.",
["SpellIds"] = {
350421,
355787,
348513,
},
["version"] = -1,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do --max amount of segments is 20\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.Textures) then\n        for i = 1, scriptTable.config.segmentsAmount  do\n            local texture = unitFrame.felAnimation.Textures[i]\n            if (texture) then\n                texture:Hide()\n            end\n        end\n    end\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.textureStretched) then\n        local textureStretched = unitFrame.felAnimation.textureStretched\n        if (textureStretched) then\n            textureStretched:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (not envTable.NextPercent) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then --eeror here, compare with nil\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1672514190,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = false,
["Revision"] = 547,
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Key"] = "segmentsAmount",
["Value"] = 7,
["Name"] = "Amount of Segments",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 1,
["Key"] = "sparkColor",
["Value"] = {
0.9568627450980391,
1,
0.9882352941176471,
1,
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.8588235294117647,
0.4313725490196079,
1,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 7,
["Key"] = "castColor",
["Value"] = {
{
"385536",
"maroon",
},
{
"198750",
"midnightblue",
},
{
"360850",
"lime",
},
{
"212784",
"deepskyblue",
},
{
"207980",
"midnightblue",
},
{
"199033",
"gold",
},
{
"199034",
"gold",
},
{
"200969",
"orange",
},
{
"394512",
"indigo",
},
{
"397881",
"deepskyblue",
},
{
"396020",
"khaki",
},
},
["Name"] = "Cast Color by SpellID",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Insert the Spell ID in the to Key and a color name into the Value",
},
},
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    Plater.SetCastBarColorForScript(self, true, customColor or scriptTable.config.castBarColor, envTable)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_glow",
["Name"] = "Cast - Glowing [P]",
["PlaterCore"] = 1,
["semver"] = "",
["Desc"] = "Show a different animation for the cast bar.",
["SpellIds"] = {
376644,
386781,
384823,
385536,
392398,
375596,
387135,
360850,
212784,
199033,
199034,
200969,
394512,
397881,
396020,
374430,
384353,
265376,
193941,
411002,
169445,
},
["version"] = -1,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1673994690,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = false,
["Revision"] = 828,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a big animation when the cast start.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Flash:",
["Name"] = "Flash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.8,
["Key"] = "flashDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 1,
["Key"] = "flashColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Flash Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Shake",
["Value"] = "Shake:",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "shakeDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 5,
["Key"] = "shakeAmplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 40,
["Key"] = "shakeFrequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option14",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
0.5647058823529412,
0.5647058823529412,
0.5647058823529412,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Name"] = "Dot X Offset",
["Value"] = 8,
["Key"] = "xOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Key"] = "yOffset",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot Y Offset",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option19",
["Value"] = "Cast Bar",
["Name"] = "Option 19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Use Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
0.4117647058823529,
1,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
},
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    --Dominator on Shadowmoon Burial Grounds\n    if (envTable._SpellID == 154327) then\n        if (UnitHealth(unitId) == UnitHealthMax(unitId)) then\n            if (envTable._Duration == 604800) then\n                Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, {1, 0, 0, 1}, envTable)\n            end\n        end\n    end\nend",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_darkorange",
["Name"] = "Cast - Very Important [Plater]",
["PlaterCore"] = 1,
["semver"] = "",
["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
["SpellIds"] = {
373046,
372863,
164686,
153072,
153680,
196497,
388886,
387145,
384365,
152964,
398150,
152801,
397878,
397914,
183263,
3636,
376171,
350687,
372735,
373017,
350687,
392488,
257732,
256060,
257899,
384633,
374339,
395694,
391634,
372701,
369328,
265487,
413044,
183526,
88194,
87762,
413385,
411001,
378282,
384161,
259572,
255371,
427460,
429172,
426500,
413607,
412922,
417481,
201399,
411994,
415770,
260907,
260703,
260741,
265876,
263959,
266225,
253517,
377488,
},
["version"] = -1,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (not healthBar.absorbBar) then\n        healthBar.absorbBar = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n        healthBar.absorbBar:Hide()\n    end\n    \n    if (not healthBar.absorbSpark) then\n        healthBar.absorbSpark = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbSpark:SetTexture([[Interface\\CastingBar\\UI-CastingBar-Spark]])\n        healthBar.absorbSpark:SetBlendMode(\"ADD\")\n        healthBar.absorbSpark:Hide()\n    end\n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Hide()    \n    healthBar.absorbSpark:Hide()\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    local maxValue = healthBar.absorbBar.MaxValue\n    local currentValue = UnitGetTotalAbsorbs(unitId) or 0\n    \n    if (currentValue > 0) then\n        local minValue = 0\n        \n        local percent = currentValue / maxValue\n        healthBar.absorbBar:SetTexCoord(0, percent, 0, 1)\n        healthBar.absorbBar:SetWidth(percent * healthBar:GetWidth())\n        \n        healthBar.absorbSpark:SetPoint(\"left\", healthBar, \"left\", percent * healthBar:GetWidth() - 16, 0)\n        \n    else\n        healthBar.absorbBar:Hide()    \n        healthBar.absorbSpark:Hide()\n    end\n    \n    self.ThrottleUpdate = 0\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1669325411,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = true,
["Revision"] = 101,
["Options"] = {
},
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n    \n    healthBar.absorbBar:ClearAllPoints()    \n    healthBar.absorbBar:SetPoint(\"topleft\", healthBar, \"topleft\", 0, 0)\n    healthBar.absorbBar:SetPoint(\"bottomleft\", healthBar, \"bottomleft\", 0, 0)\n    \n    healthBar.absorbBar:SetAlpha(1)\n    \n    healthBar.absorbBar.MaxValue = UnitGetTotalAbsorbs(unitId) or 0\n    healthBar.absorbBar.MinValue = 0\nend\n\n\n",
["Icon"] = "interface/addons/plater/images/cast_bar - absorb",
["Name"] = "Cast - Shield Interrupt [P]",
["PlaterCore"] = 1,
["semver"] = "",
["Desc"] = "When the caster has a shield and only when the shield is removed the cast can be interrupted",
["SpellIds"] = {
373688,
391050,
},
["version"] = -1,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local DF = DetailsFramework\n    \n    function envTable.PlaySwipeAnimation(unitFrame)\n        unitFrame.CastSwipeTexture2:Show()\n        unitFrame.CastSwipeAnimation2:Play()\n        unitFrame.StartSwipeAnimation2:Play()\n    end\n    \n    function envTable.StopSwipeAnimation(unitFrame)\n        unitFrame.EndSwipeAnimation2:Play()\n        C_Timer.After(0.21, function()\n                unitFrame.CastSwipeAnimation2:Stop()\n                unitFrame.CastSwipeTexture2:Hide()\n        end)\n    end\n    \n    function envTable.CreateSwipeTextureAndAnimations(unitFrame)\n        if (unitFrame.CastSwipeTexture2) then\n            return\n        end\n        \n        local circularTexture = unitFrame:CreateTexture(nil, \"overlay\")\n        circularTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\cast_bar_circular_swipe2.png]])\n        circularTexture:SetPoint(\"center\", 0, 0)\n        circularTexture:SetSize(64, 64)\n        circularTexture:Hide()\n        \n        unitFrame.CastSwipeTexture2 = circularTexture\n        \n        --rotation animation\n        unitFrame.CastSwipeAnimation2 = DF:CreateAnimationHub(circularTexture)\n        unitFrame.CastSwipeAnimation2:SetLooping(\"repeat\")\n        unitFrame.CastSwipeAnimation2.Rotation = DF:CreateAnimation(unitFrame.CastSwipeAnimation2, \"rotation\", 1, 1, 360)\n        unitFrame.CastSwipeAnimation2.Trans = DF:CreateAnimation(unitFrame.CastSwipeAnimation2, \"TRANSLATION\", 1, 1, 2, 2)\n        \n        --starting animation\n        unitFrame.StartSwipeAnimation2 = DF:CreateAnimationHub(circularTexture, function()circularTexture:Show() end)\n        \n        unitFrame.StartSwipeAnimation2.Alpha = DF:CreateAnimation(unitFrame.StartSwipeAnimation2, \"alpha\", 1, 0.2, 0, 1)\n        unitFrame.StartSwipeAnimation2.Scale = DF:CreateAnimation(unitFrame.StartSwipeAnimation2, \"scale\", 1, 0.2, 1.3, 1.3, 1, 1)        \n        \n        --finished animation\n        unitFrame.EndSwipeAnimation2 = DF:CreateAnimationHub(circularTexture, nil, function()circularTexture:Hide() end)\n        \n        unitFrame.EndSwipeAnimation2.Alpha = DF:CreateAnimation(unitFrame.EndSwipeAnimation2, \"alpha\", 1, 0.2, 1, 0)\n        \n        unitFrame.EndSwipeAnimation2.Scale = DF:CreateAnimation(unitFrame.EndSwipeAnimation2, \"scale\", 1, 0.2, 1, 1, 1.3, 1.3)\n        \n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.StopSwipeAnimation(unitFrame)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1719757483,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = true,
["Revision"] = 318,
["Options"] = {
{
["Type"] = 2,
["Max"] = 0.3,
["Desc"] = "How much time takes for one revolution.",
["Min"] = 0.1,
["Key"] = "rotationDuration",
["Value"] = 0.2,
["Name"] = "Rotation Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.5,
["Desc"] = "Animation Start Duration",
["Min"] = 0,
["Key"] = "animStartDuration",
["Value"] = 0.05,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Animation Start Duration",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha when the animation start playing, this effect in intended to catch the player attention",
["Min"] = 0,
["Name"] = "Texture Start Alpha",
["Value"] = 1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "textureStartAlpha",
},
{
["Type"] = 6,
["Name"] = "Option 5",
["Value"] = 0,
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "Texture Scale",
["Min"] = 0.6,
["Key"] = "textureScale",
["Value"] = 0.9,
["Name"] = "Texture Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha",
["Min"] = 0,
["Key"] = "textureAlpha",
["Value"] = 1,
["Name"] = "Texture Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Key"] = "textureColor",
["Value"] = {
0.6392157077789307,
0.6392157077789307,
0.6392157077789307,
1,
},
["Name"] = "Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
},
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CreateSwipeTextureAndAnimations(unitFrame)\n    \n    local options = scriptTable.config\n    \n    local targetScale = options.textureScale\n    \n    local circularTexture = unitFrame.CastSwipeTexture2\n    \n    --texture settings\n    circularTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\cast_bar_circular_swipe2.png]])\n    circularTexture:SetPoint(\"center\", 0, 0)\n    circularTexture:SetSize(64, 64)    \n    circularTexture:SetBlendMode(\"ADD\")\n    circularTexture:SetVertexColor(DetailsFramework:ParseColors(options.textureColor))\n    circularTexture:SetScale(targetScale)\n    circularTexture:SetAlpha(options.textureAlpha)\n    \n    --animations    \n    unitFrame.CastSwipeAnimation2.Rotation:SetDuration(options.rotationDuration)\n    unitFrame.CastSwipeAnimation2.Trans:SetDuration(options.rotationDuration)\n    \n    local randomOffset = 5\n    unitFrame.CastSwipeAnimation2.Trans:SetOffset(math.random(-randomOffset, randomOffset), math.random(-randomOffset, randomOffset))\n    \n    \n    unitFrame.StartSwipeAnimation2.Alpha:SetDuration(options.animStartDuration)\n    unitFrame.StartSwipeAnimation2.Alpha:SetFromAlpha(options.textureStartAlpha)\n    unitFrame.StartSwipeAnimation2.Alpha:SetToAlpha(options.textureAlpha)\n    \n    unitFrame.StartSwipeAnimation2.Scale:SetDuration(options.animStartDuration)\n    unitFrame.StartSwipeAnimation2.Scale:SetScaleTo(targetScale, targetScale)\n    \n    unitFrame.EndSwipeAnimation2.Scale:SetDuration(0.1)\n    unitFrame.EndSwipeAnimation2.Alpha:SetDuration(0.1)\n    \n    --start playing\n    envTable.PlaySwipeAnimation(unitFrame)     \n    \nend\n\n\n\n\n",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_circular_swipe2_icon.png",
["Name"] = "Cast - AoE Hit All [P]",
["PlaterCore"] = 1,
["semver"] = "",
["Desc"] = "Play a animation when the spell effect is an circular AoE around the caster.",
["SpellIds"] = {
451102,
426787,
448888,
439811,
434796,
434793,
438879,
438473,
434252,
434829,
440468,
436205,
436246,
441395,
437533,
451965,
456902,
456900,
451996,
451939,
450077,
450079,
324909,
324922,
460092,
272711,
269266,
425974,
424879,
426771,
426786,
423324,
428879,
258622,
269429,
271456,
1215102,
1215409,
291946,
297128,
1215741,
330716,
463206,
442995,
435622,
465827,
460156,
1218117,
428266,
427404,
1214628,
424431,
448791,
},
["version"] = -1,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a flash texture which keep blinking while the cast in going on\n    self.OGC_BlinkTexture = self.OGC_BlinkTexture or self:CreateTexture(nil, \"overlay\")\n    self.OGC_BlinkTexture:SetColorTexture(1, 1, 1)\n    self.OGC_BlinkTexture:SetAlpha(0)\n    \n    --create the animation group for the blinking texture\n    self.OGC_BlinkAnimation = self.OGC_BlinkAnimation or Plater:CreateAnimationHub(self.OGC_BlinkTexture, function() self.OGC_BlinkTexture:Show() end, function() self.OGC_BlinkTexture:Hide() end)\n    \n    self.OGC_BlinkAnimation.In = self.OGC_BlinkAnimation.In or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 1, 0.5, 0.3, 1)\n    \n    self.OGC_BlinkAnimation.Out = self.OGC_BlinkAnimation.Out or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 2, 0.5, 1, 0.2)    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkAnimation:Stop()\n    \n    Plater.StopDotAnimation(self, envTable.dotAnimation1)    \n    Plater.StopDotAnimation(self, envTable.dotAnimation2)   \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1676905232,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = false,
["Revision"] = 73,
["Options"] = {
{
["Type"] = 1,
["Name"] = "Dots Color",
["Value"] = {
1,
1,
1,
0.4166216850280762,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Dots Color",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 0,
["Name"] = "Dots X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots Y Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 0,
["Key"] = "yOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dots Y Offset",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Adjust how fast the blinking occurs",
["Min"] = 0.2,
["Name"] = "Blink Speed",
["Value"] = 0.4,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "speed",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Min amount of transparency the blink can have",
["Min"] = 0,
["Name"] = "Blink Min Alpha",
["Value"] = 0,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "minAlpha",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Max amount of transparency the blink can have",
["Min"] = 0,
["Key"] = "maxAlpha",
["Value"] = 0.5,
["Name"] = "Blink Max Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Key"] = "blinkColor",
["Value"] = {
1,
0.01960784383118153,
0,
1,
},
["Name"] = "Blink Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the blinking texture",
},
},
["Author"] = "Ditador-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkTexture:ClearAllPoints()\n    self.OGC_BlinkTexture:SetPoint(\"topleft\", self, \"topleft\", 0, 0)\n    self.OGC_BlinkTexture:SetPoint(\"bottomright\", self, \"bottomright\", 0, 0)\n    \n    local red, green, blue = Plater:ParseColors(scriptTable.config.blinkColor)\n    self.OGC_BlinkTexture:SetVertexColor(red, green, blue)\n    \n    local blinkSpeed = scriptTable.config.speed\n    \n    self.OGC_BlinkAnimation.In:SetDuration(blinkSpeed)\n    self.OGC_BlinkAnimation.Out:SetDuration(blinkSpeed)\n    \n    local minBlinkAlpha = scriptTable.config.minAlpha\n    local maxBlinkAlpha = scriptTable.config.maxAlpha\n    \n    self.OGC_BlinkAnimation.In:SetFromAlpha(minBlinkAlpha)\n    self.OGC_BlinkAnimation.In:SetToAlpha(maxBlinkAlpha)\n    self.OGC_BlinkAnimation.Out:SetFromAlpha(maxBlinkAlpha)    \n    self.OGC_BlinkAnimation.Out:SetToAlpha(minBlinkAlpha)\n    \n    self.OGC_BlinkAnimation:SetLooping(\"repeat\")\n    self.OGC_BlinkAnimation:Play()\n    \n    envTable.dotAnimation1 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation1.textureInfo.speedMultiplier = 0.3\n    \n    envTable.dotAnimation2 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation2.textureInfo.speedMultiplier = 1\n    \nend",
["Icon"] = 4038101,
["Name"] = "Cast - On Going Cast [P]",
["PlaterCore"] = 1,
["semver"] = "",
["Desc"] = "The background of the nameplate blinks a red color indicating the cast is being performed. Useful to indicate channeling spells doing damage overtime.",
["SpellIds"] = {
388886,
209676,
377912,
},
["version"] = -1,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    for i = 1, 40 do\n        local auraInfo = C_UnitAuras.GetBuffDataByIndex(envTable._UnitID, i)\n        if (auraInfo) then\n            local spellId = auraInfo.spellId\n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        else\n            break\n        end\n    end\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
["Time"] = 1725033998,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = true,
["Revision"] = 83,
["Options"] = {
},
["Author"] = "Keyspell-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Icon"] = 610472,
["Name"] = "Aura is Shield [P]",
["PlaterCore"] = 1,
["semver"] = "",
["Desc"] = "Show power bar where its value is the buff value (usualy shown in the buff tooltip)",
["SpellIds"] = {
343470,
423228,
},
["version"] = -1,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n--190187 draconic image\n--189893 infused whelp\n--99922 Ebonclaw Packmate\n--104822 flames of woe",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.onShowAddToKillFlash:Stop()\n    \nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\nend\n\n\n\n\n",
["Time"] = 1670427654,
["url"] = "",
["NpcNames"] = {
"190187",
"189893",
"99922",
"104822",
129758,
186696,
101075,
100818,
98081,
52019,
},
["Enabled"] = true,
["Revision"] = 162,
["Options"] = {
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = true,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
1,
0.4392157196998596,
0.458823561668396,
1,
},
["Key"] = "healthBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Flash Nameplate",
["Value"] = true,
["Key"] = "useFlash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Flash Nameplate",
},
{
["Type"] = 7,
["Name"] = "NpcID to Color",
["Value"] = {
{
"189893",
"olivedrab",
},
{
"190187",
"olivedrab",
},
{
"99922",
"olivedrab",
},
{
"153285",
"olivedrab",
},
{
"104822",
"olivedrab",
},
},
["Key"] = "npcColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "If the npc isn't on this list, use the default color set in the Health Bar Color",
},
},
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame.onShowAddToKillFlash = unitFrame.onShowAddToKillFlash or Plater.CreateFlash (unitFrame.healthBar, 0.25, 1, \"white\")\n    \n    if (scriptTable.config.useFlash) then\n        unitFrame.onShowAddToKillFlash:Play()\n    end\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end\nend\n\n\n\n\n\n\n\n\n\n",
["Icon"] = "interface/addons/plater/media/exclamation_64",
["Name"] = "Add - Warning [P]",
["PlaterCore"] = 1,
["semver"] = "",
["Desc"] = "Change the color of  add",
["SpellIds"] = {
},
["version"] = -1,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    self.simpleInterruptFlash = self.simpleInterruptFlash or  Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    \n    self.simpleInterruptFlash:SetBlendMode (\"ADD\")\n    self.simpleInterruptFlash:SetDrawLayer(\"OVERLAY\", 7)\n    self.simpleInterruptFlash:SetPoint (\"center\", self, \"center\")\n    self.simpleInterruptFlash:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    self.simpleInterruptFlashAnimHub = self.simpleInterruptFlashAnimHub or Plater:CreateAnimationHub (self.simpleInterruptFlash, \n        function()\n            self.simpleInterruptFlash:Show()\n        end,\n        function()\n            self.simpleInterruptFlash:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    self.simpleInterruptFlashAnimHub.fadeIn = self.simpleInterruptFlashAnimHub.fadeIn or Plater:CreateAnimation (self.simpleInterruptFlashAnimHub, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    self.simpleInterruptFlashAnimHub.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    self.simpleInterruptFlashAnimHub.fadeOut = self.simpleInterruptFlashAnimHub.fadeOut or Plater:CreateAnimation (self.simpleInterruptFlashAnimHub, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    self.simpleInterruptFlashAnimHub.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if ( not envTable._CanInterrupt ) then\n        return\n    end\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    self.simpleInterruptFlashAnimHub:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1719711128,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = true,
["Revision"] = 958,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces a notable but fast effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Fraction"] = true,
["Value"] = 0.2,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "flashDuration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 0,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "castBarHeight",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.1,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeDuration",
},
{
["Type"] = 2,
["Max"] = 200,
["Desc"] = "How strong is the shake.",
["Min"] = 10,
["Name"] = "Shake Amplitude",
["Value"] = 25,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeAmplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Name"] = "Shake Frequency",
["Value"] = 30,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeFrequency",
},
},
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if ( not envTable._CanInterrupt ) then\n        return\n    end\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    self.simpleInterruptFlash:SetHeight(self:GetHeight() * 2.5 )\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    self.simpleInterruptFlashAnimHub:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_quickflash.tga",
["Name"] = "Cast - Simple Interrupt [P]",
["PlaterCore"] = 1,
["semver"] = "",
["Desc"] = "Play a very fast flash when the cast start.",
["SpellIds"] = {
431333,
442210,
443430,
443433,
451871,
76711,
334748,
334749,
328667,
338353,
445207,
269302,
263215,
342675,
453909,
462771,
424322,
426145,
427260,
},
["version"] = -1,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local plateFrame = unitFrame.PlateFrame\n    \n    if (not plateFrame.BWC_RedBackground) then\n        plateFrame.BWC_RedBackground = plateFrame:CreateTexture(nil, \"background\")\n        plateFrame.BWC_RedBackground:SetAllPoints()\n    end\n    \n    plateFrame.BWC_RedBackground:SetTexture([[Interface/AddOns/Plater/masks/mask1]])\n    plateFrame.BWC_RedBackground:Hide()\n    \n    function envTable.ShowBackground(unitFrame)\n        local plateFrame = unitFrame.PlateFrame\n        plateFrame.BWC_RedBackground:SetVertexColor(1, 0, 0, 0.4)\n        plateFrame.BWC_RedBackground:Show()\n    end\n    \n    function envTable.HideBackground(unitFrame)\n        plateFrame.BWC_RedBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.HideBackground(unitFrame)\nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (Plater.UnitIsCasting(unitId)) then\n        envTable.ShowBackground(unitFrame)\n    else\n        envTable.HideBackground(unitFrame)\n    end\n    \nend",
["Time"] = 1673726734,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = true,
["Revision"] = 18,
["Options"] = {
},
["Author"] = "Tiranaa-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Icon"] = 236209,
["Name"] = "Aura While Casting [P]",
["PlaterCore"] = 1,
["semver"] = "",
["Desc"] = "Highlight the nameplate of a unit when has a certain Buff (trigger) and start to cast a spell",
["SpellIds"] = {
372743,
372749,
384933,
},
["version"] = -1,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsShowingCastBarTest) then\n        --don't execute on battlegrounds and arenas\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end    \n    end\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1670203603,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = false,
["Revision"] = 1194,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Key"] = "castbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Name"] = "Flash Duration",
["Value"] = 0.4,
["Key"] = "flashDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Name"] = "Cast Bar Height Mod",
["Value"] = 5,
["Key"] = "castBarHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Name"] = "Shake Duration",
["Value"] = 0.2,
["Key"] = "shakeDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Fraction"] = false,
["Value"] = 8,
["Key"] = "shakeAmplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 40,
["Key"] = "shakeFrequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
},
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (not Plater.IsShowingCastBarTest) then\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
["Name"] = "Cast - Big Alert [Plater]",
["PlaterCore"] = 1,
["semver"] = "",
["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
["SpellIds"] = {
396640,
372743,
377389,
396812,
388392,
387955,
386546,
377503,
384808,
386024,
387615,
387606,
225100,
211401,
211470,
215433,
192563,
198959,
152818,
156776,
398206,
153524,
396073,
396018,
345202,
377950,
372223,
350421,
352158,
349985,
329239,
328400,
384194,
392451,
392924,
397889,
209413,
207980,
257397,
257736,
382787,
374699,
377402,
369602,
369465,
369400,
381593,
265091,
265433,
382791,
376780,
225573,
278444,
164887,
168082,
76813,
227913,
265368,
},
["version"] = -1,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a flash texture which keep blinking while the cast in going on\n    self.OGC_BlinkTexture = self.OGC_BlinkTexture or self:CreateTexture(nil, \"overlay\")\n    self.OGC_BlinkTexture:SetColorTexture(1, 1, 1)\n    self.OGC_BlinkTexture:SetAlpha(0)\n    \n    --create the animation group for the blinking texture\n    self.OGC_BlinkAnimation = self.OGC_BlinkAnimation or Plater:CreateAnimationHub(self.OGC_BlinkTexture, function() self.OGC_BlinkTexture:Show() end, function() self.OGC_BlinkTexture:Hide() end)\n    \n    self.OGC_BlinkAnimation.In = self.OGC_BlinkAnimation.In or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 1, 0.5, 0.3, 1)\n    \n    self.OGC_BlinkAnimation.Out = self.OGC_BlinkAnimation.Out or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 2, 0.5, 1, 0.2)    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkAnimation:Stop()\n    \n    Plater.StopDotAnimation(self, envTable.dotAnimation1)    \n    Plater.StopDotAnimation(self, envTable.dotAnimation2)   \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    --self.Text:Hide() \nend\n\n\n",
["Time"] = 1723155144,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = true,
["Revision"] = 158,
["Options"] = {
{
["Type"] = 1,
["Name"] = "Dots Color",
["Value"] = {
1,
1,
1,
0.4166216850280762,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Dots Color",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots X Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 0,
["Key"] = "xOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dots X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots Y Offset",
["Min"] = -10,
["Name"] = "Dots Y Offset",
["Value"] = 0,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "yOffset",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Adjust how fast the blinking occurs",
["Min"] = 0.2,
["Key"] = "speed",
["Value"] = 0.4,
["Name"] = "Blink Speed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Min amount of transparency the blink can have",
["Min"] = 0,
["Key"] = "minAlpha",
["Value"] = 0,
["Name"] = "Blink Min Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Max amount of transparency the blink can have",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.5,
["Key"] = "maxAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Blink Max Alpha",
},
{
["Type"] = 1,
["Key"] = "blinkColor",
["Value"] = {
1,
0.5254902243614197,
0.5137255191802979,
1,
},
["Name"] = "Blink Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the blinking texture",
},
},
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkTexture:ClearAllPoints()\n    self.OGC_BlinkTexture:SetPoint(\"topleft\", self, \"topleft\", 0, 0)\n    self.OGC_BlinkTexture:SetPoint(\"bottomright\", self, \"bottomright\", 0, 0)\n    \n    local red, green, blue = Plater:ParseColors(scriptTable.config.blinkColor)\n    self.OGC_BlinkTexture:SetVertexColor(red, green, blue)\n    \n    local blinkSpeed = scriptTable.config.speed\n    \n    self.OGC_BlinkAnimation.In:SetDuration(blinkSpeed)\n    self.OGC_BlinkAnimation.Out:SetDuration(blinkSpeed)\n    \n    local minBlinkAlpha = scriptTable.config.minAlpha\n    local maxBlinkAlpha = scriptTable.config.maxAlpha\n    \n    self.OGC_BlinkAnimation.In:SetFromAlpha(minBlinkAlpha)\n    self.OGC_BlinkAnimation.In:SetToAlpha(maxBlinkAlpha)\n    self.OGC_BlinkAnimation.Out:SetFromAlpha(maxBlinkAlpha)    \n    self.OGC_BlinkAnimation.Out:SetToAlpha(minBlinkAlpha)\n    \n    self.OGC_BlinkAnimation:SetLooping(\"repeat\")\n    self.OGC_BlinkAnimation:Play()\n    \n    envTable.dotAnimation1 = Plater.PlayDotAnimation(self, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation1.textureInfo.speedMultiplier = 0.9\n    \n    envTable.dotAnimation1.dotTexture:SetVertexColor(unpack(scriptTable.config.dotColor))\n    \n    \n    envTable.dotAnimation1.dotTexture:Show()\n    \n    --envTable.dotAnimation2 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    --envTable.dotAnimation2.textureInfo.speedMultiplier = 1\n    \n    \n    \nend",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_ongoing.png",
["Name"] = "Cast - Ongoing Cast [P]",
["PlaterCore"] = 1,
["semver"] = "",
["Desc"] = "The background of the nameplate blinks a red color indicating the cast is being performed. Useful to indicate channeling spells doing damage overtime.",
["SpellIds"] = {
431364,
423327,
},
["version"] = -1,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.spitefulTexture) then\n        unitFrame.spitefulTexture = unitFrame.healthBar:CreateTexture(nil, \"overlay\", nil, 6)\n        unitFrame.spitefulTexture:SetPoint('right', 0, 0)\n        unitFrame.spitefulTexture:SetSize(27, 14)\n        unitFrame.spitefulTexture:SetColorTexture(.3, .3, 1, .7)\n        \n        unitFrame.spitefulText = unitFrame.healthBar:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)\n        DetailsFramework:SetFontFace (unitFrame.spitefulText, \"2002\")\n        unitFrame.spitefulText:SetPoint(\"right\", unitFrame.spitefulTexture, \"right\", -2, 0)\n        unitFrame.spitefulText:SetJustifyH(\"right\")\n        \n        unitFrame.roleIcon = unitFrame:CreateTexture(nil, \"overlay\")\n        unitFrame.roleIcon:SetPoint(\"left\", unitFrame.healthBar, \"left\", 2, 0)\n        unitFrame.targetName = unitFrame:CreateFontString(nil, \"overlay\", \"GameFontNormal\")\n        unitFrame.targetName:SetPoint(\"left\", unitFrame.roleIcon, \"right\", 2, 0)\n        \n        unitFrame.spitefulTexture:Hide()\n        unitFrame.spitefulText:Hide()\n    end\n    \n    function envTable.UpdateSpitefulWidget(unitFrame)\n        \n        local r, g, b, a = Plater:ParseColors(scriptTable.config.bgColor)\n        unitFrame.spitefulTexture:SetColorTexture(r, g, b, a)\n        unitFrame.spitefulTexture:SetSize(scriptTable.config.bgWidth, unitFrame.healthBar:GetHeight())   \n        Plater:SetFontSize(unitFrame.spitefulText, scriptTable.config.textSize)\n        Plater:SetFontColor(unitFrame.spitefulText, scriptTable.config.textColor)\n        \n        local currentHealth = unitFrame.healthBar.CurrentHealth\n        local maxHealth = unitFrame.healthBar.CurrentHealthMax\n        \n        local healthPercent = currentHealth / maxHealth * 100\n        local timeToDie = format(\"%.1fs\", healthPercent / 8)\n        unitFrame.spitefulText:SetText(timeToDie)\n        \n        unitFrame.spitefulText:Show()\n        unitFrame.spitefulTexture:Show()\n        \n        if scriptTable.config.switchTargetName then\n            local plateFrame = unitFrame.PlateFrame\n            \n            local target = UnitName(unitFrame.namePlateUnitToken .. \"target\") or UnitName(unitFrame.namePlateUnitToken)\n            \n            if (target and target ~= \"\") then\n                local _, class = UnitClass(unitFrame.namePlateUnitToken .. \"target\")\n                if (class) then\n                    target = DetailsFramework:AddClassColorToText(target, class)\n                end\n                \n                local role = UnitGroupRolesAssigned(unitFrame.namePlateUnitToken .. \"target\")\n                if (role and role ~= \"NONE\") then\n                    target = DetailsFramework:AddRoleIconToText(target, role)\n                end\n                \n                plateFrame.namePlateUnitName = target\n                Plater.UpdateUnitName(plateFrame)\n            end\n        end\n        \n        if scriptTable.config.useTargetingColor then\n            local targeted = UnitIsUnit(unitFrame.namePlateUnitToken .. \"target\", \"player\")\n            if targeted then\n                Plater.SetNameplateColor (unitFrame, scriptTable.config.targetingColor)\n            else\n                Plater.RefreshNameplateColor(unitFrame)\n            end\n        end\n    end\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    if (unitFrame.spitefulTexture) then\n        unitFrame.spitefulText:Hide()\n        unitFrame.spitefulTexture:Hide()    \n        unitFrame.roleIcon:Hide()\n        unitFrame.targetName:Hide()\n    end\nend\n\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
["Time"] = 1611844883,
["url"] = "",
["NpcNames"] = {
"174773",
},
["Enabled"] = true,
["Revision"] = 186,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Time to Die",
["Name"] = "Time to Die",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 50,
["Desc"] = "",
["Min"] = 10,
["Key"] = "bgWidth",
["Value"] = 27,
["Name"] = "Width",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 1,
["Key"] = "bgColor",
["Value"] = {
0.5058823529411764,
0.07058823529411765,
1,
1,
},
["Name"] = "Background Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 24,
["Desc"] = "",
["Min"] = 7,
["Key"] = "textSize",
["Value"] = 8,
["Name"] = "Text Size",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 1,
["Key"] = "textColor",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Name"] = "Text Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option11",
["Value"] = "Targeting",
["Name"] = "Targeting",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Target instead of Name",
["Value"] = true,
["Key"] = "switchTargetName",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Color if targeting You",
["Value"] = true,
["Key"] = "useTargetingColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Color if targeting You",
["Value"] = {
0.07058823529411765,
0.6196078431372549,
0,
1,
},
["Key"] = "targetingColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option11",
["Value"] = 0,
["Name"] = "Option 11",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
},
["Author"] = "Symantec-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
["Icon"] = 135945,
["Name"] = "M+ Spiteful",
["PlaterCore"] = 1,
["semver"] = "",
["Desc"] = "Time to die Spiteful affix",
["SpellIds"] = {
},
["version"] = -1,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsShowingCastBarTest) then\n        --don't execute on battlegrounds and arenas\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end    \n    end\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1722866303,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = true,
["Revision"] = 1254,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Cast Bar Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Key"] = "castbarColor",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Key"] = "flashDuration",
["Value"] = 0.4,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 5,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height Mod",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Key"] = "shakeAmplitude",
["Value"] = 8,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
},
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (not Plater.IsShowingCastBarTest) then\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_healalert.png",
["Name"] = "Cast - Heal Cut [P]",
["PlaterCore"] = 1,
["semver"] = "",
["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
["SpellIds"] = {
450756,
452162,
322938,
322939,
324776,
324914,
326046,
340544,
335143,
327130,
256957,
275826,
429109,
451097,
293729,
341902,
341977,
441351,
441627,
463058,
471733,
425536,
427356,
424419,
423051,
},
["version"] = -1,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n--]=]",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n\n",
["Time"] = 1604357453,
["url"] = "",
["NpcNames"] = {
"164406",
"164407",
"162100",
"162099",
"162329",
"164558",
},
["Enabled"] = true,
["Revision"] = 233,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Show the power of the unit above the nameplate.",
["Name"] = "script desc",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "add trigger",
["Value"] = "Add the unit name or unitId in the \"Add Trigger\" field and press \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showLater",
["Value"] = true,
["Name"] = "Show at 80% of Energy",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the energy won't start showing until the unit has 80% energy.",
},
{
["Type"] = 6,
["Name"] = "Option 2",
["Value"] = 0,
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Text size.",
["Min"] = 8,
["Name"] = "Text Size",
["Value"] = 16,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "fontSize",
},
{
["Type"] = 1,
["Key"] = "fontColor",
["Value"] = {
0.803921568627451,
0.803921568627451,
0.803921568627451,
1,
},
["Name"] = "Font Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the text.",
},
{
["Type"] = 4,
["Key"] = "outline",
["Value"] = true,
["Name"] = "Enable Text Outline",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the text uses outline.",
},
},
["Author"] = "Celian-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
["Icon"] = 136048,
["Name"] = "Unit - Show Energy [Plater]",
["PlaterCore"] = 1,
["semver"] = "",
["Desc"] = "Show the energy amount above the nameplate.",
["SpellIds"] = {
},
["version"] = -1,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --check for marks\n    function  envTable.CheckMark (unitId, unitFrame)\n        if (not GetRaidTargetIndex(unitId)) then\n            if (scriptTable.config.onlyInCombat) then\n                if (not UnitAffectingCombat(unitId)) then\n                    return\n                end                \n            end\n            \n            SetRaidTarget(unitId, 8)\n        end       \n    end\nend\n\n\n--163520 - forsworn squad-leader\n--163618 - zolramus necromancer - The Necrotic Wake\n--164506 - anciet captain - theater of pain\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n",
["Time"] = 1604696441,
["url"] = "",
["NpcNames"] = {
"163520",
"163618",
"164506",
},
["Enabled"] = false,
["Revision"] = 63,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Auto set a raid target Skull on the unit.",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "onlyInCombat",
["Value"] = false,
["Name"] = "Only in Combat",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Set the mark only if the unit is in combat.",
},
},
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Icon"] = "Interface\\Worldmap\\GlowSkull_64Grey",
["Name"] = "Auto Set Skull",
["PlaterCore"] = 1,
["semver"] = "",
["Desc"] = "Auto set skull marker",
["SpellIds"] = {
},
["version"] = -1,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n--165560 = Gormling Larva - MTS\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        \n        envTable.FixateTarget:Show();\n        envTable.FixateIcon:Show();\n    end    \nend\n\n\n",
["Time"] = 1604239880,
["url"] = "",
["NpcNames"] = {
"165560",
},
["Enabled"] = true,
["Revision"] = 269,
["Options"] = {
},
["Author"] = "Celian-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n\n\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Icon"] = 1029718,
["Name"] = "Fixate [Plater]",
["PlaterCore"] = 1,
["semver"] = "",
["Desc"] = "Show above the nameplate who is the player fixated",
["SpellIds"] = {
},
["version"] = -1,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n\n--Scorchling 194622\n--Scorchling 190205\n--197398  Hungry Lasher\n--77006 corpse skitterling\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --restoring and color state and scale even if disabled, maybe the player disabled during the combat\n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.healthBar:SetScale(unitFrame.healthBar._savedOriginalScale)\n    \nend\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n",
["Time"] = 1670427838,
["url"] = "",
["NpcNames"] = {
"194622",
"190205",
"197398",
"77006",
},
["Enabled"] = true,
["Revision"] = 111,
["Options"] = {
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = false,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
0.062745101749897,
0.062745101749897,
0.0941176563501358,
1,
},
["Key"] = "nameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Nameplate Scale",
["Value"] = true,
["Key"] = "useNameplateScale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Scale",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Nameplate Scale",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.8,
["Name"] = "Nameplate Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "scale",
},
},
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.nameplateColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end    \n    \n    unitFrame.healthBar._savedOriginalScale = unitFrame.healthBar:GetScale()\n    \n    if (scriptTable.config.useNameplateScale) then\n        unitFrame.healthBar:SetScale(scriptTable.config.scale)\n    end\n    \nend\n\n\n\n\n",
["Icon"] = "interface/addons/plater/media/duck_64",
["Name"] = "Add - Non Elite Trash [P]",
["PlaterCore"] = 1,
["semver"] = "",
["Desc"] = "",
["SpellIds"] = {
},
["version"] = -1,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.stopCastingX) then\n        unitFrame.stopCastingX = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 7)\n        unitFrame.stopCastingX:SetPoint(\"center\", unitFrame.castBar.Spark, \"center\", 0, 0)\n        unitFrame.stopCastingX:SetTexture([[Interface\\AddOns\\Plater\\Media\\stop_64]])\n        unitFrame.stopCastingX:SetSize(16, 16)\n        unitFrame.stopCastingX:Hide()\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:Hide()\n    end\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Hide()    \n    unitFrame.stopCastingX:Hide()\n    \n    self.Text:SetDrawLayer(\"overlay\", 0)\n    self.Spark:SetDrawLayer(\"overlay\", 3)\n    self.Spark:Show()\n    \nend\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100 / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        \n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        --print(envTable.NextPercent, envTable.CurrentTexture)\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1672514185,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = true,
["Revision"] = 506,
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Fraction"] = false,
["Value"] = 20,
["Key"] = "segmentsAmount",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Amount of Segments",
},
{
["Type"] = 1,
["Key"] = "sparkColor",
["Value"] = {
0.9568627450980391,
1,
0.9882352941176471,
1,
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.8588235294117647,
0.4313725490196079,
1,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        --local duration = 0.6 --debug\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    unitFrame.stopCastingX:Show()\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    self.Text:SetDrawLayer(\"artwork\", 7)\n    self.Spark:SetDrawLayer(\"artwork\", 7)\n    self.Spark:Hide()\nend\n\n\n\n\n\n\n\n\n",
["Icon"] = "Interface\\AddOns\\Plater\\media\\stop_64",
["Name"] = "Cast - Stop Casting [P]",
["PlaterCore"] = 1,
["semver"] = "",
["Desc"] = "Just stop casting",
["SpellIds"] = {
377004,
381516,
196543,
199726,
200291,
268202,
},
["version"] = -1,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local GetSpellInfo = GetSpellInfo or function(spellID) if not spellID then return nil end local si = C_Spell.GetSpellInfo(spellID) if si then return si.name, nil, si.iconID, si.castTime, si.minRange, si.maxRange, si.spellID, si.originalIconID end end --compatibility\n    \n    envTable.npcInfo = {\n        [164427] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"1\", name = \"Boom!\"}, --reanimated warrior - plaguefall\n        \n        [164414] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"2\", name = \"Boom!\"}, --reanimated mage - plaguefall\n        \n        [164185] = {secondCastBar = true, timer = 20, timerId = 319941, altCastId = \"3\", remaining = 5, name = GetSpellInfo(319941)}, --Echelon - Halls of Atonement\n        \n        [164567] = {secondCastBar = true, altCastId = \"dromanswrath\", debuffTimer = 323059, name = GetSpellInfo(323059), spellIcon = 323059}, --Ingra Maloch -- tirna scythe\n        \n        [165408] = {secondCastBar = true, timer = 20, timerId = 322711, altCastId = \"4\", remaining = 5, name = GetSpellInfo(322711)}, --Halkias - Refracted Sinlight - Halls of Atonement\n        \n        --[225976] = {secondCastBar = true, altCastId = \"Uber Strike\",  debuffTimer = 167385, name = GetSpellInfo(167385), spellIcon = 167385}, --tank dummy        \n        --[154564] = {secondCastBar = true, timerId = \"Test Bar\", altCastId = \"debugcast\", remaining = 5, name = GetSpellInfo(319941), spellIcon = 319941}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n        --[154580] = {secondCastBar = true, altCastId = \"debugcast\", debuffTimer = 204242, name = GetSpellInfo(81297), spellIcon = 81297}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n    }\n    \n    --set the castbar config\n    local config = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        config.text = npcInfo.name\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end\n        \n        DetailsFramework:TruncateText(unitFrame.castBar2.Text, unitFrame.castBar2:GetWidth() - 16)\n    end\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                if (altCastId ~= npcInfo.altCastId or not unitFrame.castBar2:IsShown()) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n                end\n            end \n            \n        elseif (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                --get the debuff timeleft\n                local name = npcInfo.name\n                local auras = Plater.GetUnitAuras(unitFrame)\n                local duration, expirationTime\n                for _, aura in pairs(auras) do\n                    if aura.name == name then\n                        duration = aura.duration\n                        expirationTime = aura.expirationTime\n                        break\n                    end\n                end\n                local startTime = expirationTime - duration\n                \n                if (not unitFrame.castBar2:IsShown() or unitFrame.castBar2.spellStartTime < startTime) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, startTime)\n                end\n                \n            else \n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        end\n    end\nend",
["Time"] = 1729585139,
["url"] = "",
["NpcNames"] = {
"164427",
"164414",
"164185",
"164567",
"165408",
},
["Enabled"] = true,
["Revision"] = 234,
["Options"] = {
},
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                local name = npcInfo.name\n                --get the debuff timeleft\n                local name = npcInfo.name\n                local auras = Plater.GetUnitAuras(unitFrame)\n                local duration, expirationTime\n                for _, aura in pairs(auras) do\n                    if aura.name == name then\n                        duration = aura.duration\n                        expirationTime = aura.expirationTime\n                        break\n                    end\n                end\n                \n                envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, expirationTime-duration)\n            else\n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        else\n            envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n        end\n    end\nend",
["Icon"] = "Interface\\AddOns\\Plater\\Images\\countdown_bar_icon",
["Name"] = "Countdown",
["PlaterCore"] = 1,
["semver"] = "",
["Desc"] = "Some units has special events without a clear way to show. This script adds a second cast bar to inform the user about it.",
["SpellIds"] = {
},
["version"] = -1,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.TextureWatchStep) then\n        \n        unitFrame.TextureWatchStep = true\n        \n        local animationFrame = CreateFrame(\"frame\", nil, unitFrame)\n        \n        \n        --> single animation group\n        local bearTrapAnimation = animationFrame:CreateAnimationGroup(\"beartrapAnimationGroup\")\n        bearTrapAnimation:SetLooping(\"NONE\")\n        \n        --> widgets:\n        \n        ----------------------------------------------\n        \n        local leftTrap  = animationFrame:CreateTexture(\"$parentleftTrapTexture\", \"ARTWORK\")\n        leftTrap:SetTexture([[Interface\\AddOns\\Plater\\images\\icon_beartrap_2.png]])\n        leftTrap:SetDrawLayer(\"ARTWORK\", 0)\n        leftTrap:SetPoint(\"center\", animationFrame, \"center\", -48, 0)\n        leftTrap:SetSize(100, 100)\n        leftTrap:SetTexCoord(1, 0.0010000000149012, 0.0010000000149012, 1)\n        \n        --> animations for leftTrap\n        \n        leftTrap.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        leftTrap.rotation:SetTarget(leftTrap)\n        leftTrap.rotation:SetOrder(1)\n        leftTrap.rotation:SetDuration(0.195999994874)\n        leftTrap.rotation:SetStartDelay(0.39999997615814)\n        leftTrap.rotation:SetDegrees(-90)\n        leftTrap.rotation:SetOrigin(\"bottom\", 0, 0)\n        leftTrap.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        leftTrap.rotation:SetTarget(leftTrap)\n        leftTrap.rotation:SetOrder(6)\n        leftTrap.rotation:SetDuration(0.195999994874)\n        leftTrap.rotation:SetDegrees(90)\n        leftTrap.rotation:SetOrigin(\"bottom\", 0, 0)\n        leftTrap.alpha = bearTrapAnimation:CreateAnimation(\"ALPHA\")\n        leftTrap.alpha:SetTarget(leftTrap)\n        leftTrap.alpha:SetOrder(6)\n        leftTrap.alpha:SetDuration(0.195999994874)\n        leftTrap.alpha:SetFromAlpha(1)\n        leftTrap.alpha:SetToAlpha(0)\n        \n        ----------------------------------------------\n        \n        local rightTrap  = animationFrame:CreateTexture(\"$parentrightTrapTexture\", \"ARTWORK\")\n        rightTrap:SetTexture([[Interface\\AddOns\\Plater\\images\\icon_beartrap_2.png]])\n        rightTrap:SetDrawLayer(\"ARTWORK\", 0)\n        rightTrap:SetPoint(\"center\", animationFrame, \"center\", 0, 0)\n        rightTrap:SetSize(100, 100)\n        \n        --> animations for rightTrap\n        \n        rightTrap.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        rightTrap.rotation:SetTarget(rightTrap)\n        rightTrap.rotation:SetOrder(1)\n        rightTrap.rotation:SetDuration(0.195999994874)\n        rightTrap.rotation:SetStartDelay(0.39999997615814)\n        rightTrap.rotation:SetDegrees(90)\n        rightTrap.rotation:SetOrigin(\"bottom\", 0, 0)\n        rightTrap.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        rightTrap.rotation:SetTarget(rightTrap)\n        rightTrap.rotation:SetOrder(6)\n        rightTrap.rotation:SetDuration(0.195999994874)\n        rightTrap.rotation:SetDegrees(-90)\n        rightTrap.rotation:SetOrigin(\"bottom\", 0, 0)\n        rightTrap.alpha = bearTrapAnimation:CreateAnimation(\"ALPHA\")\n        rightTrap.alpha:SetTarget(rightTrap)\n        rightTrap.alpha:SetOrder(6)\n        rightTrap.alpha:SetDuration(0.195999994874)\n        rightTrap.alpha:SetFromAlpha(1)\n        rightTrap.alpha:SetToAlpha(0)\n        \n        ----------------------------------------------\n        \n        local boots  = animationFrame:CreateTexture(\"$parentbootsTexture\", \"BORDER\")\n        boots:SetTexture([[Interface\\AddOns\\Plater\\images\\icon_shoes.png]])\n        boots:SetDrawLayer(\"BORDER\", 0)\n        boots:SetPoint(\"center\", animationFrame, \"center\", -88, 35)\n        boots:SetSize(50, 50)\n        \n        --> animations for boots\n        \n        boots.alpha = bearTrapAnimation:CreateAnimation(\"ALPHA\")\n        boots.alpha:SetTarget(boots)\n        boots.alpha:SetOrder(1)\n        boots.alpha:SetDuration(0.31599998474121)\n        boots.alpha:SetFromAlpha(0)\n        boots.alpha:SetToAlpha(1)\n        boots.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        boots.rotation:SetTarget(boots)\n        boots.rotation:SetOrder(1)\n        boots.rotation:SetDuration(0.2960000038147)\n        boots.rotation:SetStartDelay(0.19999998807907)\n        boots.rotation:SetDegrees(40)\n        boots.rotation:SetOrigin(\"center\", 0, 0)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(1)\n        boots.translation:SetDuration(0.59599995613098)\n        boots.translation:SetOffset(63, -33)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(2)\n        boots.translation:SetDuration(0.046000000089407)\n        boots.translation:SetOffset(3, 3)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(3)\n        boots.translation:SetDuration(0.046000000089407)\n        boots.translation:SetOffset(-3, -3)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(4)\n        boots.translation:SetDuration(0.046000000089407)\n        boots.translation:SetOffset(3, 3)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(5)\n        boots.translation:SetDuration(0.046000000089407)\n        boots.translation:SetOffset(-3, -3)\n        boots.alpha = bearTrapAnimation:CreateAnimation(\"ALPHA\")\n        boots.alpha:SetTarget(boots)\n        boots.alpha:SetOrder(6)\n        boots.alpha:SetDuration(0.39599999785423)\n        boots.alpha:SetFromAlpha(1)\n        boots.alpha:SetToAlpha(0)\n        \n        ----------------------------------------------\n        \n        unitFrame.BearTrapTextures = {leftTrap, rightTrap, boots}\n        unitFrame.BearTrapAnimationFrame = animationFrame\n        unitFrame.BearTrapAnimation = bearTrapAnimation\n        \n        \n        bearTrapAnimation:SetScript(\"OnPlay\", function()\n                boots:SetAlpha(0)\n                boots:Show()\n                leftTrap:Show()\n                rightTrap:Show()            \n        end)\n        \n        bearTrapAnimation:SetScript(\"OnFinished\", function()\n                boots:Hide()\n                leftTrap:Hide()\n                rightTrap:Hide()\n        end)       \n        \n        bearTrapAnimation:SetScript(\"OnStop\", function()\n                boots:Hide()\n                leftTrap:Hide()\n                rightTrap:Hide()\n        end)           \n        \n        \n    end\n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.BearTrapAnimation:Stop()\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1720031975,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = true,
["Revision"] = 220,
["Options"] = {
{
["Type"] = 5,
["Name"] = "Option 1",
["Value"] = "Settings for the animation played when the cast creates small void zones in the ground.",
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
},
["Author"] = "Terciob",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.BearTrapAnimationFrame:SetSize(1, 1)\n    unitFrame.BearTrapAnimationFrame:ClearAllPoints()\n    unitFrame.BearTrapAnimationFrame:SetPoint(\"center\", unitFrame, \"center\", 30, 63)\n    unitFrame.BearTrapAnimationFrame:SetScale(0.5)\n    \n    unitFrame.BearTrapAnimation:Play()\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_voidzone.png",
["Name"] = "Cast - Voidzone [P]",
["PlaterCore"] = 1,
["semver"] = "",
["Desc"] = "Play an animation when the cast creates small zones in the ground that will damage if the player doesn't move.",
["SpellIds"] = {
450784,
451423,
445813,
445838,
438658,
433845,
456696,
451391,
324923,
323138,
340189,
326021,
320571,
321780,
345623,
333479,
334476,
320772,
257882,
424903,
426345,
422233,
445541,
428703,
439559,
472041,
473168,
473304,
1216431,
320182,
1215850,
331237,
434706,
434998,
439365,
473070,
427484,
424462,
424429,
423062,
},
["version"] = -1,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.PlaySwipeAnimation(unitFrame)\n        unitFrame.CastSwipeTexture:Show()\n        unitFrame.CastSwipeAnimation:Play()\n        unitFrame.StartSwipeAnimation:Play()\n    end\n    \n    function envTable.StopSwipeAnimation(unitFrame)\n        unitFrame.EndSwipeAnimation:Play()\n        C_Timer.After(0.21, function()\n                unitFrame.CastSwipeAnimation:Stop()\n                unitFrame.CastSwipeTexture:Hide()\n        end)\n    end\n    \n    function envTable.CreateSwipeTextureAndAnimations(unitFrame)\n        if (unitFrame.CastSwipeTexture) then\n            return\n        end\n        \n        local swipeTexture = unitFrame:CreateTexture(nil, \"overlay\")\n        swipeTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\circular_swipe.png]])\n        swipeTexture:SetPoint(\"center\", 0, 0)\n        swipeTexture:SetSize(64, 64)\n        swipeTexture:Hide()\n        \n        unitFrame.CastSwipeTexture = swipeTexture\n        \n        --rotation animation\n        unitFrame.CastSwipeAnimation = Plater:CreateAnimationHub(swipeTexture)\n        unitFrame.CastSwipeAnimation:SetLooping(\"repeat\")\n        unitFrame.CastSwipeAnimation.Rotation = Plater:CreateAnimation(unitFrame.CastSwipeAnimation, \"rotation\", 1, 1, 360)\n        \n        --starting animation\n        unitFrame.StartSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, function()swipeTexture:Show() end)\n        unitFrame.StartSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"alpha\", 1, 0.2, 0, 1)\n        unitFrame.StartSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"scale\", 1, 0.2, 1.3, 1.3, 1, 1)        \n        \n        --finished animation\n        unitFrame.EndSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, nil, function()swipeTexture:Hide() end)\n        unitFrame.EndSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"alpha\", 1, 0.2, 1, 0)\n        unitFrame.EndSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"scale\", 1, 0.2, 1, 1, 1.3, 1.3)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.StopSwipeAnimation(unitFrame)\n    unitFrame.CastSwipeTexture:Hide()\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1719758013,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = true,
["Revision"] = 281,
["Options"] = {
{
["Type"] = 2,
["Max"] = 0.3,
["Desc"] = "Rotation Duration",
["Min"] = 0.1,
["Key"] = "rotationDuration",
["Value"] = 0.15,
["Name"] = "Rotation Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.5,
["Desc"] = "Animation Start Duration",
["Min"] = 0,
["Key"] = "animStartDuration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Animation Start Duration",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha when the animation start playing, this effect in intended to catch the player attention",
["Min"] = 0,
["Name"] = "Texture Start Alpha",
["Value"] = 0.3,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "textureStartAlpha",
},
{
["Type"] = 6,
["Name"] = "Option 5",
["Value"] = 0,
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "Texture Scale",
["Min"] = 0.6,
["Key"] = "textureScale",
["Value"] = 0.8,
["Name"] = "Texture Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha",
["Min"] = 0,
["Key"] = "textureAlpha",
["Value"] = 0.8,
["Name"] = "Texture Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Key"] = "textureColor",
["Value"] = {
0.7411764860153198,
0.7411764860153198,
0.7411764860153198,
1,
},
["Name"] = "Texture Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
},
["Author"] = "Terciob",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CreateSwipeTextureAndAnimations(unitFrame)\n    \n    local options = scriptTable.config\n    local targetScale = scriptTable.config.textureScale\n    \n    --swipe rotation duration    \n    unitFrame.CastSwipeAnimation.Rotation:SetDuration(scriptTable.config.rotationDuration)\n    \n    unitFrame.CastSwipeTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\circular_swipe.png]])\n    \n    --swipe texture settings\n    unitFrame.CastSwipeTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.textureColor))\n    unitFrame.CastSwipeTexture:SetScale(targetScale)\n    unitFrame.CastSwipeTexture:SetAlpha(scriptTable.config.textureAlpha)  \n    \n    unitFrame.StartSwipeAnimation.Alpha:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Alpha:SetFromAlpha(scriptTable.config.textureStartAlpha)\n    unitFrame.StartSwipeAnimation.Alpha:SetToAlpha(scriptTable.config.textureAlpha)\n    \n    unitFrame.StartSwipeAnimation.Scale:SetDuration(scriptTable.config.animStartDuration)\n    \n    unitFrame.StartSwipeAnimation.Scale:SetScaleFrom(1.05, 1.05)\n    unitFrame.StartSwipeAnimation.Scale:SetScaleTo(1, 1)    \n    \n    unitFrame.EndSwipeAnimation.Scale:SetDuration(0.1)\n    unitFrame.EndSwipeAnimation.Alpha:SetDuration(0.1)\n    \n    --start playing\n    envTable.PlaySwipeAnimation(unitFrame)    \n    \nend\n\n\n",
["Icon"] = "Interface\\AddOns\\Plater\\images\\circular_swipe",
["Name"] = "Cast - AoE With Range [P]",
["PlaterCore"] = 1,
["semver"] = "",
["Desc"] = "Play a animation when the spell effect is an circular AoE around the caster.",
["SpellIds"] = {
453212,
451098,
427001,
438622,
446086,
447271,
437700,
439646,
448877,
451387,
331743,
320637,
327240,
257170,
257326,
257169,
423538,
428508,
428520,
267354,
1214754,
260280,
293861,
285454,
317605,
339415,
331223,
318406,
442589,
423501,
440652,
424621,
},
["version"] = -1,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --get the reference of the arrow texture\n    local movingArrowTexture = unitFrame._movingArrowTexture\n    \n    --if it doesn't exists yet, create now\n    if (not movingArrowTexture) then\n        movingArrowTexture = self:CreateTexture(nil, \"artwork\", nil, 6)\n        unitFrame._movingArrowTexture = movingArrowTexture\n    end\n    \n    local mAT = movingArrowTexture\n    \n    if (not mAT.movingAnimation) then\n        local onPlay = function()\n            mAT:Show() \n        end\n        \n        local onStop =  function()\n            mAT:Hide() \n        end\n        \n        mAT.movingAnimation = Plater:CreateAnimationHub( mAT, onPlay, onStop )\n        mAT.movingAnimation:SetLooping( \"REPEAT\" )\n    end\n    \n    if (not mAT.arrowAnimation) then\n        local arrowAnimation = Plater:CreateAnimation (mAT.movingAnimation, \"translation\", 1, 0.20, self:GetWidth()-16, 0)\n        mAT.arrowAnimation = arrowAnimation\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local mAT = unitFrame._movingArrowTexture\n    mAT.movingAnimation:Stop()\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local mAT = unitFrame._movingArrowTexture\n    local maxAlpha = scriptTable.config.arrowAlpha\n    \n    mAT:SetAlpha(scriptTable.config.arrowAlpha)\n    \n    local percent = mAT.movingAnimation:GetProgress()\n    \n    if (percent < 0.20) then\n        local value = DetailsFramework.Math.MapRangeClamped(0, 0.20, 0, maxAlpha, percent)\n        mAT:SetAlpha(value)\n        \n    elseif (percent > 0.8) then\n        local value = DetailsFramework.Math.MapRangeClamped(0.8, 1, maxAlpha, 0, percent)\n        mAT:SetAlpha(value)\n    end\n    \n    self.ThrottleUpdate = 0\n    \n    --mAT:SetAlpha(1)\nend",
["Time"] = 1719788095,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = true,
["Revision"] = 754,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces an effect to indicate the spell will hit players in front of the enemy.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 4",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 3",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Set the alpha of the moving arrow",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.73,
["Key"] = "arrowAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Alpha",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Time that takes for an arrow to travel from the to right.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "animSpeed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Animation Speed",
},
{
["Type"] = 4,
["Name"] = "Use White Arrow",
["Value"] = false,
["Key"] = "desaturateArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the arrow color will be desaturated.",
},
{
["Type"] = 6,
["Key"] = "option8",
["Value"] = 0,
["Name"] = "Option 8",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "bChangeSpellName",
["Value"] = true,
["Name"] = "Change Spell Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change the spell name to the text entered below",
},
{
["Type"] = 3,
["Key"] = "spellNameText",
["Value"] = "Frontal",
["Name"] = "New Spell Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "The customized spell name",
},
},
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local mAT = unitFrame._movingArrowTexture\n    \n    mAT:SetTexture([[Interface\\PETBATTLES\\PetBattle-StatIcons]])\n    mAT:SetSize(16, self:GetHeight())\n    mAT:SetTexCoord(unpack({0, 15/32, 18/32, 30/32}))\n    mAT:SetParent(self.FrameOverlay)\n    mAT:SetDrawLayer(\"overlay\",  7)\n    mAT:SetAlpha(scriptTable.config.arrowAlpha)\n    mAT:SetDesaturated(scriptTable.config.desaturateArrow)        \n    \n    mAT:ClearAllPoints()\n    mAT:SetPoint(\"left\", self, \"left\", -16, 0)\n    \n    local arrowAnimation = mAT.arrowAnimation\n    arrowAnimation:SetDuration(scriptTable.config.animSpeed)\n    arrowAnimation:SetOffset(self:GetWidth(), 0)\n    \n    mAT.movingAnimation:Play()\n    \n    if (scriptTable.config.bChangeSpellName) then\n        self.Text:SetText(scriptTable.config.spellNameText)\n    end\n    \n    --DetailsFramework:DebugVisibility(mAT)\n\nend\n\n\n\n\n",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_frontal",
["Name"] = "Cast - Frontal Cone [Plater]",
["PlaterCore"] = 1,
["semver"] = "",
["Desc"] = "Does an animation for casts that affect the frontal area of the enemy. Add spell in the Add Trigger field.",
["SpellIds"] = {
431494,
426860,
448213,
434407,
439789,
434824,
453161,
435012,
439506,
443500,
434779,
451543,
439621,
441384,
441381,
447395,
456711,
448105,
323137,
321968,
331718,
331721,
325223,
340160,
321834,
320596,
324323,
333488,
323496,
333477,
256627,
257292,
454438,
269029,
257862,
425027,
449130,
428202,
448640,
427869,
352833,
330403,
209495,
257426,
255952,
257870,
413147,
383107,
377559,
388060,
376170,
384524,
375351,
390111,
369791,
369573,
369563,
369335,
369061,
375727,
265016,
265019,
260793,
260292,
272457,
272609,
269843,
183465,
226296,
188169,
183088,
410873,
411012,
88308,
382708,
375251,
375439,
372311,
373742,
372201,
374533,
377204,
201226,
204667,
198379,
200768,
253239,
250258,
255567,
194956,
427510,
426645,
412505,
412129,
419351,
401482,
404916,
200345,
200261,
198641,
265372,
271174,
264694,
264923,
1217279,
267551,
275907,
259940,
283421,
293986,
291865,
292264,
1215738,
334023,
317231,
320729,
333294,
330614,
323608,
432198,
441119,
448619,
436592,
473220,
472452,
465682,
465754,
473114,
1217496,
422122,
426261,
421277,
427025,
426893,
474018,
1214546,
445457,
447270,
},
["version"] = -1,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.CreateWidgets()\n        --create a camera shake for the nameplate\n        if (not unitFrame.AddExplosionOnDieShake) then\n            unitFrame.AddExplosionOnDieShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n        end\n        \n        if (not unitFrame.AddExplosionOnDieBackground) then\n            unitFrame.AddExplosionOnDieBackground = unitFrame.healthBar:CreateTexture(nil, \"background\")\n            unitFrame.AddExplosionOnDieBackground:SetAllPoints(unitFrame.healthBar)\n            unitFrame.AddExplosionOnDieBackground:SetColorTexture(1, 0, 0, 1)\n        end\n    end\n    \nend\n\n--194895 = unstable squall\n--105703 = mana wyrm\n--59598 = lesser sha\n--58319 = lesser sha\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    healthBar:SetReverseFill(false)\n    \n    if (unitFrame.AddExplosionOnDieShake) then\n        unitFrame:StopFrameShake (unitFrame.AddExplosionOnDieShake)    \n    end\n    \n    if (unitFrame.AddExplosionOnDieBackground) then\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable._HealthPercent < 50) then\n        local alpha = DetailsFramework:MapRangeClamped(0, 50, 0.5, 0, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieBackground:SetAlpha(alpha)\n    else\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    end\n    \n    if (envTable._HealthPercent < 15 and scriptTable.config.useShake) then\n        local shakeAmpliture = DetailsFramework:MapRangeClamped(0.001, 15, 10, 1, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude * shakeAmpliture\n        unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n        \n        unitFrame:PlayFrameShake (unitFrame.AddExplosionOnDieShake)\n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1669340350,
["url"] = "",
["NpcNames"] = {
"194895",
"105703",
"59598",
"58319",
200388,
189299,
131402,
135052,
130653,
231497,
},
["Enabled"] = true,
["Revision"] = 106,
["Options"] = {
{
["Type"] = 4,
["Key"] = "useReverse",
["Value"] = false,
["Name"] = "Reverse Health Bar",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option6",
["Value"] = 0,
["Name"] = "Option 6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useShake",
["Value"] = false,
["Name"] = "Enable Shake",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "How strong is the shake.",
["Min"] = 0.05,
["Key"] = "shakeAmplitude",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 70,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useBackground",
["Value"] = true,
["Name"] = "Show Red Background",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show Red Background",
},
},
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (scriptTable.config.useReverse) then\n        healthBar:SetReverseFill(true)\n    end\n    \n    --unitFrame.AddExplosionOnDieShake\n    \n    envTable.CreateWidgets()\n    \n    unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    unitFrame.AddExplosionOnDieShake.OriginalDuration = 0.120\n    unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    if (scriptTable.config.useBackground) then\n        unitFrame.AddExplosionOnDieBackground:Show()\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    else\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
["Icon"] = "interface/addons/plater/media/radio_64",
["Name"] = "Add - Explode on Die [P]",
["PlaterCore"] = 1,
["semver"] = "",
["Desc"] = "",
["SpellIds"] = {
},
["version"] = -1,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1719788550,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = true,
["Revision"] = 27,
["Options"] = {
},
["Author"] = "Terciob",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local auraDuration = envTable._Duration\n    local altCastId = 1\n    \n    ---@class plater_altcastbarconfig : table\n    ---@field iconTexture string\n    ---@field iconTexcoord table\n    ---@field iconAlpha number\n    ---@field text string\n    ---@field texture any\n    ---@field color any\n    ---@field isChanneling boolean\n    ---@field canInterrupt boolean\n    ---@field height number\n    ---@field iconSize number\n    ---@field textSize number\n    ---@field spellNameAnchor df_anchor\n    ---@field timerAnchor df_anchor\n    ---@field iconAnchor df_anchor\n    \n    local configTable = {\n        iconTexture = envTable._Texture,\n        text = envTable._SpellName,\n        color = \"gray\",\n        isChanneling = true,\n        canInterrupt = false,\n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        \n    }\n    \n    Plater.SetAltCastBar(unitFrame.PlateFrame, configTable, auraDuration, envTable._StartTime, altCastId)\n    \nend\n\n\n",
["Icon"] = "Interface\\AddOns\\Plater\\images\\aura_castbar.png",
["Name"] = "Aura - Is Cast Bar [P]",
["PlaterCore"] = 1,
["semver"] = "",
["Desc"] = "Show a castbar for the aura duration.",
["SpellIds"] = {
438494,
335141,
},
["version"] = -1,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (UnitIsUnit(unitId .. \"target\", \"player\")) then\n        Plater.SetNameplateColor(unitFrame, scriptTable.config.nameplateColor)\n    else\n        Plater.RefreshNameplateColor(unitFrame)\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1668886509,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = true,
["Revision"] = 33,
["Options"] = {
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
0,
0.5568627450980392,
0.03529411764705882,
1,
},
["Key"] = "nameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Change the enemy nameplate color to this color when fixating you!",
},
},
["Author"] = "Ditador-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Icon"] = "Interface\\ICONS\\Ability_Fixated_State_Red",
["Name"] = "Fixate by Unit Buff [P]",
["PlaterCore"] = 1,
["semver"] = "",
["Desc"] = "Alert about a unit fixated on the player by using a buff on the enemy unit.",
["SpellIds"] = {
426662,
426663,
},
["version"] = -1,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do --max amount of segments is 20\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.Textures) then\n        for i = 1, scriptTable.config.segmentsAmount  do\n            local texture = unitFrame.felAnimation.Textures[i]\n            if (texture) then\n                texture:Hide()\n            end\n        end\n    end\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.textureStretched) then\n        local textureStretched = unitFrame.felAnimation.textureStretched\n        if (textureStretched) then\n            textureStretched:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (not envTable.NextPercent) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.1, 0.5)\n    \n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    if (envTable._CanInterrupt) then\n        local newAlpha = min(0.1 + math.sin ( normalizedPercent * math.pi  ), 1)\n        textureStretched:SetAlpha(newAlpha)\n    else        \n        local newAlpha = min(0.1 + math.sin ( normalizedPercent * math.pi  ), 1)\n        textureStretched:SetAlpha(newAlpha)\n    end    \n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1719694337,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = true,
["Revision"] = 741,
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Fraction"] = false,
["Value"] = 7,
["Key"] = "segmentsAmount",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Amount of Segments",
},
{
["Type"] = 1,
["Name"] = "Spark Color",
["Value"] = {
0.9686275124549866,
0.9764706492424011,
1,
1,
},
["Key"] = "sparkColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Trail Color",
["Value"] = {
0.4901961088180542,
0,
0.5490196347236633,
1,
},
["Key"] = "glowColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (IsInRaid()) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    --textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:SetTexture([[Interface\\AddOns\\Plater\\images\\tail_rounded_white.png]])\n    textureStretched:SetHeight(castBar:GetHeight() + 2)\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    \n    --trail\n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    --local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    --Plater.SetCastBarColorForScript(self, true, customColor or scriptTable.config.castBarColor, envTable)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_debuff.png",
["Name"] = "Cast - Debuff [P]",
["PlaterCore"] = 1,
["semver"] = "",
["Desc"] = "Show a different animation for the cast bar.",
["SpellIds"] = {
432448,
431309,
451107,
451119,
438618,
436322,
443507,
443436,
439341,
447261,
449444,
451224,
451241,
450095,
451612,
451395,
324987,
327393,
256709,
268230,
275836,
426308,
449153,
427461,
},
["version"] = -1,
},
{
["ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --compat\n    local GetSpellInfo = GetSpellInfo or function(spellID) if not spellID then return nil end local si = C_Spell.GetSpellInfo(spellID) if si then return si.name, nil, si.iconID, si.castTime, si.minRange, si.maxRange, si.spellID, si.originalIconID end end\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [321891] = \"Freeze Tag Fixation\", --Illusionary Vulpin - MTS\n        --[167385] = \"Uber Strike\", --tank dummy\n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    local auras = Plater.GetUnitAuras(unitFrame)\n    for id, aura in pairs(auras) do\n        local name, caster = aura.name, aura.sourceUnit\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n            break\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1729585422,
["url"] = "",
["NpcNames"] = {
"Illusionary Vulpin",
129802,
133482,
235631,
231014,
},
["Enabled"] = true,
["Revision"] = 279,
["Options"] = {
},
["Author"] = "Tecno-Azralon",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Icon"] = 841383,
["Name"] = "Fixate On You [Plater]",
["PlaterCore"] = 1,
["semver"] = "",
["Desc"] = "When an enemy places a debuff and starts to chase you. This script changes the nameplate color and place your name above the nameplate as well.",
["SpellIds"] = {
"spawn of g'huun",
"smuggled crawg",
"sergeant bainbridge",
"blacktooth scrapper",
"irontide grenadier",
"feral bloodswarmer",
"earthrager",
"crawler mine",
"rezan",
},
["version"] = -1,
},
},
["aura2_x_offset"] = 0,
["hook_data"] = {
{
["Enabled"] = false,
["Revision"] = 50,
["semver"] = "",
["LastHookEdited"] = "",
["Author"] = "Kastfall-Azralon",
["HooksTemp"] = {
},
["Desc"] = "Easy way to change the color of an unit. Open the constructor script and follow the examples.",
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --attempt to get the color from the unit color list\n    local color = envTable.NpcColors [unitFrame.namePlateUnitNameLower] or envTable.NpcColors [unitFrame.namePlateUnitName] or envTable.NpcColors [unitFrame.namePlateNpcId]\n    \n    --if the color exists, set the health bar color\n    if (color) then\n        Plater.SetNameplateColor (unitFrame, color)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.NpcColors = {\n        \n        --examples, using the unit name in lower case, regular unit name and the unitID:\n        \n        [\"Thunderlord Windreader\"] = \"red\", --using regular mob name and color it as red\n        [\"thunderlord crag-leaper\"] = {1, 1, 0}, --using lower case and coloring it yellow\n        [75790] = \"#00FF00\", --using the ID of the unit and using green as color\n        \n        --insert the new mobs here:\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n    } --close custom color bracket\n    \nend\n\n\n\n\n",
},
["version"] = -1,
["Time"] = 1547392935,
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["role"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\color_bar",
["Name"] = "Color Automation [Plater]",
},
{
["Enabled"] = false,
["Revision"] = 348,
["Options"] = {
{
["Type"] = 5,
["Name"] = "Icon Settings",
["Value"] = "Icon Settings:",
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Icon",
["Value"] = true,
["Key"] = "showIcon",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show the castbar icon when enabled",
},
{
["Type"] = 4,
["Name"] = "Icon on Left Side",
["Value"] = true,
["Key"] = "iconOnLeftSide",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled it anchor the icon on the left side, right otherwise",
},
{
["Type"] = 4,
["Key"] = "useFullSize",
["Value"] = false,
["Name"] = "Use Big Icon",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled the icon has the size of the cast bar plus the healthbar",
},
{
["Type"] = 2,
["Max"] = 5,
["Desc"] = "Fine tune the icon size",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0,
["Key"] = "iconSizeOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Icon Size Offset",
},
{
["Type"] = 2,
["Max"] = 5,
["Desc"] = "Space between the icon and the cast bar",
["Min"] = -5,
["Name"] = "Icon Padding",
["Value"] = 0,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "iconPadding",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Interrupt Texture",
["Value"] = "Can't Interrupt Texture:",
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Texture",
["Value"] = true,
["Key"] = "showTexture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled show a texture to tell the cast can't be interrupted",
},
{
["Type"] = 3,
["Name"] = "Texture Path",
["Value"] = "Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON",
["Key"] = "iconTexturePath",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "Insert the path for the texture",
},
{
["Type"] = 4,
["Name"] = "Texture Desaturated",
["Value"] = true,
["Key"] = "desaturatedTexture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enbaled, texture is shown in black & white",
},
{
["Type"] = 1,
["Name"] = "Texture Color",
["Value"] = {
1,
1,
1,
0.3056715726852417,
},
["Key"] = "textureColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Select the color of the texture",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Adjust the texture width",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 10,
["Key"] = "textureWidth",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Width",
},
{
["Type"] = 2,
["Max"] = 16,
["Desc"] = "The texture is set to be the same size as the cast bar, fine tune the height as wanted",
["Min"] = -16,
["Name"] = "Texture Height Mod",
["Value"] = 0,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "textureHeightMod",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Adjust the texture position",
["Min"] = -32,
["Fraction"] = false,
["Value"] = 0,
["Key"] = "texturePosition",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Position",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Adjust the texture transparency",
["Min"] = 0,
["Key"] = "textureAlpha",
["Value"] = 1,
["Name"] = "Texture Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
},
["HooksTemp"] = {
},
["LastHookEdited"] = "",
["Author"] = "Ditador-Azralon",
["version"] = -1,
["Desc"] = "Move the icon of the spell cast to the left or right side of the nameplate.",
["Hooks"] = {
["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    self.ThrottleUpdate = -1\n    \nend\n\n\n",
["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    unitFrame.castBar.BorderShield:SetDrawLayer(\"artwork\")\n    envTable.UpdateIconPosition (unitFrame)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local noInterruptTexture = castBar.BorderShield\n        \n        if (modTable.config.showIcon) then\n            icon:ClearAllPoints()\n            \n            if (modTable.config.iconOnLeftSide) then\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topright\", unitFrame.castBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n                \n            else\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topleft\", unitFrame.castBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n        else\n            icon:Hide()\n        end\n        \n        if (modTable.config.showTexture and not castBar.canInterrupt) then\n            noInterruptTexture:Show()\n            \n            local texturePath = modTable.config.iconTexturePath\n            texturePath = texturePath:gsub(\"//\", \"/\")\n            texturePath = texturePath:gsub(\"\\\\\", \"/\")\n            \n            noInterruptTexture:SetTexture (texturePath)\n            noInterruptTexture:SetTexCoord (0, 1, 0, 1)\n            \n            if (modTable.config.desaturatedTexture) then\n                noInterruptTexture:SetDesaturated (modTable.config.desaturatedTexture)\n            else\n                noInterruptTexture:SetVertexColor (DetailsFramework:ParseColors (modTable.config.textureColor))\n            end\n            \n            noInterruptTexture:SetSize (modTable.config.textureWidth, castBar:GetHeight() + modTable.config.textureHeightMod)\n            noInterruptTexture:ClearAllPoints()\n            noInterruptTexture:SetPoint (\"center\", castBar, \"left\", modTable.config.texturePosition, 0)\n            noInterruptTexture:SetAlpha (modTable.config.textureAlpha)\n        else\n            noInterruptTexture:Hide()\n        end\n    end\nend",
},
["Time"] = 1597097268,
["Name"] = "Cast Bar Icon Settings [P]",
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["race"] = {
},
},
["PlaterCore"] = 1,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\castbar_icon",
["semver"] = "",
},
{
["Enabled"] = false,
["Revision"] = 363,
["Options"] = {
{
["Type"] = 1,
["Key"] = "color",
["Value"] = {
0.5019607843137255,
0.5019607843137255,
0,
1,
},
["Name"] = "Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "changeBarColor",
["Value"] = true,
["Name"] = "Change Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "changeBorderColor",
["Value"] = false,
["Name"] = "Change Border Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "resetColors",
["Value"] = true,
["Name"] = "Reset Colors",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
},
["HooksTemp"] = {
},
["LastHookEdited"] = "",
["Author"] = "Kastfall-Azralon",
["version"] = -1,
["Desc"] = "Change the nameplate color if the unit is attacking a specific unit like Monk's Ox Statue or Druid's Treants. You may edit which units it track in the constructor script.",
["Hooks"] = {
["Initialization"] = "function (modTable)\n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    modTable.changeBarColor = modTable.config.changeBarColor\n    modTable.changeBorderColor = modTable.config.changeBorderColor\n    modTable.resetColors = modTable.config.resetColors\n    \n    modTable.ListOfNpcs = {\n        [61146] = modTable.config.color, --\"olive\", --monk statue npcID\n        [103822] = modTable.config.color, --\"olive\", --druid treant npcID\n        [15352] = modTable.config.color, --\"olive\", --shaman elemental\n        [95072] = modTable.config.color, --\"olive\", --shaman greater earth elemental npcID\n        [61056] = modTable.config.color, --\"olive\", --shaman primal earth elemental npcID\n        \n    }\nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if not unitId then\n        return\n    end\n    --get the GUID of the target of the unit\n    local targetGUID = UnitGUID (unitId .. \"target\")\n    \n    if (targetGUID) then\n        \n        --get the npcID of the target\n        local npcID = Plater.GetNpcIDFromGUID (targetGUID)\n        local unitName = UnitName (unitId .. \"target\")\n        local unitNameLower = string.lower (unitName)\n        \n        --check if the npcID of this unit is in the npc list \n        local color = modTable.ListOfNpcs [npcID] or modTable.ListOfNpcs [unitName] or modTable.ListOfNpcs [unitNameLower]\n        \n        if color then\n            if modTable.changeBarColor then\n                Plater.SetNameplateColor (unitFrame, color)\n            end\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame, color)\n            end\n            unitFrame.attackingSpecificUnitFromMod = true\n        elseif unitFrame.attackingSpecificUnitFromMod and modTable.resetColors then\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame)\n            end\n            if modTable.changeBarColor then\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n            unitFrame.attackingSpecificUnitFromMod = false\n        end\n    end\nend",
},
["Time"] = 1620377377,
["Name"] = "Attacking Specific Unit [Plater]",
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["PlaterCore"] = 1,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_attacking_unit",
["semver"] = "",
},
{
["Enabled"] = false,
["Revision"] = 73,
["semver"] = "",
["LastHookEdited"] = "",
["Author"] = "Izimode-Azralon",
["HooksTemp"] = {
},
["Desc"] = "Hide neutral units, show when selected, see the constructor script for options.",
["Hooks"] = {
["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end\n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        envTable.HideNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n\n\n",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        --check the unit reaction\n        if (unitFrame.namePlateIsTarget) then\n            envTable.ShowNameplate (unitFrame)\n            \n        else\n            envTable.HideNameplate (unitFrame)\n            \n        end    \n    end\n    \nend\n\n\n\n\n\n\n",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        envTable.ShowNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when plater finishes an update on the nameplate\n    --check within the envTable if the healthBar of this nameplate should be hidden\n    if (envTable.IsHidden) then\n        if (unitFrame.healthBar:IsShown()) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\n    \nend\n\n\n\n\n",
["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.ShowNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.OnlyInOpenWorld = true;\n    envTable.ShowInCombat = true;\n    \n    --consts\n    envTable.REACTION_NEUTRAL = 4;\n    \n    --functions to hide and show the healthBar\n    function envTable.HideNameplate (unitFrame)\n        Plater.HideHealthBar (unitFrame)\n        Plater.DisableHighlight (unitFrame)\n        envTable.IsHidden = true\n    end\n    \n    function envTable.ShowNameplate (unitFrame)\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n        envTable.IsHidden = false\n    end\n    \nend\n\n\n\n\n",
},
["version"] = -1,
["Time"] = 1541606242,
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["race"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 1990989,
["Name"] = "Hide Neutral Units [Plater]",
},
{
["Enabled"] = false,
["Revision"] = 84,
["semver"] = "",
["LastHookEdited"] = "",
["Author"] = "Ahwa-Azralon",
["HooksTemp"] = {
},
["Desc"] = "Add extra effects to execute range. See the constructor script for options.",
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (envTable.UseCustomExecutePercent) then\n        \n        --manual detection\n        local healthBar = unitFrame.healthBar\n        if (healthBar.CurrentHealth / healthBar.CurrentHealthMax <= envTable.ExecutePercent) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end        \n        \n    else\n        \n        --auto detection\n        if (unitFrame.InExecuteRange) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --execute detection, if true the script will handle the execute percent\n    --while false Plater will automatically trigger the execute range\n    --you only want to set this to true in case of Plater not detecting the execute range correctly\n    envTable.UseCustomExecutePercent = false\n    --execute percent, if not detecting automatic, this is the percent to active the execute range\n    --use from zero to one, 0.20 is equal to 20% of the unit life\n    envTable.ExecutePercent = 0.20\n    \n    --allow this script to change the nameplate color when the unit is in execute range\n    envTable.CanChangeColor = true\n    --change the health bar color to this color when the unit is in execute range\n    --color can be set as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}\n    envTable.ExecuteColor = \"green\"\n    \n    --border color\n    envTable.CanChangeBorderColor = false\n    envTable.BorderColor = \"red\"\n    \n    --hide the default health divisor and the health execute indicator\n    envTable.HideHealthDivisor = false\n    --if not hidden, adjust the health divisor settings and the health execute indicator\n    envTable.HealthDivisorAlpha = 0.5\n    envTable.HealthDivisorColor = \"white\"\n    envTable.HealthExecuteIndicatorAlpha = 0.15\n    envTable.HealthExecuteIndicatorColor = \"darkred\"\n    \n    \n    --private (internal functions)\n    do\n        function envTable.UnitInExecuteRange (unitFrame)\n            --check if can change the execute color\n            if (envTable.CanChangeColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.ExecuteColor)\n            end\n            \n            if (envTable.CanChangeBorderColor) then\n                Plater.SetBorderColor (unitFrame, envTable.BorderColor)\n            end\n            \n            if (envTable.HideHealthDivisor) then\n                unitFrame.healthBar.healthCutOff:Hide() \n                unitFrame.healthBar.executeRange:Hide()\n                \n            else\n                envTable.UpdateHealthDivisor (unitFrame)\n                \n            end\n        end\n        \n        function envTable.UpdateHealthDivisor (unitFrame)\n            local healthBar = unitFrame.healthBar\n            \n            healthBar.healthCutOff:Show()\n            healthBar.healthCutOff:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthDivisorColor))\n            healthBar.healthCutOff:SetAlpha (envTable.HealthDivisorAlpha)\n            \n            healthBar.executeRange:Show()\n            healthBar.executeRange:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthExecuteIndicatorColor))\n            healthBar.executeRange:SetAlpha (envTable.HealthExecuteIndicatorAlpha)\n            \n            if (envTable.UseCustomExecutePercent) then\n                healthBar.healthCutOff:ClearAllPoints()\n                healthBar.executeRange:ClearAllPoints()\n                \n                healthBar.healthCutOff:SetSize (healthBar:GetHeight(), healthBar:GetHeight())\n                healthBar.healthCutOff:SetPoint (\"center\", healthBar, \"left\", healthBar:GetWidth() * envTable.ExecutePercent, 0)\n                \n                healthBar.executeRange:SetTexCoord (0, envTable.ExecutePercent, 0, 1)\n                healthBar.executeRange:SetHeight (healthBar:GetHeight())\n                healthBar.executeRange:SetPoint (\"left\", healthBar, \"left\", 0, 0)\n                healthBar.executeRange:SetPoint (\"right\", healthBar.healthCutOff, \"center\")\n            end\n            \n        end\n    end\n    \nend",
},
["version"] = -1,
["Time"] = 1547406548,
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["role"] = {
},
},
["url"] = "",
["Icon"] = 135358,
["Name"] = "Execute Range [Plater]",
},
{
["Enabled"] = false,
["Revision"] = 93,
["Options"] = {
},
["HooksTemp"] = {
},
["LastHookEdited"] = "",
["Author"] = "Kastfall-Azralon",
["version"] = -1,
["Desc"] = "Function Plater.UpdatePlateSize from Plater.lua exported to scritps.",
["Hooks"] = {
["Nameplate Added"] = "\n\n-- exported function Plater.UpdatePlateSize() from Plater.lua\n--this is for advanced users which wants to reorder the nameplate frame at their desire\n\n\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --check if there's a type of unit on this nameplate\n    local plateFrame = unitFrame:GetParent()\n    if (not plateFrame.actorType) then\n        return\n    end\n    \n    --get all the frames and cache some variables\n    local ACTORTYPE_ENEMY_PLAYER = \"enemyplayer\"\n    local profile = Plater.db.profile\n    local DB_PLATE_CONFIG = profile.plate_config\n    local isInCombat = Plater.IsInCombat()\n    local actorType = plateFrame.actorType\n    \n    local unitFrame = plateFrame.unitFrame\n    local healthBar = unitFrame.healthBar\n    local castBar = unitFrame.castBar\n    local powerBar = unitFrame.powerBar\n    local buffFrame1 = unitFrame.BuffFrame\n    local buffFrame2 = unitFrame.BuffFrame2\n    \n    --use in combat bars when in pvp\n    if (plateFrame.actorType == ACTORTYPE_ENEMY_PLAYER) then\n        if ((Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"arena\") and DB_PLATE_CONFIG.player.pvp_always_incombat) then\n            isInCombat = true\n        end\n    end\n    \n    --get the config for this actor type\n    local plateConfigs = DB_PLATE_CONFIG [actorType]\n    --get the config key based if the player is in combat\n    local castBarConfigKey, healthBarConfigKey, manaConfigKey = Plater.GetHashKey (isInCombat)\n    \n    --get the width and height from what the user set in the options panel\n    local healthBarWidth, healthBarHeight = unitFrame.customHealthBarWidth or plateConfigs [healthBarConfigKey][1], unitFrame.customHealthBarHeight or plateConfigs [healthBarConfigKey][2]\n    local castBarWidth, castBarHeight = unitFrame.customCastBarWidth or plateConfigs [castBarConfigKey][1], unitFrame.customCastBarHeight or plateConfigs [castBarConfigKey][2]\n    local powerBarWidth, powerBarHeight = unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][1], unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][2]\n    \n    --calculate the offset for the cast bar, this is done due to the cast bar be anchored to topleft and topright\n    local castBarOffSetX = (healthBarWidth - castBarWidth) / 2\n    local castBarOffSetY = plateConfigs.castbar_offset\n    \n    --calculate offsets for the power bar\n    local powerBarOffSetX = (healthBarWidth - powerBarWidth) / 2\n    local powerBarOffSetY = 0\n    \n    --calculate the size deviation for pets\n    local unitType = Plater.GetUnitType (plateFrame)\n    if (unitType == \"pet\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.pet_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.pet_width_scale\n        \n    elseif (unitType == \"minus\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.minor_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.minor_width_scale\n    end\n    \n    --unit frame - is set to be the same size as the plateFrame\n    unitFrame:ClearAllPoints()\n    unitFrame:SetAllPoints()\n    \n    --calculates the health bar anchor points\n    --it will always be placed in the center of the nameplate area (where it accepts mouse clicks) \n    local xOffSet = (plateFrame:GetWidth() - healthBarWidth) / 2\n    local yOffSet = (plateFrame:GetHeight() - healthBarHeight) / 2\n    \n    --set the health bar point\n    healthBar:ClearAllPoints()\n    PixelUtil.SetPoint (healthBar, \"topleft\", unitFrame, \"topleft\", xOffSet + profile.global_offset_x, -yOffSet + profile.global_offset_y)\n    PixelUtil.SetPoint (healthBar, \"bottomright\", unitFrame, \"bottomright\", -xOffSet + profile.global_offset_x, yOffSet + profile.global_offset_y)\n    \n    --set the cast bar point and size\n    castBar:ClearAllPoints()\n    PixelUtil.SetPoint (castBar, \"topleft\", healthBar, \"bottomleft\", castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetPoint (castBar, \"topright\", healthBar, \"bottomright\", -castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetHeight (castBar, castBarHeight)\n    PixelUtil.SetSize (castBar.Icon, castBarHeight, castBarHeight)\n    PixelUtil.SetSize (castBar.BorderShield, castBarHeight * 1.4, castBarHeight * 1.4)\n    \n    --set the power bar point and size\n    powerBar:ClearAllPoints()\n    PixelUtil.SetPoint (powerBar, \"topleft\", healthBar, \"bottomleft\", powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetPoint (powerBar, \"topright\", healthBar, \"bottomright\", -powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetHeight (powerBar, powerBarHeight)\n    \n    --power bar are hidden by default, show it if there's a custom size for it\n    if (unitFrame.customPowerBarWidth and unitFrame.customPowerBarHeight) then\n        powerBar:SetUnit (unitFrame.unit)\n    end\n    \n    --aura frames\n    local bf1Anchor = Plater.db.profile.aura_frame1_anchor\n    Plater.SetAnchor (buffFrame1, {side = bf1Anchor.side, x = bf1Anchor.x, y = bf1Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura_grow_direction or 2) == 2)\n    \n    local bf2Anchor = Plater.db.profile.aura_frame2_anchor\n    Plater.SetAnchor (buffFrame2, {side = bf2Anchor.side, x = bf2Anchor.x, y = bf2Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura2_grow_direction or 2) == 2)\n    \nend\n\n\n",
},
["Time"] = 1596791840,
["Name"] = "Reorder Nameplate [Plater]",
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["race"] = {
},
},
["PlaterCore"] = 1,
["url"] = "",
["Icon"] = 574574,
["semver"] = "",
},
{
["Enabled"] = false,
["Revision"] = 59,
["semver"] = "",
["LastHookEdited"] = "",
["Author"] = "Izimode-Azralon",
["HooksTemp"] = {
},
["Desc"] = "Change the nameplate color when a nameplate does not have the auras set in the constructor script.",
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --do nothing if the player isn't in combat\n    if (not Plater.IsInCombat()) then\n        return \n    end\n    \n    --do nothing if the unit isn't in combat\n    if (not unitFrame.InCombat) then\n        return\n    end\n    \n    --do nothing if the unit is the player it self\n    if (unitFrame.IsSelf) then\n        return\n    end\n    \n    --check the auras\n    local hasAura = false\n    \n    for auraName, _ in pairs (envTable.TrackingAuras) do\n        if (Plater.NameplateHasAura (unitFrame, auraName)) then\n            hasAura = true\n            break\n        end\n    end\n    \n    if (not hasAura) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    else\n        if (envTable.ForceRefreshNameplateColor) then\n            Plater.RefreshNameplateColor (unitFrame) \n        end\n    end    \n    \nend",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --Important: lines starting with double dashes are comments and are not part of the script\n    \n    --set this to true if you are not using threat colors in the health bar\n    envTable.ForceRefreshNameplateColor = true\n    \n    --if the unit does not have any of the following auras, it will be painted with the color listed below\n    --list of spells to track, can be the spell name (case-sensitive) or the spellID\n    envTable.TrackingAuras = {\n        --[\"Nightblade\"] = true, --this is an example using the spell name\n        --[195452] = true, --this is an example using the spellID\n        \n    }\n    \n    --which color the nameplate wil be changed\n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    --you may also use /plater colors\n    envTable.NameplateColor = \"pink\"\n    \nend",
},
["version"] = -1,
["Time"] = 1554138845,
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["role"] = {
},
},
["url"] = "",
["Icon"] = 136207,
["Name"] = "Don't Have Aura [Plater]",
},
{
["Enabled"] = false,
["Revision"] = 176,
["semver"] = "",
["LastHookEdited"] = "",
["Author"] = "Tecno-Azralon",
["HooksTemp"] = {
},
["Desc"] = "Add another border with more customizations. This border can also be manipulated by other scripts.",
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.IsEnabled) then\n        if (unitFrame.IsSelf) then\n            if (envTable.ShowOnPersonalBar) then\n                envTable.BorderFrame:Show()\n            else\n                envTable.BorderFrame:Hide() \n            end\n        else\n            envTable.BorderFrame:Show()\n        end   \n    end\n    \nend   \n\n\n\n",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border color\n    local borderColor = \"yellow\"\n    \n    --size of the border\n    local borderSize = 1\n    \n    --transparency\n    local borderAlpha = 1\n    \n    --enabled (set to false it you only want to use the extra border in other scripts)\n    local isEnabled = true\n    \n    --export border (allow the border to be used by other scripts)\n    --other scripts can use:\n    --unitFrame.healthBar.extraBorder:Show()\n    --unitFrame.healthBar.extraBorder:SetVertexColor (r, g, b)\n    --unitFrame.healthBar.extraBorder:SetBorderSizes (borderSize)\n    local canExportBorder = true\n    \n    --do not add the border to personal bar\n    local noPersonalBar = true\n    \n    --private\n    do\n        \n        local newBorder = CreateFrame (\"frame\", nil, unitFrame.healthBar, \"NamePlateFullBorderTemplate\")\n        envTable.BorderFrame = newBorder\n        \n        newBorder:SetBorderSizes (borderSize, borderSize, borderSize, borderSize)\n        newBorder:UpdateSizes()\n        \n        local r, g, b = DetailsFramework:ParseColors (borderColor)\n        newBorder:SetVertexColor (r, g, b, borderAlpha)\n        \n        envTable.ShowOnPersonalBar = not noPersonalBar\n        \n        if (canExportBorder) then\n            unitFrame.healthBar.extraBorder = newBorder\n        end\n        \n        if (not isEnabled) then\n            envTable.IsEnabled = false\n        else\n            envTable.IsEnabled = true\n        end\n    end\n    \nend\n\n\n",
},
["version"] = -1,
["Time"] = 1547409079,
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["race"] = {
},
},
["url"] = "",
["Icon"] = 133689,
["Name"] = "Extra Border [Plater]",
},
{
["Enabled"] = false,
["Revision"] = 284,
["Options"] = {
},
["HooksTemp"] = {
},
["LastHookEdited"] = "",
["Author"] = "Izimode-Azralon",
["version"] = -1,
["Desc"] = "Show combo points above the nameplate for Druid Feral and Rogues.",
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    --constructor is executed only once when any script of the hook runs.\n    \nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if need update the amount of combo points shown\n    if (envTable.LastPlayerTalentUpdate > envTable.LastUpdate) then\n        envTable.UpdateComboPointAmount()\n    end    \n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end    \n    \nend\n\n\n",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if this nameplate is the current target\n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n    else\n        envTable.ComboPointFrame:Hide()\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Player Power Update"] = "function (self, unitId, unitFrame, envTable, modTable, ...)\n    local powerType = ...\n    \n    if (powerType and powerType == \"COMBO_POINTS\" and unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.UpdateComboPoints()\n    end\n    \n    \nend",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n\n\n",
["Player Talent Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the amount of comboo points shown when the player changes talents or specialization\n    envTable.UpdateComboPointAmount()\n    \n    --save the time of the last talent change\n    envTable.LastPlayerTalentUpdate = GetTime()\n    \n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --settings\n    local anchors = {\n        {\"bottom\", unitFrame.healthBar, \"top\", 0, 24},\n    }\n    \n    local sizes = {\n        width = 12,\n        height = 12,\n        scale = 1,\n    }\n    \n    local textures = {\n        backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        backgroundTexCoords = {0/128, 21/128, 101/128, 122/128},\n        \n        comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        comboPointTexCoords = {3/128, 18/128, 81/128, 96/128},\n    }\n    if WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE then\n        textures = {\n            backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            backgroundTexCoords = {78/128, 98/128, 21/64, 41/64},\n            \n            comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            comboPointTexCoords = {100/128, 120/128, 21/64, 41/64},\n        }\n    end\n    \n    local frameLevel = 1000\n    local frameStrata = \"high\"    \n    \n    --private\n    do\n        --store combo points frames on this table\n        envTable.ComboPoints = {}\n        --save when the player changed talents or spec\n        envTable.LastPlayerTalentUpdate = GetTime()\n        --save when this nameplate got a combo point amount and alignment update        \n        \n        --build combo points frame anchor (combo point are anchored to this)\n        if (not unitFrame.PlaterComboPointFrame) then\n            local hostFrame = CreateFrame (\"frame\", nil, unitFrame)\n            hostFrame.ComboPointFramesPool = {}\n            unitFrame.PlaterComboPointFrame = hostFrame\n            envTable.ComboPointFrame = hostFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            \n            --DetailsFramework:ApplyStandardBackdrop (envTable.ComboPointFrame) --debug anchor size\n            \n            --animations\n            local onPlayShowAnimation = function (animation)\n                --stop the hide animation if it's playing\n                if (animation:GetParent():GetParent().HideAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().HideAnimation:Stop()\n                end\n                \n                animation:GetParent():Show()\n            end\n            \n            local onPlayHideAnimation = function (animation)\n                --stop the show animation if it's playing\n                if (animation:GetParent():GetParent().ShowAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().ShowAnimation:Stop()\n                end\n            end        \n            local onStopHideAnimation = function (animation)\n                animation:GetParent():Hide()       \n            end\n            \n            local createAnimations = function (comboPoint)\n                --on show\n                comboPoint.ShowAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayShowAnimation, nil)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 1, 0.1, 0, 0, 1, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"alpha\", 1, 0.1, .5, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 2, 0.1, 1.2, 1.2, 1, 1)\n                \n                --on hide\n                comboPoint.HideAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayHideAnimation, onStopHideAnimation)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"scale\", 1, 0.1, 1, 1, 0, 0)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"alpha\", 1, 0.1, 1, 0)\n            end\n            \n            --build combo point frame        \n            for i =1, 10 do \n                local f = CreateFrame (\"frame\", nil, envTable.ComboPointFrame)\n                f:SetSize (sizes.width, sizes.height)\n                tinsert (envTable.ComboPoints, f)\n                tinsert (unitFrame.PlaterComboPointFrame.ComboPointFramesPool, f)\n                \n                local backgroundTexture = f:CreateTexture (nil, \"background\")\n                backgroundTexture:SetTexture (textures.backgroundTexture)\n                backgroundTexture:SetTexCoord (unpack (textures.backgroundTexCoords))\n                backgroundTexture:SetSize (sizes.width, sizes.height)\n                backgroundTexture:SetPoint (\"center\")\n                \n                local comboPointTexture = f:CreateTexture (nil, \"artwork\")\n                comboPointTexture:SetTexture (textures.comboPointTexture)\n                comboPointTexture:SetTexCoord (unpack (textures.comboPointTexCoords))\n                \n                comboPointTexture:SetSize (sizes.width, sizes.height)\n                comboPointTexture:SetPoint (\"center\")\n                comboPointTexture:Hide()            \n                \n                f.IsActive = false\n                \n                f.backgroundTexture = backgroundTexture\n                f.comboPointTexture = comboPointTexture\n                \n                createAnimations (f)\n            end\n            \n        else\n            envTable.ComboPointFrame = unitFrame.PlaterComboPointFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            envTable.ComboPoints = unitFrame.PlaterComboPointFrame.ComboPointFramesPool\n            \n        end            \n        \n        envTable.ComboPointFrame:SetFrameLevel (frameLevel)\n        envTable.ComboPointFrame:SetFrameStrata (frameStrata)\n        \n        function envTable.UpdateComboPoints()\n            local comboPoints = GetComboPoints(\"player\", \"target\")\n            --UnitPower (\"player\", Enum.PowerType.ComboPoints)\n            \n            for i = 1, envTable.TotalComboPoints do\n                local thisComboPoint = envTable.ComboPoints [i]\n                \n                if (i <= comboPoints ) then\n                    --combo point enabled\n                    if (not thisComboPoint.IsActive) then\n                        thisComboPoint.ShowAnimation:Play()\n                        thisComboPoint.IsActive = true\n                        \n                    end\n                    \n                else\n                    --combo point disabled\n                    if (thisComboPoint.IsActive) then\n                        thisComboPoint.HideAnimation:Play()\n                        thisComboPoint.IsActive = false\n                        \n                    end\n                end\n            end\n            \n            \n        end\n        \n        function envTable.UpdateComboPointAmount()\n            local namePlateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat[1]\n            local comboPoints = UnitPowerMax (\"player\", Enum.PowerType.ComboPoints)\n            local reservedSpace = (namePlateWidth - sizes.width * comboPoints)  / comboPoints \n            \n            --store the total amount of combo points\n            envTable.TotalComboPoints = comboPoints\n            \n            --update anchor frame\n            envTable.ComboPointFrame:SetWidth (namePlateWidth)\n            envTable.ComboPointFrame:SetHeight (20)\n            envTable.ComboPointFrame:ClearAllPoints()\n            for i = 1, #anchors do\n                local anchor = anchors[i]\n                envTable.ComboPointFrame:SetPoint (unpack (anchor))\n            end        \n            \n            --\n            for i = 1, #envTable.ComboPoints do\n                envTable.ComboPoints[i]:Hide()\n                envTable.ComboPoints[i]:ClearAllPoints()\n            end\n            \n            for i = 1, comboPoints do\n                local comboPoint = envTable.ComboPoints[i]\n                if i == 1 then\n                    comboPoint:SetPoint (\"left\", envTable.ComboPointFrame, \"left\", reservedSpace/2, 0)\n                else\n                    comboPoint:SetPoint (\"left\", envTable.ComboPoints[i-1], \"right\", reservedSpace, 0)\n                end\n                \n                comboPoint:Show()\n            end\n            \n            envTable.LastUpdate = GetTime()\n            \n            envTable.UpdateComboPoints()\n        end\n        \n        --initialize\n        envTable.UpdateComboPointAmount()\n        envTable.ComboPointFrame:Hide()\n    end\n    \n    \nend",
},
["Time"] = 1621935143,
["Name"] = "Combo Points [Plater]",
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
["Enabled"] = true,
["DRUID"] = true,
["ROGUE"] = true,
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
["103"] = true,
["Enabled"] = true,
},
},
["PlaterCore"] = 1,
["url"] = "",
["Icon"] = 135426,
["semver"] = "",
},
{
["Enabled"] = false,
["Revision"] = 182,
["semver"] = "",
["LastHookEdited"] = "",
["Author"] = "Izimode-Azralon",
["HooksTemp"] = {
},
["Desc"] = "Show how many raid members are targeting the unit",
["Hooks"] = {
["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CanShow = false;\n    envTable.TargetAmount:SetText (\"\")\nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when a nameplate is added to the screen check if the player is in combat\n    if (InCombatLockdown()) then\n        --player is in combat, check if can check amount of targets\n        envTable.CanShow = envTable.CanShowTargetAmount();\n        \n    else\n        envTable.CanShow = false; \n    end\n    \n    envTable.TargetAmount:SetText (\"\");\n    \nend",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.TargetAmount:SetText (\"\");\n    envTable.CanShow = false;\n    \nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --if the script is allowed to show the amount of targets\n    --also check if the unit is in combat\n    if (envTable.CanShow and UnitAffectingCombat (unitId)) then\n        \n        --check if can update the amount of targets following the cooldown set in the constructor script\n        --by default Plater updates the nameplate every 250ms, by default the cooldown is 2, so it'll update the amuont of target every 1/2 of a second\n        envTable.UpdateCooldown = envTable.UpdateCooldown + 1\n        if (envTable.UpdateCooldown < envTable.UpdateInterval) then\n            return\n        else\n            \n            --reset the cooldown interval to check the amount of target again\n            envTable.UpdateCooldown = 0\n            \n            --get the amount of targets\n            local amount;\n            if (envTable.InRaid) then\n                amount = envTable.NumTargetsInRaid (unitFrame)      \n                \n            elseif (envTable.InParty) then\n                amount = envTable.NumTargetsInParty (unitFrame)   \n                \n            else\n                envTable.TargetAmount:SetText (\"\")\n                return\n            end\n            \n            --update the amount text\n            if (amount == 0) then\n                envTable.TargetAmount:SetText (\"\")\n            else\n                envTable.TargetAmount:SetText (amount)\n            end\n            \n        end\n    end\nend\n\n\n",
["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can show the amount of targets\n    envTable.CanShow = envTable.CanShowTargetAmount();\n    \n    if (not envTable.CanShow) then\n        envTable.TargetAmount:SetText (\"\") \n    end\nend\n\n\n\n\n",
["Constructor"] = "--all gray text like this are comments and do not run as code\n--build the settings and basic functions for the hook\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --declare setting variables:\n    local textColor = \"orange\";\n    local textSize = 12;\n    \n    local showInRaid = true;\n    local showInDungeon = true;\n    local showInArena = false;\n    local showInBattleground = false;\n    local showInOpenWorld = true;\n    \n    envTable.UpdateInterval = 2; --each 2 updates in the nameplate it'll update the amount of targets\n    \n    local anchor = {\n        side = 6, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = 4, --x offset\n        y = 0, --y offset\n    };\n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    \n    --frames:\n    \n    --create the text that will show the amount of people targeting the unit\n    if (not  unitFrame.healthBar.TargetAmount) then\n        envTable.TargetAmount = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        Plater.SetAnchor (envTable.TargetAmount, anchor);\n        unitFrame.healthBar.TargetAmount = envTable.TargetAmount\n    end\n    \n    --in case Plater wipes the envTable\n    envTable.TargetAmount = unitFrame.healthBar.TargetAmount\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --private variables (they will be used in the other scripts within this hook)\n    envTable.CanShow = false;\n    envTable.UpdateCooldown = 0;\n    envTable.InRaid = false;\n    envTable.InParty = false;\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --functions\n    \n    --update the InRaid or InParty proprieties\n    function envTable.UpdateGroupType()\n        if (IsInRaid()) then\n            envTable.InRaid = true;\n            envTable.InParty = false;     \n            \n        elseif (IsInGroup()) then\n            envTable.InRaid = false;\n            envTable.InParty = true;   \n            \n        else\n            envTable.InRaid = false;            \n            envTable.InParty = false;\n        end\n    end\n    \n    --this function controls if the amount of targets can show following the settings in the top of this script\n    function envTable.CanShowTargetAmount()\n        \n        local _, instanceType, difficultyID, _, _, _, _, instanceMapID, instanceGroupSize = GetInstanceInfo()\n        \n        if (showInRaid and instanceType == \"raid\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInDungeon and instanceType == \"party\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInArena and instanceType == \"arena\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInBattleground and instanceType == \"pvp\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInOpenWorld and instanceType == \"none\") then\n            envTable.UpdateGroupType()\n            if (envTable.InRaid or envTable.InParty) then\n                return true\n            end\n        end\n        \n        return false\n    end\n    \n    --get the amount of player targetting the unit in raid or party\n    function envTable.NumTargetsInRaid (unitFrame)\n        local amount = 0\n        for i = 1, GetNumGroupMembers() do\n            local unit = \"raid\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        return amount\n    end\n    \n    function envTable.NumTargetsInParty()\n        local amount = 0\n        for i = 1, GetNumGroupMembers() - 1 do\n            local unit = \"party\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        local unit = \"playertarget\"\n        if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n            amount = amount + 1\n        end        \n        \n        return amount\n    end\n    \nend",
},
["version"] = -1,
["Time"] = 1548278227,
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["role"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 1966587,
["Name"] = "Players Targeting a Target [Plater]",
},
{
["Enabled"] = false,
["Revision"] = 424,
["Options"] = {
},
["HooksTemp"] = {
},
["LastHookEdited"] = "",
["Author"] = "Ditador-Azralon",
["version"] = -1,
["Desc"] = "Reorder buffs and debuffs following the settings set in the constructor.",
["Hooks"] = {
["Initialization"] = "function (modTable)\n    \n    local sortByTime = true\n    local invertSort = true\n    local npcSeparatedFromPlayer = true\n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    local priority = {\n        [\"Vampiric Touch\"] = 50,\n        [\"Shadow Word: Pain\"] = 22,\n        [\"Mind Flay\"] = 5,\n        [\"Pistol Shot\"] = 50,\n        [\"Marked for Death\"] = 99,\n        [\"Garrote\"] = 95,\n        [\"Rupture\"] = 90,\n        [\"Sigil of Flame\"] = 50,\n    }\n    \n    -- Sort function - do not touch\n    Plater.db.profile.aura_sort = true\n    \n    \n    function Plater.AuraIconsSortFunction (aura1, aura2)\n        local p1 = priority[aura1.SpellId] or priority[aura1.SpellName] or aura1.layoutIndex or 1\n        local p2 = priority[aura2.SpellId] or priority[aura2.SpellName] or aura2.layoutIndex or 1\n        \n        if npcSeparatedFromPlayer then\n            if aura1.IsFromPlayer and not aura2.IsFromPlayer then\n                return false\n            elseif not aura1.IsFromPlayer and aura2.IsFromPlayer then\n                return true\n            end\n        end\n        \n        if sortByTime and p1 == p2 then\n            if invertSort then\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) > (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            else\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) < (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            end\n        else\n            if invertSort then\n                return p1 < p2\n            else\n                return p1 > p2\n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1741092085,
["Name"] = "Aura Reorder [Plater]",
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["PlaterCore"] = 1,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_reorder",
["semver"] = "",
},
{
["Enabled"] = false,
["Revision"] = 93,
["semver"] = "",
["LastHookEdited"] = "",
["Author"] = "Izimode-Azralon",
["HooksTemp"] = {
},
["Desc"] = "Changes the target color to the color set in the constructor script.",
["Hooks"] = {
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --usage: color name e.g \"red\" \"yellow\"; color table e.g {1, 0, 0} {1, 1, 0}; hex string e.g. \"#FF0000\" \"FFFF00\"\n    \n    envTable.TargetColor = \"purple\"\n    --envTable.TargetColor = \"#FF00FF\"\n    --envTable.TargetColor = {252/255, 0/255, 254/255}\n    \n    function envTable.UpdateColor (unitFrame)\n        --do not change the color of the personal bar\n        if (not unitFrame.IsSelf) then\n            \n            --if this nameplate the current target of the player?\n            if (unitFrame.namePlateIsTarget) then\n                Plater.SetNameplateColor (unitFrame, envTable.TargetColor)  --rgb\n            else\n                --refresh the nameplate color\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n        end\n    end\n    \nend\n\n\n\n\n",
},
["version"] = -1,
["Time"] = 1552354619,
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["role"] = {
},
},
["url"] = "",
["Icon"] = 878211,
["Name"] = "Current Target Color [Plater]",
},
},
["aura_x_offset"] = 0,
["saved_cvars_last_change"] = {
["nameplateSelfBottomInset"] = "Interface/AddOns/Blizzard_SharedXMLBase/CvarUtil.lua:9",
["nameplateShowSelf"] = "...lizzard_Settings_Shared/Blizzard_SettingControls.lua:423",
["nameplatePersonalShowAlways"] = "...e/AddOns/WeakAuras/AuraEnvironmentWrappedSystems.lua:51",
["nameplateSelfAlpha"] = "...e/AddOns/WeakAuras/AuraEnvironmentWrappedSystems.lua:51",
["nameplateShowPersonalCooldowns"] = "...lizzard_Settings_Shared/Blizzard_SettingControls.lua:423",
["nameplateSelfTopInset"] = "Interface/AddOns/Blizzard_SharedXMLBase/CvarUtil.lua:9",
["nameplateShowFriendlyBuffs"] = "...lizzard_Settings_Shared/Blizzard_SettingControls.lua:423",
["nameplateSelfScale"] = "...e/AddOns/WeakAuras/AuraEnvironmentWrappedSystems.lua:51",
},
["resources"] = {
["scale"] = 0.6000000238418579,
},
["aura_show_only_important_buffs_personal"] = true,
["script_auto_imported"] = {
["Cast - Important by Color [P]"] = 2,
["Aura - Buff Alert"] = 15,
["Cast - Effect After Cast [P]"] = 2,
["Explosion Affix M+"] = 14,
["Aura - Debuff Alert"] = 12,
["Cast - Shining Green [P]"] = 3,
["Cast - Ultra Important"] = 14,
["Add - Health Markers [P]"] = 3,
["Cast - Small Alert"] = 12,
["Add - Important [P]"] = 4,
["Aura - Blink Time Left"] = 13,
["Add - Tag Number [P]"] = 2,
["Cast - Special Ability [P]"] = 3,
["Cast - Heroic Leap [P]"] = 3,
["Fixate On You"] = 12,
["Cast - Spark Color [P]"] = 2,
["Cast - Heal Stun [P]"] = 2,
["Aura - Is Cast Bar [P]"] = 1,
["Cast - Tankbuster [P]"] = 1,
["Cast - Important Target [P]"] = 2,
["Cast - Castbar is Timer [P]"] = 2,
["Cast - Glowing [P]"] = 10,
["Add - Explode on Die [P]"] = 1,
["Cast - Very Important"] = 15,
["Cast - Alert + Timer [P]"] = 4,
["Cast - Debuff [P]"] = 2,
["Fixate by Unit Buff [P]"] = 2,
["Aura is Shield [P]"] = 5,
["Add - Warning [P]"] = 5,
["Cast - Simple Interrupt [P]"] = 2,
["Aura While Casting [P]"] = 1,
["Cast - Big Alert"] = 14,
["Cast - Ongoing Cast [P]"] = 4,
["Cast - Voidzone [P]"] = 2,
["Cast - Heal Cut [P]"] = 3,
["Countdown"] = 12,
["Spiteful Affix"] = 3,
["Cast - Stop Casting"] = 4,
["Add - Non Elite Trash [P]"] = 4,
["Cast - Quick Flash"] = 2,
["Auto Set Skull"] = 11,
["Cast - On Going Cast [P]"] = 2,
["Cast - AoE With Range [P]"] = 2,
["Cast - Frontal Cone"] = 17,
["Fixate"] = 11,
["Cast - AoE Hit All [P]"] = 3,
["Cast - Shield Interrupt"] = 2,
["Cast - Circular Swipe"] = 4,
["Unit - Show Energy"] = 11,
},
["resources_settings"] = {
["chr"] = {
["Player-57-0DF7C676"] = "Runes",
["Player-57-0DE12490"] = "Chi",
["Player-57-0DF9236F"] = "Essence",
},
},
["OptionsPanelDB"] = {
["PlaterOptionsPanelFrame"] = {
["scale"] = 1,
},
},
["first_run3"] = true,
["ui_parent_scale_tune"] = 1,
["patch_version"] = 39,
["aura_show_buffs_personal"] = true,
["saved_cvars"] = {
["nameplateSelfBottomInset"] = "0.37",
["nameplateShowSelf"] = "1",
["nameplatePersonalShowAlways"] = "1",
["nameplateSelfAlpha"] = "0",
["nameplateShowPersonalCooldowns"] = "1",
["nameplateSelfTopInset"] = "0.56",
["nameplateShowFriendlyBuffs"] = "0",
["nameplateSelfScale"] = "1",
},
["aura2_y_offset"] = 5,
["number_region"] = "eastasia",
["login_counter"] = 21,
["script_data_trash"] = {
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \n    --check if there's a timer for this spell\n    local timer = scriptTable.config.timerList[tostring(envTable._SpellID)]\n    \n    if (timer) then\n        --insert code here\n        \n        --set the castbar config\n        local config = {\n            iconTexture = \"\",\n            iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n            iconAlpha = 1,\n            iconSize = 14,\n            \n            text = \"Spikes Incoming!\",\n            textSize = 8,\n            \n            texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n            color = {.6, .6, .6, 0.8},\n            \n            isChanneling = false,\n            canInterrupt = false,\n            \n            height = 5,\n            width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n            \n            spellNameAnchor = {side = 3, x = 0, y = -2},\n            timerAnchor = {side = 5, x = 0, y = -2},\n        }\n        \n        Plater.SetAltCastBar(unitFrame.PlateFrame, config, timer, nil, nil)\n        local castBar2 = unitFrame.castBar2\n        castBar2.Text:ClearAllPoints()\n        castBar2.Text:SetPoint (\"topleft\", castBar2, \"bottomleft\", 0, 0)\n        castBar2.percentText:ClearAllPoints()\n        castBar2.percentText:SetPoint (\"topright\", castBar2, \"bottomright\", 0, 0)\n        Plater:SetFontSize(castBar2.percentText, 8)\n    end\n    \nend\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1670203758,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
["Enabled"] = true,
["Revision"] = 1213,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Player an animation when the cast start. Start a timer when the cast finishes. Set the time in the options.",
["__TrashAt"] = 1755664900,
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Cast start animation settings",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Key"] = "castbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Key"] = "flashDuration",
["Value"] = 0.4,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 5,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height Mod",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Key"] = "shakeAmplitude",
["Value"] = 8,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 7,
["Key"] = "timerList",
["Value"] = {
},
["Name"] = "Timer (Key is SpellId and Value is Time)",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Key is the spellId and value is the amount of time of the Timer",
},
},
["version"] = -1,
["Name"] = "Cast - Alert + Timer [P]",
["NpcNames"] = {
},
},
},
["ghost_auras"] = {
["auras"] = {
["WARLOCK"] = {
{
[172] = true,
[980] = true,
},
},
["PRIEST"] = {
[3] = {
[589] = true,
[34914] = true,
},
},
},
},
["aura_tracker"] = {
["buff_tracked"] = {
[209859] = true,
},
},
["plate_config"] = {
["global_health_height"] = 12,
["player"] = {
["health_incombat"] = {
225,
15,
},
["castbar_enabled"] = false,
["mana_incombat"] = {
225,
},
["health"] = {
225,
15,
},
["mana"] = {
225,
},
},
["global_health_width"] = 112,
},
["number_region_first_run"] = true,
["aura_y_offset"] = 5,
},
["Jundies Plater"] = {
["target_shady_combat_only"] = false,
["extra_icon_use_blizzard_border_color"] = false,
["script_data"] = {
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    local color = \"gray\"\n    \n    function envTable.updateNameplateColor(unitFrame)\n        if not InCombatLockdown() then\n            return\n        end\n        \n        -- Hardened Carapace stacks on Shattereshell Scarab\n        if unitFrame.namePlateNpcId == 144244 then\n            local auraInfo = C_UnitAuras.GetAuraDataBySpellName(unitId, C_Spell.GetSpellName(282801))\n            \n            if auraInfo and auraInfo.applications and auraInfo.applications <= 3 then\n                Plater.SetNameplateColor(unitFrame) -- omitting a color should reset it\n                return\n            end\n        end\n        \n        Plater.SetNameplateColor(unitFrame, color)\n    end\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable) end",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable) end",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.updateNameplateColor(unitFrame)\nend",
["Time"] = 1755150831,
["NpcNames"] = {
},
["url"] = "",
["Icon"] = "524354",
["Options"] = {
},
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable) end",
["Revision"] = 739,
["semver"] = "",
["Desc"] = "When an aura makes the unit invulnarable and you don't want to attack it. Add spell in the Add Trigger field.",
["version"] = -1,
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (self, unitId, unitFrame, envTable) end",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable) end",
["Name"] = "Invalidate Unit - Jundies",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.updateNameplateColor(unitFrame)\nend",
["SpellIds"] = {
261265,
261266,
271590,
350857,
352016,
235308,
235089,
367573,
362020,
232156,
374779,
113309,
117665,
379256,
396734,
406730,
403049,
410631,
410654,
403284,
421013,
425794,
260923,
264027,
75683,
336499,
335141,
256957,
440177,
438706,
451026,
325697,
442611,
458199,
457877,
469981,
282801,
467117,
465420,
1219283,
1222948,
471660,
1213817,
260189,
1231726,
1228284,
1228454,
1219457,
1242952,
351086,
347097,
1248701,
},
["PlaterCore"] = 1,
["Prio"] = 99,
["Temp_Initialization"] = "function (self, unitId, unitFrame, envTable) end",
["Enabled"] = true,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    local color = \"gray\"\n    \n    function envTable.updateNameplateColor(unitFrame)\n        if not InCombatLockdown() then\n            return\n        end\n        \n        -- Hardened Carapace stacks on Shattereshell Scarab\n        if unitFrame.namePlateNpcId == 144244 then\n            local auraInfo = C_UnitAuras.GetAuraDataBySpellName(unitId, C_Spell.GetSpellName(282801))\n            \n            if auraInfo and auraInfo.applications and auraInfo.applications <= 3 then\n                Plater.SetNameplateColor(unitFrame) -- omitting a color should reset it\n                return\n            end\n        end\n        \n        Plater.SetNameplateColor(unitFrame, color)\n    end\nend",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 14, \"orange\");\n    envTable.EnergyAmount:SetPoint (\"top\", unitFrame, \"left\", -8, 20);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
["OptionsValues"] = {
["fontColor"] = {
1,
1,
1,
1,
},
["fontSize"] = 12,
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n",
["Time"] = 1754250882,
["NpcNames"] = {
"171557",
"162060",
"168318",
"184140",
"182169",
"196482",
"186120",
"186116",
"189901",
"197025",
"190496",
"189813",
"190245",
"184972",
"184986",
"186737",
"186616",
"186615",
"131383",
"133007",
"202375",
"201320",
"201579",
"189340",
"131817",
"209333",
"122967",
"206172",
"200927",
"208367",
"208363",
"218523",
"208743",
"209230",
"144248",
"230583",
"229181",
"229177",
"237661",
"237662",
"237660",
"233814",
},
["url"] = "",
["Icon"] = 136048,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Show the power of the unit above the nameplate.",
["Name"] = "script desc",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Add the unit name or unitId in the \"Add Trigger\" field and press \"Add\".",
["Name"] = "add trigger",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showLater",
["Value"] = true,
["Name"] = "Show at 80% of Energy",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the energy won't start showing until the unit has 80% energy.",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Text size.",
["Min"] = 8,
["Key"] = "fontSize",
["Value"] = 16,
["Name"] = "Text Size",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 1,
["Key"] = "fontColor",
["Value"] = {
0.80392156862745,
0.80392156862745,
0.80392156862745,
1,
},
["Name"] = "Font Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the text.",
},
{
["Type"] = 4,
["Key"] = "outline",
["Value"] = true,
["Name"] = "Enable Text Outline",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the text uses outline.",
},
},
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
["Revision"] = 651,
["semver"] = "",
["Desc"] = "Show the energy amount above the nameplate.",
["version"] = -1,
["Author"] = "Celian-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
["Name"] = "Show Energy - Jundies",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Prio"] = 99,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Enabled"] = true,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 14, \"orange\");\n    envTable.EnergyAmount:SetPoint (\"top\", unitFrame, \"left\", -8, 20);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.options = {\n        color = \"yellow\", -- all plater color types accepted, from lib: {r,g,b,a}, color of lines and opacity, from 0 to 1.\n        N = 6, -- number of lines. Defaul value is 8;\n        frequency = 0.5, -- frequency, set to negative to inverse direction of rotation. Default value is 0.25;\n        length = 4, -- length of lines. Default value depends on region size and number of lines;\n        th = 2, -- thickness of lines. Default value is 2;\n        xOffset = 0.5,\n        yOffset = 0.5, -- offset of glow relative to region border;\n        border = false, -- set to true to create border under lines;\n        key = \"pandemicGlow\",\n    }\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    Plater.StopPixelGlow(self.Cooldown, envTable.options.key)\n    self.glowStarted = false\n    \n    envTable.pandemicTime[self.spellId..unitId] = nil\n    \nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    --insert code here\n    envTable.pandemicTime = envTable.pandemicTime or {}\n    envTable.pandemicTime[self.spellId..unitId] = envTable._RemainingTime * 0.3\nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --if (timeLeft < (envTable.pandemicTime[self.spellId..unitId] or (envTable._Duration*0.3))) then\n    if (timeLeft < (envTable._Duration*0.3)) then\n        if not self.glowStarted then\n            self.glowStarted = true\n            Plater.StartPixelGlow(self.Cooldown, nil, envTable.options, envTable.options.key)\n        end\n    else\n        if self.glowStarted then\n            self.glowStarted = false\n            Plater.StopPixelGlow(self.Cooldown, envTable.options.key)\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n",
["Time"] = 1754262464,
["NpcNames"] = {
},
["url"] = "",
["Icon"] = 413591,
["Options"] = {
},
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    Plater.StopPixelGlow(self.Cooldown, envTable.options.key)\n    self.glowStarted = false\n    \n    envTable.pandemicTime[self.spellId..unitId] = nil\n    \nend\n\n\n",
["Revision"] = 375,
["semver"] = "",
["Desc"] = "Adds a configurable pixel border glow to the buff/debuff if the remaining duration is less than 30% of its total duration.",
["version"] = -1,
["Author"] = "Viash-Thrall",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    --insert code here\n    envTable.pandemicTime = envTable.pandemicTime or {}\n    envTable.pandemicTime[self.spellId..unitId] = envTable._RemainingTime * 0.3\nend\n\n\n",
["Name"] = "Pandemic Glow - Jundies",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --if (timeLeft < (envTable.pandemicTime[self.spellId..unitId] or (envTable._Duration*0.3))) then\n    if (timeLeft < (envTable._Duration*0.3)) then\n        if not self.glowStarted then\n            self.glowStarted = true\n            Plater.StartPixelGlow(self.Cooldown, nil, envTable.options, envTable.options.key)\n        end\n    else\n        if self.glowStarted then\n            self.glowStarted = false\n            Plater.StopPixelGlow(self.Cooldown, envTable.options.key)\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
292711,
278946,
212463,
284402,
284401,
2818,
703,
1943,
295425,
283668,
316220,
258179,
207690,
315341,
1822,
1079,
106830,
202347,
204213,
391191,
980,
172,
445468,
445465,
316099,
383346,
},
["PlaterCore"] = 1,
["Prio"] = 99,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Enabled"] = true,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.options = {\n        color = \"yellow\", -- all plater color types accepted, from lib: {r,g,b,a}, color of lines and opacity, from 0 to 1.\n        N = 6, -- number of lines. Defaul value is 8;\n        frequency = 0.5, -- frequency, set to negative to inverse direction of rotation. Default value is 0.25;\n        length = 4, -- length of lines. Default value depends on region size and number of lines;\n        th = 2, -- thickness of lines. Default value is 2;\n        xOffset = 0.5,\n        yOffset = 0.5, -- offset of glow relative to region border;\n        border = false, -- set to true to create border under lines;\n        key = \"pandemicGlow\",\n    }\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
["OptionsValues"] = {
["useCastbarColor"] = false,
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    --Dominator on Shadowmoon Burial Grounds\n    if (envTable._SpellID == 154327) then\n        if (UnitHealth(unitId) == UnitHealthMax(unitId)) then\n            if (envTable._Duration == 604800) then\n                Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, {1, 0, 0, 1}, envTable)\n            end\n        end\n    end\nend",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1755150785,
["NpcNames"] = {
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_darkorange",
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a big animation when the cast start.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Flash:",
["Name"] = "Flash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Key"] = "flashDuration",
["Value"] = 0.8,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Key"] = "flashColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Flash Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Shake:",
["Name"] = "Shake",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Key"] = "shakeAmplitude",
["Value"] = 5,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option14",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
0.56470588235294,
0.56470588235294,
0.56470588235294,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 8,
["Name"] = "Dot X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Key"] = "yOffset",
["Value"] = 3,
["Name"] = "Dot Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option19",
["Value"] = "Cast Bar",
["Name"] = "Option 19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Use Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
0.41176470588235,
1,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
},
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
["Revision"] = 1488,
["semver"] = "",
["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
["version"] = -1,
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    --Dominator on Shadowmoon Burial Grounds\n    if (envTable._SpellID == 154327) then\n        if (UnitHealth(unitId) == UnitHealthMax(unitId)) then\n            if (envTable._Duration == 604800) then\n                Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, {1, 0, 0, 1}, envTable)\n            end\n        end\n    end\nend",
["Name"] = "Important Casts - Jundies",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["SpellIds"] = {
268030,
320822,
333292,
341840,
324987,
333478,
178072,
330438,
329423,
350287,
334928,
348428,
358980,
351073,
358026,
351603,
356023,
330513,
334076,
237946,
237952,
312262,
242733,
362628,
316443,
356031,
356011,
356001,
355642,
355644,
355782,
355057,
357260,
357284,
347015,
355139,
336451,
364240,
364241,
361923,
368063,
356407,
363024,
355584,
334664,
340300,
366288,
232120,
228554,
228009,
228025,
228019,
227977,
228278,
228280,
228567,
29339,
169341,
162415,
340037,
373513,
373618,
167232,
227646,
375606,
386549,
385568,
385393,
388211,
371983,
373405,
391599,
387627,
375653,
387862,
392457,
371624,
393309,
393296,
391268,
393429,
374623,
390548,
391019,
392486,
385331,
388804,
106856,
397394,
377612,
385574,
215204,
212773,
397382,
265540,
403978,
403671,
278755,
265511,
183528,
193803,
193585,
410870,
87779,
373897,
411302,
274400,
400296,
405433,
408805,
411300,
412378,
412233,
415304,
421029,
420525,
425816,
264390,
264407,
253583,
256849,
204243,
427459,
169839,
76820,
225562,
436841,
334748,
324293,
434802,
322938,
256957,
275826,
446700,
257169,
272571,
449455,
429109,
443430,
451871,
76711,
338353,
432967,
433841,
452162,
431309,
451097,
462508,
429428,
407120,
444743,
427609,
432959,
424420,
440687,
448248,
429545,
447950,
447411,
445021,
333623,
460092,
330868,
342675,
474337,
280604,
267433,
293827,
301088,
441627,
460582,
448791,
428169,
427601,
428066,
1220752,
341969,
263628,
1215741,
1219041,
448492,
268702,
441242,
1214780,
462771,
466765,
326450,
1230261,
1221532,
1229510,
1229474,
350922,
326409,
1235326,
357404,
},
["PlaterCore"] = 1,
["Prio"] = 99,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Enabled"] = true,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
},
{
["ConstructorCode"] = "function()\nend",
["OnHideCode"] = "function()\nend",
["OptionsValues"] = {
["debuffed"] = 0.79999995231628,
["casting"] = 1.1999999284744,
["hide"] = true,
},
["Temp_OnShowCode"] = "function()\nend\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (_, _, unitFrame, _, scriptTable)\n    local isDebuffed = scriptTable.isDebuffed(unitFrame)\n    \n    if isDebuffed then\n        if scriptTable.config.hide then\n            scriptTable.hide(unitFrame)\n            return\n        end\n        \n        Plater.SetNameplateScale(unitFrame, scriptTable.config.debuffed)\n        -- instantly ccd enemies (e.g. freeze trap) never had the animation start\n        if unitFrame.healthBar.HealthFlashFrame then\n            unitFrame.healthBar.HealthFlashFrame:StopAnimating()\n        end\n        \n        return\n    end\n    scriptTable.show(unitFrame)\n    \n    Plater.SetNameplateScale(unitFrame, scriptTable.config.casting)\n    Plater.FlashNameplateBorder(unitFrame)\nend",
["Time"] = 1739509578,
["NpcNames"] = {
"204560",
},
["url"] = "",
["Icon"] = 298642,
["Options"] = {
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "nameplate scale while debuffed",
["Min"] = 0,
["Key"] = "debuffed",
["Value"] = 0.8,
["Name"] = "Debuffed Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "nameplate scale while casting",
["Min"] = 0,
["Key"] = "casting",
["Value"] = 1.4,
["Name"] = "Casting Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "hide",
["Value"] = false,
["Name"] = "Hide Nameplate when ccd",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
},
["Temp_OnHideCode"] = "function()\nend",
["Revision"] = 268,
["semver"] = "1.0.6",
["Desc"] = "conditionally scales the nameplate of Incorporeal Beings when not ccd",
["version"] = 7,
["Author"] = "Ququlcoatl-Blackmoore",
["Initialization"] = "function (scriptTable)\n    -- taken from https://github.com/Tercioo/Plater-Nameplates/blob/master/libs/DF/spells.lua#L916\n    -- but trimmed to only include ccs that would deal with it for good\n    local spells = {\n        [118699] = \"WARLOCK\", -- Fear (debuff spellid)\n        [710] = \"WARLOCK\", -- Banish\n        [118] = \"MAGE\", -- Polymorph\n        [61305] = \"MAGE\", -- Polymorph (black cat)\n        [28271] = \"MAGE\", -- Polymorph Turtle\n        [161354] = \"MAGE\", -- Polymorph Monkey\n        [161353] = \"MAGE\", -- Polymorph Polar Bear Cub\n        [126819] = \"MAGE\", -- Polymorph Porcupine\n        [277787] = \"MAGE\", -- Polymorph Direhorn\n        [61721] = \"MAGE\", -- Polymorph Rabbit\n        [28272] = \"MAGE\", -- Polymorph Pig\n        [277792] = \"MAGE\", -- Polymorph Bumblebee\n        [391622] = \"MAGE\", -- Polymorph Duck\n        [9484] = \"PRIEST\", -- Shackle Undead\n        [2094] = \"ROGUE\", -- Blind\n        [427773] = \"ROGUE\", -- Blind\n        [20066] = \"PALADIN\", -- Repentance (talent)\n        [10326] = \"PALADIN\", -- Turn Evil\n        [2637] = \"DRUID\", -- Hibernate\n        [115078] = \"MONK\", -- Paralysis\n        [51514] = \"SHAMAN\", -- Hex\n        [210873] = \"SHAMAN\", -- Hex (Compy)\n        [211004] = \"SHAMAN\", -- Hex (Spider)\n        [211010] = \"SHAMAN\", -- Hex (Snake)\n        [211015] = \"SHAMAN\", -- Hex (Cockroach)\n        [269352] = \"SHAMAN\", -- Hex (Skeletal Hatchling)\n        [277778] = \"SHAMAN\", -- Hex (Zandalari Tendonripper)\n        [277784] = \"SHAMAN\", -- Hex (Wicker Mongrel)\n        [309328] = \"SHAMAN\", -- Hex (Living Honey)\n        [217832] = \"DEMONHUNTER\", -- Imprison\n        [360806] = \"EVOKER\", -- Sleep Walk\n        [3355] = \"HUNTER\", -- Freezing Trap\n        [1513] = \"HUNTER\" -- Scare Beast\n    }\n    \n    --- @return boolean\n    scriptTable.isDebuffed = function(unitFrame)\n        for spellId in pairs(spells) do\n            if Plater.UnitHasAura(unitFrame, spellId) then\n                return true\n            end\n        end\n        \n        return false\n    end\n    \n    scriptTable.hide = function(unitFrame)\n        -- no check whether its already hidden as it may reappear for whichever\n        -- reason when you turn camera away and back to it again\n        Plater.HideHealthBar(unitFrame)\n        Plater.DisableHighlight(unitFrame)\n        unitFrame._isHidden = true\n    end\n    \n    scriptTable.show = function(unitFrame)\n        if not unitFrame._isHidden then\n            return\n        end\n        \n        Plater.ShowHealthBar(unitFrame)\n        Plater.EnableHighlight(unitFrame)\n        unitFrame._isHidden = false\n    end\nend",
["OnShowCode"] = "function()\nend\n\n\n\n",
["Name"] = "Incorporeal - Jundies",
["Temp_UpdateCode"] = "function (_, _, unitFrame, _, scriptTable)\n    local isDebuffed = scriptTable.isDebuffed(unitFrame)\n    \n    if isDebuffed then\n        if scriptTable.config.hide then\n            scriptTable.hide(unitFrame)\n            return\n        end\n        \n        Plater.SetNameplateScale(unitFrame, scriptTable.config.debuffed)\n        -- instantly ccd enemies (e.g. freeze trap) never had the animation start\n        if unitFrame.healthBar.HealthFlashFrame then\n            unitFrame.healthBar.HealthFlashFrame:StopAnimating()\n        end\n        \n        return\n    end\n    scriptTable.show(unitFrame)\n    \n    Plater.SetNameplateScale(unitFrame, scriptTable.config.casting)\n    Plater.FlashNameplateBorder(unitFrame)\nend",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Prio"] = 99,
["Temp_Initialization"] = "function (scriptTable)\n    -- taken from https://github.com/Tercioo/Plater-Nameplates/blob/master/libs/DF/spells.lua#L916\n    -- but trimmed to only include ccs that would deal with it for good\n    local spells = {\n        [118699] = \"WARLOCK\", -- Fear (debuff spellid)\n        [710] = \"WARLOCK\", -- Banish\n        [118] = \"MAGE\", -- Polymorph\n        [61305] = \"MAGE\", -- Polymorph (black cat)\n        [28271] = \"MAGE\", -- Polymorph Turtle\n        [161354] = \"MAGE\", -- Polymorph Monkey\n        [161353] = \"MAGE\", -- Polymorph Polar Bear Cub\n        [126819] = \"MAGE\", -- Polymorph Porcupine\n        [277787] = \"MAGE\", -- Polymorph Direhorn\n        [61721] = \"MAGE\", -- Polymorph Rabbit\n        [28272] = \"MAGE\", -- Polymorph Pig\n        [277792] = \"MAGE\", -- Polymorph Bumblebee\n        [391622] = \"MAGE\", -- Polymorph Duck\n        [9484] = \"PRIEST\", -- Shackle Undead\n        [2094] = \"ROGUE\", -- Blind\n        [427773] = \"ROGUE\", -- Blind\n        [20066] = \"PALADIN\", -- Repentance (talent)\n        [10326] = \"PALADIN\", -- Turn Evil\n        [2637] = \"DRUID\", -- Hibernate\n        [115078] = \"MONK\", -- Paralysis\n        [51514] = \"SHAMAN\", -- Hex\n        [210873] = \"SHAMAN\", -- Hex (Compy)\n        [211004] = \"SHAMAN\", -- Hex (Spider)\n        [211010] = \"SHAMAN\", -- Hex (Snake)\n        [211015] = \"SHAMAN\", -- Hex (Cockroach)\n        [269352] = \"SHAMAN\", -- Hex (Skeletal Hatchling)\n        [277778] = \"SHAMAN\", -- Hex (Zandalari Tendonripper)\n        [277784] = \"SHAMAN\", -- Hex (Wicker Mongrel)\n        [309328] = \"SHAMAN\", -- Hex (Living Honey)\n        [217832] = \"DEMONHUNTER\", -- Imprison\n        [360806] = \"EVOKER\", -- Sleep Walk\n        [3355] = \"HUNTER\", -- Freezing Trap\n        [1513] = \"HUNTER\" -- Scare Beast\n    }\n    \n    --- @return boolean\n    scriptTable.isDebuffed = function(unitFrame)\n        for spellId in pairs(spells) do\n            if Plater.UnitHasAura(unitFrame, spellId) then\n                return true\n            end\n        end\n        \n        return false\n    end\n    \n    scriptTable.hide = function(unitFrame)\n        -- no check whether its already hidden as it may reappear for whichever\n        -- reason when you turn camera away and back to it again\n        Plater.HideHealthBar(unitFrame)\n        Plater.DisableHighlight(unitFrame)\n        unitFrame._isHidden = true\n    end\n    \n    scriptTable.show = function(unitFrame)\n        if not unitFrame._isHidden then\n            return\n        end\n        \n        Plater.ShowHealthBar(unitFrame)\n        Plater.EnableHighlight(unitFrame)\n        unitFrame._isHidden = false\n    end\nend",
["Enabled"] = false,
["Temp_ConstructorCode"] = "function()\nend",
},
{
["ConstructorCode"] = "function (_, _, _, envTable, scriptTable)\n    \n    \n    --TWW Dungeons\n    \n    local araKara = {\n    }\n    \n    local cityOfThreads = {\n        [219984] = { 50 }, --Xeph'itik\n    }\n    \n    local dawnbreaker = {\n        [211087] = { 50 }, --Speaker Shadowcrown\n        [213937] = { 60 }, --Rasha'nan\n    }\n    \n    local prioryOfTheSacredFlame = {\n        [207940] = { 50 }, --Prioress Murrpray\n        [206710] = { 25 }, -- Lightspawn\n    }\n    \n    local darkflameCleft = {\n        [208747] = { 55 }, -- The Darkness\n    }\n    \n    local cinderbrewMeadery = {\n        [210271] = { 66, 33 }, -- Brew Master Aldryr\n        [210265] = { 30 }, -- Worker Bee\n        [223497] = { 30 }, -- Worker Bee Summoned\n    }\n    \n    local theRookery = {\n        [212739] = { 40 }, --Radiating Voidstone\n    }\n    \n    \n    \n    --DF Dungeons\n    \n    local dawnOfTheInfinite = {\n        [207638] = { 80 }, -- Blight of Galakrond\n        [207639] = { 80 }, -- Blight of Galakrond\n        [198997] = { 80 }, -- Blight of Galakrond\n        [201792] = { 50 }, -- Ahnzon\n        [199000] = { 20 }, -- Deios\n        [198933] = { 90, 85 }, -- Iridikron\n    }\n    \n    local rubyLifePools = {\n        [190485] = { 50 }, -- Stormvein\n        [190484] = { 50 }, -- Kyrakka\n        [193435] = { 50 }, -- Kyrakka\n        [188252] = { 75, 45 }, -- Melidrussa Chillworn\n        [197697] = { 50 }, -- Flamegullet\n    }\n    \n    local azureVault = {\n        [186738] = { 75, 50, 25 }, -- Umbrelskul\n    }\n    \n    local brackenhideHollow = {\n        [186125] = { 15 }, -- Tricktotem\n        [186122] = { 15 }, -- Rira Hackclaw\n        [186124] = { 15 }, -- Gashtooth\n        [185534] = { 15 }, -- Bonebolt Hunter\n        [186206] = { 15 }, -- Cruel Bonecrusher\n        [185508] = { 15 }, -- Claw Fighter\n        [185528] = { 15 }, -- Trickclaw Mystic\n        [186121] = { 4 }, -- Decatriarch Wratheye\n        [186227] = { 20 }, -- Monstrous Decay\n    }\n    \n    local neltharus = {\n        [194816] = { 10 }, -- Forgewrought Monstrosity\n    }\n    \n    local hallsOfInfusion = {\n        [189719] = { 15 }, -- Watcher Irideus\n        [190407] = { 20 }, -- Aqua Rager\n        [189729] = { 60 }, -- Primal Tsunami\n    }\n    \n    local nokhudOffensive = {\n        [186151] = { 60 }, --Balakar Khan\n    }\n    \n    local uldaman = {\n        [184020] = { 40 }, -- Hulking Berserker\n        [184580] = { 10 }, -- Olaf\n        [184581] = { 10 }, -- Baelog\n        [184582] = { 10 }, -- Eric \"The Swift\"\n        [184125] = { 1 }, -- Chrono-Lord Deios\n    }\n    \n    --SL Dungeons\n    \n    local theaterOfPain = {\n        [164451] = { 40 }, -- Dessia the Decapitator\n        [164463] = { 40 }, -- Paceran the Virulent\n        [164461] = { 40 }, -- Sathel the Accursed\n        [165946] = { 50 }, -- Mordretha\n    }\n    \n    local mistsOfTirnaScithe = {\n        [164501] = { 70, 40, 10 }, -- Mistcaller\n        [164926] = { 50 }, --Drust Boughbreaker\n        [164804] = { 20 }, -- Droman Oulfarran\n        [164517] = { 70, 40 }, --Tred'ova\n        [164929] = { 20 }, --Tirnenn Villager\n    }\n    \n    local plaguefall = {\n        [164267] = { 66, 33 }, -- Magrave Stradama\n        [164967] = { 66, 33 }, -- Doctor ickus\n        [169861] = { 66, 33 }, -- Ickor Bileflesh\n    }\n    \n    local hallsOfAtonement = {\n        [164218] = { 70, 40 }, --Lord Chamberlain\n        [165415] = { 30 }, -- Groundskeeper\n    }\n    \n    local sanguineDepths = {\n        [162099] = { 50 }, -- General Kaal Boss fight\n    }\n    \n    local spiresOfAscension = {\n        [162061] = { 70, 30 }, --Devos\n    }\n    \n    local necroticWake = {\n        [163121] = { 70 }, -- Stitched Vanguard\n    }\n    \n    local deOtherSide = {\n        [164558] = { 80, 60, 40, 20 }, -- Hakkar the Soulflayer\n    }\n    \n    local tazaveshGambit = {\n        [177269] = { 40 }, -- So'leah\n    }\n    \n    local tazaveshStreets = {\n        [175806] = { 70, 40 }, -- So'azmi\n        [176564] = { 66, 33 }, -- Zo'gron\n    }\n    \n    --BFA Dungeons\n    \n    local freehold = {\n        [126983] = { 60, 30 }, -- Harlan Sweete - Freehold\n        [126832] = { 75 }, -- Skycap'n Kragg - Freehold\n        [129699] = { 90, 70, 50, 30 }, -- Ludwig von Tortollan - Freehold\n    }\n    \n    local waycrest = {\n        [131527] = { 30 }, -- Lord Waycrest\n    }\n    \n    local siegeOfBoralus = {\n        [129208] = { 66, 33 }, -- Dread Captain Lockwood\n    }\n    \n    local motherlode = {\n        [133345] = { 20 }, -- Feckless Assistant\n        [129232] = { 50 }, -- Mogul Razdunk\n    }\n    \n    local junkyard = {\n        [150276] = { 50 }, -- Heavy Scrapbot\n        [152009] = { 30 }, -- Malfunctioning Scrapbots\n        [144298] = { 30 }, -- Defense Bot Mk III (Workshop)\n    }\n    \n    local workshop = {\n        [144298] = { 30 }, -- Defense Bot Mk III (casts a shield)\n    }\n    \n    --Legion Dungeons\n    \n    local karazhanUpper = {\n        [114790] = { 66, 33 }, -- Viz'aduum\n    }\n    \n    local karazhanLower = {\n        [114261] = { 50 }, -- Toe Knee\n        [114260] = { 50 }, -- Mrrgria\n        [114265] = { 50 }, -- Gang Ruffian\n        [114783] = { 50 }, -- Reformed Maiden\n        [114312] = { 60 }, -- Moroes\n    }\n    \n    local hallsOfValor = {\n        [96574] = { 30 }, -- Stormforged Sentinel\n        [95674] = { 60.5 }, -- Fenryr P1\n        [94960] = { 10.5 }, -- Hymdall\n        [95676] = { 80, 5 }, -- Odyn\n    }\n    \n    local courtOfStars = {\n        [104215] = { 25 }, -- Patrol Captain Gerdo\n    }\n    \n    local neltharionsLair = {\n        [91005] = { 20 }, -- Naraxas\n    }\n    \n    local blackRookHold = {\n        [98542] = { 50 }, -- Amalgam of Souls\n        [98965] = { 20 }, -- Kur'talos Ravencrest\n    }\n    \n    local darkheartThicket = {\n        [99192] = { 50 }, -- Shade of Xavius\n    }\n    \n    --WoD Dungeons\n    \n    local grimrailDepot = {\n        [81236] = { 50 }, -- Grimrail Technician\n        [79545] = { 60 }, -- Nitrogg Thundertower\n        [77803] = { 20 }, -- Railmaster Rocketspark\n    }\n    \n    local ironDocks = {\n        [81297] = { 50 }, -- Dreadfang -> Fleshrender Nok'gar\n    }\n    \n    local shadowmoonBurialGrounds = {\n        [76057] = { 20.5 }, -- Carrion Worm\n    }\n    \n    --MoP Dungeons\n    \n    local templeOfTheJadeSerpent = {\n        [59544] = { 50 }, --The Nodding Tiger\n        [56732] = { 70, 30 }, -- Liu Flameheart\n    }\n    \n    --Cata Dungeons\n    \n    local throneOfTheTides = {\n        [40586] = { 60, 30 }, -- Lady Naz'jar\n        [40825] = { 25 }, -- Erunak Stonespeaker\n    }\n    \n    local grimBatol = {\n        [224249] = { 50 }, --Twilight Lavabender\n        [40320] = { 50 }, --Valiona\n    }\n    \n    \n    --Raids \n    \n    local manaforgeOmega = {\n        [237763] = { 50 }, -- Nexus King Salhadaar\n        [233815] = { 50 }, -- Loom'ithar\n    }\n    \n    local liberationOfUndermine = {\n        [231531] = { 80 }, -- Territorial Bombshell\n        [229953] = { 40 }, -- Mug'Zee\n        [230316] = { 80 }, -- MK II Electro Shocker\n        [228458] = { 30 }, -- One-armed Bandit\n        [231075] = { 50 }, -- Gallywix\n    }\n    \n    local amirdrassil = {\n        [208445] = { 35 }, -- Larodar\n        [204931] = { 70 }, -- Fyrakk\n    }\n    \n    local aberrus = {\n        [201261] = { 80, 60, 40 }, -- Kazzara\n        [201773] = { 50 }, -- Moltannia (Eternal Blaze)\n        [201774] = { 50 }, -- Krozgoth (Essence of Shadow)\n        [201668] = { 60, 35 }, -- Neltharion\n        [200912] = { 50 }, -- Neldris, Experiment\n        [200913] = { 50 }, -- Thadrion, Experiment\n        [199659] = { 25 }, -- Warlord Kagni, Assault of the Zaqali\n        [201754] = { 65, 40 }, -- Sarkareth\n        [203230] = { 50 }, -- Dragonfire Golem, Zskarn\n    }\n    \n    local vault = {\n        [181378] = { 66, 33 }, -- Kurog Grimtotem\n        [194990] = { 50 }, -- Stormseeker Acolyte\n        [189492] = { 65 }, -- Raszageth\n    }\n    \n    local sepulcher = {\n        [181548] = { 40 }, -- Absolution: Prototype Pantheon\n        [181551] = { 40 }, -- Duty: Prototype Pantheon\n        [181546] = { 40 }, -- Renewal: Prototype Pantheon\n        [181549] = { 40 }, -- War: Prototype Pantheon\n        [183501] = { 75, 50 }, --Xymox\n        [180906] = { 78, 45 }, --Halondrus\n        [183671] = { 40 }, -- Monstrous Soul - Anduin\n        [185421] = { 15 }, -- The Jailer\n    }\n    \n    local sanctumOfDomination = {\n        [175730] = { 70, 40 }, -- Fatescribe Roh-Kalo\n        [176523] = { 70, 40 }, -- Painsmith\n        [175725] = { 66, 33 }, -- Eye of the Jailer\n        [176929] = { 60, 20 }, -- Remnant of Kel'Thuzad\n        [175732] = { 83, 50 }, -- Sylvanas Windrunner\n    }\n    \n    local nathria = {\n        [166969] = { 50 }, -- Council of Blood - Frieda\n        [166970] = { 50 }, -- Council of Blood - Stavros\n        [166971] = { 50 }, -- Council of Blood - Niklaus\n        [167406] = { 70.5, 37.5 }, -- Sire Denathrius\n        [173162] = { 66, 33 }, -- Lord Evershade\n    }\n    \n    local openWorld = {\n        [180013] = { 20 }, -- Escaped Wilderling, Shadowlands - Korthia\n        [179931] = { 80, 60 }, -- Relic Breaker krelva, Shadowlands - Korthia\n        [193532] = { 40 }, -- Bazual, The Dreaded Flame, Dragonflight\n        [210478] = { 50 }, -- Infected Beast\n    }\n    \n    local mageTower = {\n        [116410] = { 33 }, -- Karam Magespear\n    }\n    \n    envTable.lifePercent = {}\n    \n    local zones = {\n        manaforgeOmega,\n        liberationOfUndermine,\n        cinderbrewMeadery,\n        araKara,\n        darkflameCleft,\n        prioryOfTheSacredFlame,\n        cityOfThreads,\n        dawnbreaker,\n        rubyLifePools,\n        azureVault,\n        brackenhideHollow,\n        neltharus,\n        hallsOfInfusion,\n        nokhudOffensive,\n        uldaman,\n        theaterOfPain,\n        mistsOfTirnaScithe,\n        plaguefall,\n        hallsOfAtonement,\n        sanguineDepths,\n        spiresOfAscension,\n        necroticWake,\n        deOtherSide,\n        tazaveshGambit,\n        tazaveshStreets,\n        freehold,\n        waycrest,\n        siegeOfBoralus,\n        motherlode,\n        junkyard,\n        workshop,\n        karazhanUpper,\n        karazhanLower,\n        hallsOfValor,\n        courtOfStars,\n        neltharionsLair,\n        blackRookHold,\n        darkheartThicket,\n        grimrailDepot,\n        ironDocks,\n        shadowmoonBurialGrounds,\n        templeOfTheJadeSerpent,\n        throneOfTheTides,\n        grimBatol,\n        amirdrassil,\n        aberrus,\n        vault,\n        sepulcher,\n        sanctumOfDomination,\n        nathria,\n        openWorld,\n        mageTower,\n        dawnOfTheInfinite,\n    }\n    \n    for i = 1, #zones do\n        local zone = zones[i]\n        \n        for id, thresholds in pairs(zone) do\n            envTable.lifePercent[id] = thresholds\n        end\n    end\n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        \n        if not markersTable then\n            return\n        end\n        \n        local unitLifePercent = envTable._HealthPercent / 100\n        \n        for _, percent in ipairs(markersTable) do\n            percent = percent / 100\n            if unitLifePercent > percent then\n                if not unitFrame.healthMarker then\n                    envTable.CreateMarker(unitFrame)\n                end\n                \n                unitFrame.healthMarker:Show()\n                local width = unitFrame.healthBar:GetWidth()\n                unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width * percent, 0)\n                \n                local overlaySize = width * (unitLifePercent - percent)\n                unitFrame.healthOverlay:SetWidth(overlaySize)\n                unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                \n                unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                \n                unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                \n                return\n            end\n        end\n        \n        if unitFrame.healthMarker and unitFrame.healthMarker:IsShown() then\n            unitFrame.healthMarker:Hide()\n            unitFrame.healthOverlay:Hide()\n        end\n    end\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
["OptionsValues"] = {
["indicatorAlpha"] = 0.75,
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["Time"] = 1754538787,
["NpcNames"] = {
"81236",
"77803",
"150276",
"152009",
"175806",
"114790",
"81297",
"79545",
"177269",
"133345",
"164926",
"114265",
"114261",
"114783",
"180013",
"179931",
"193532",
"116410",
"190485",
"193435",
"188252",
"186738",
"186125",
"186122",
"186124",
"184422",
"96574",
"114312",
"164804",
"164267",
"164967",
"169861",
"162061",
"144298",
"181548",
"181551",
"181546",
"181549",
"183501",
"180906",
"185421",
"163121",
"175730",
"176523",
"175725",
"176929",
"166969",
"166970",
"166971",
"167406",
"173162",
"175732",
"183671",
"114260",
"184581",
"184582",
"184580",
"185534",
"190407",
"194816",
"186151",
"186121",
"194990",
"76057",
"56732",
"95676",
"94960",
"104215",
"95674",
"189492",
"190484",
"97087",
"201261",
"113537",
"126983",
"185508",
"186206",
"185528",
"189719",
"129732",
"199659",
"201773",
"201774",
"164218",
"164501",
"164451",
"164463",
"164461",
"165946",
"201754",
"203230",
"199000",
"201792",
"198997",
"207639",
"20763",
"129699",
"198933",
"98542",
"98965",
"99192",
"40586",
"40825",
"208445",
"207638",
"131527",
"201668",
"200912",
"200913",
"126832",
"204931",
"189729",
"164929",
"224249",
"219984",
"211087",
"129208",
"164517",
"40320",
"207940",
"213937",
"231531",
"208747",
"229953",
"230316",
"206710",
"129232",
"210271",
"210265",
"223497",
"228458",
"231075",
"212739",
"165415",
"237763",
"233815",
"176564",
"210478",
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
["Options"] = {
{
["Type"] = 6,
["Key"] = "option8",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "indicatorColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Vertical Line Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Indicator color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Indicator alpha.",
["Min"] = 0.1,
["Key"] = "indicatorAlpha",
["Value"] = 0.79,
["Name"] = "Vertical Line Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "fillColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Fill Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Fill color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Fill alpha.",
["Min"] = 0,
["Key"] = "fillAlpha",
["Value"] = 0.2,
["Name"] = "Fill Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
},
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
["Revision"] = 960,
["semver"] = "",
["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
["version"] = -1,
["Author"] = "Duracell",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["Name"] = "Health Markers - Jundies",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Prio"] = 99,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Enabled"] = true,
["Temp_ConstructorCode"] = "function (_, _, _, envTable, scriptTable)\n    \n    \n    --TWW Dungeons\n    \n    local araKara = {\n    }\n    \n    local cityOfThreads = {\n        [219984] = { 50 }, --Xeph'itik\n    }\n    \n    local dawnbreaker = {\n        [211087] = { 50 }, --Speaker Shadowcrown\n        [213937] = { 60 }, --Rasha'nan\n    }\n    \n    local prioryOfTheSacredFlame = {\n        [207940] = { 50 }, --Prioress Murrpray\n        [206710] = { 25 }, -- Lightspawn\n    }\n    \n    local darkflameCleft = {\n        [208747] = { 55 }, -- The Darkness\n    }\n    \n    local cinderbrewMeadery = {\n        [210271] = { 66, 33 }, -- Brew Master Aldryr\n        [210265] = { 30 }, -- Worker Bee\n        [223497] = { 30 }, -- Worker Bee Summoned\n    }\n    \n    local theRookery = {\n        [212739] = { 40 }, --Radiating Voidstone\n    }\n    \n    \n    \n    --DF Dungeons\n    \n    local dawnOfTheInfinite = {\n        [207638] = { 80 }, -- Blight of Galakrond\n        [207639] = { 80 }, -- Blight of Galakrond\n        [198997] = { 80 }, -- Blight of Galakrond\n        [201792] = { 50 }, -- Ahnzon\n        [199000] = { 20 }, -- Deios\n        [198933] = { 90, 85 }, -- Iridikron\n    }\n    \n    local rubyLifePools = {\n        [190485] = { 50 }, -- Stormvein\n        [190484] = { 50 }, -- Kyrakka\n        [193435] = { 50 }, -- Kyrakka\n        [188252] = { 75, 45 }, -- Melidrussa Chillworn\n        [197697] = { 50 }, -- Flamegullet\n    }\n    \n    local azureVault = {\n        [186738] = { 75, 50, 25 }, -- Umbrelskul\n    }\n    \n    local brackenhideHollow = {\n        [186125] = { 15 }, -- Tricktotem\n        [186122] = { 15 }, -- Rira Hackclaw\n        [186124] = { 15 }, -- Gashtooth\n        [185534] = { 15 }, -- Bonebolt Hunter\n        [186206] = { 15 }, -- Cruel Bonecrusher\n        [185508] = { 15 }, -- Claw Fighter\n        [185528] = { 15 }, -- Trickclaw Mystic\n        [186121] = { 4 }, -- Decatriarch Wratheye\n        [186227] = { 20 }, -- Monstrous Decay\n    }\n    \n    local neltharus = {\n        [194816] = { 10 }, -- Forgewrought Monstrosity\n    }\n    \n    local hallsOfInfusion = {\n        [189719] = { 15 }, -- Watcher Irideus\n        [190407] = { 20 }, -- Aqua Rager\n        [189729] = { 60 }, -- Primal Tsunami\n    }\n    \n    local nokhudOffensive = {\n        [186151] = { 60 }, --Balakar Khan\n    }\n    \n    local uldaman = {\n        [184020] = { 40 }, -- Hulking Berserker\n        [184580] = { 10 }, -- Olaf\n        [184581] = { 10 }, -- Baelog\n        [184582] = { 10 }, -- Eric \"The Swift\"\n        [184125] = { 1 }, -- Chrono-Lord Deios\n    }\n    \n    --SL Dungeons\n    \n    local theaterOfPain = {\n        [164451] = { 40 }, -- Dessia the Decapitator\n        [164463] = { 40 }, -- Paceran the Virulent\n        [164461] = { 40 }, -- Sathel the Accursed\n        [165946] = { 50 }, -- Mordretha\n    }\n    \n    local mistsOfTirnaScithe = {\n        [164501] = { 70, 40, 10 }, -- Mistcaller\n        [164926] = { 50 }, --Drust Boughbreaker\n        [164804] = { 20 }, -- Droman Oulfarran\n        [164517] = { 70, 40 }, --Tred'ova\n        [164929] = { 20 }, --Tirnenn Villager\n    }\n    \n    local plaguefall = {\n        [164267] = { 66, 33 }, -- Magrave Stradama\n        [164967] = { 66, 33 }, -- Doctor ickus\n        [169861] = { 66, 33 }, -- Ickor Bileflesh\n    }\n    \n    local hallsOfAtonement = {\n        [164218] = { 70, 40 }, --Lord Chamberlain\n        [165415] = { 30 }, -- Groundskeeper\n    }\n    \n    local sanguineDepths = {\n        [162099] = { 50 }, -- General Kaal Boss fight\n    }\n    \n    local spiresOfAscension = {\n        [162061] = { 70, 30 }, --Devos\n    }\n    \n    local necroticWake = {\n        [163121] = { 70 }, -- Stitched Vanguard\n    }\n    \n    local deOtherSide = {\n        [164558] = { 80, 60, 40, 20 }, -- Hakkar the Soulflayer\n    }\n    \n    local tazaveshGambit = {\n        [177269] = { 40 }, -- So'leah\n    }\n    \n    local tazaveshStreets = {\n        [175806] = { 70, 40 }, -- So'azmi\n        [176564] = { 66, 33 }, -- Zo'gron\n    }\n    \n    --BFA Dungeons\n    \n    local freehold = {\n        [126983] = { 60, 30 }, -- Harlan Sweete - Freehold\n        [126832] = { 75 }, -- Skycap'n Kragg - Freehold\n        [129699] = { 90, 70, 50, 30 }, -- Ludwig von Tortollan - Freehold\n    }\n    \n    local waycrest = {\n        [131527] = { 30 }, -- Lord Waycrest\n    }\n    \n    local siegeOfBoralus = {\n        [129208] = { 66, 33 }, -- Dread Captain Lockwood\n    }\n    \n    local motherlode = {\n        [133345] = { 20 }, -- Feckless Assistant\n        [129232] = { 50 }, -- Mogul Razdunk\n    }\n    \n    local junkyard = {\n        [150276] = { 50 }, -- Heavy Scrapbot\n        [152009] = { 30 }, -- Malfunctioning Scrapbots\n        [144298] = { 30 }, -- Defense Bot Mk III (Workshop)\n    }\n    \n    local workshop = {\n        [144298] = { 30 }, -- Defense Bot Mk III (casts a shield)\n    }\n    \n    --Legion Dungeons\n    \n    local karazhanUpper = {\n        [114790] = { 66, 33 }, -- Viz'aduum\n    }\n    \n    local karazhanLower = {\n        [114261] = { 50 }, -- Toe Knee\n        [114260] = { 50 }, -- Mrrgria\n        [114265] = { 50 }, -- Gang Ruffian\n        [114783] = { 50 }, -- Reformed Maiden\n        [114312] = { 60 }, -- Moroes\n    }\n    \n    local hallsOfValor = {\n        [96574] = { 30 }, -- Stormforged Sentinel\n        [95674] = { 60.5 }, -- Fenryr P1\n        [94960] = { 10.5 }, -- Hymdall\n        [95676] = { 80, 5 }, -- Odyn\n    }\n    \n    local courtOfStars = {\n        [104215] = { 25 }, -- Patrol Captain Gerdo\n    }\n    \n    local neltharionsLair = {\n        [91005] = { 20 }, -- Naraxas\n    }\n    \n    local blackRookHold = {\n        [98542] = { 50 }, -- Amalgam of Souls\n        [98965] = { 20 }, -- Kur'talos Ravencrest\n    }\n    \n    local darkheartThicket = {\n        [99192] = { 50 }, -- Shade of Xavius\n    }\n    \n    --WoD Dungeons\n    \n    local grimrailDepot = {\n        [81236] = { 50 }, -- Grimrail Technician\n        [79545] = { 60 }, -- Nitrogg Thundertower\n        [77803] = { 20 }, -- Railmaster Rocketspark\n    }\n    \n    local ironDocks = {\n        [81297] = { 50 }, -- Dreadfang -> Fleshrender Nok'gar\n    }\n    \n    local shadowmoonBurialGrounds = {\n        [76057] = { 20.5 }, -- Carrion Worm\n    }\n    \n    --MoP Dungeons\n    \n    local templeOfTheJadeSerpent = {\n        [59544] = { 50 }, --The Nodding Tiger\n        [56732] = { 70, 30 }, -- Liu Flameheart\n    }\n    \n    --Cata Dungeons\n    \n    local throneOfTheTides = {\n        [40586] = { 60, 30 }, -- Lady Naz'jar\n        [40825] = { 25 }, -- Erunak Stonespeaker\n    }\n    \n    local grimBatol = {\n        [224249] = { 50 }, --Twilight Lavabender\n        [40320] = { 50 }, --Valiona\n    }\n    \n    \n    --Raids \n    \n    local manaforgeOmega = {\n        [237763] = { 50 }, -- Nexus King Salhadaar\n        [233815] = { 50 }, -- Loom'ithar\n    }\n    \n    local liberationOfUndermine = {\n        [231531] = { 80 }, -- Territorial Bombshell\n        [229953] = { 40 }, -- Mug'Zee\n        [230316] = { 80 }, -- MK II Electro Shocker\n        [228458] = { 30 }, -- One-armed Bandit\n        [231075] = { 50 }, -- Gallywix\n    }\n    \n    local amirdrassil = {\n        [208445] = { 35 }, -- Larodar\n        [204931] = { 70 }, -- Fyrakk\n    }\n    \n    local aberrus = {\n        [201261] = { 80, 60, 40 }, -- Kazzara\n        [201773] = { 50 }, -- Moltannia (Eternal Blaze)\n        [201774] = { 50 }, -- Krozgoth (Essence of Shadow)\n        [201668] = { 60, 35 }, -- Neltharion\n        [200912] = { 50 }, -- Neldris, Experiment\n        [200913] = { 50 }, -- Thadrion, Experiment\n        [199659] = { 25 }, -- Warlord Kagni, Assault of the Zaqali\n        [201754] = { 65, 40 }, -- Sarkareth\n        [203230] = { 50 }, -- Dragonfire Golem, Zskarn\n    }\n    \n    local vault = {\n        [181378] = { 66, 33 }, -- Kurog Grimtotem\n        [194990] = { 50 }, -- Stormseeker Acolyte\n        [189492] = { 65 }, -- Raszageth\n    }\n    \n    local sepulcher = {\n        [181548] = { 40 }, -- Absolution: Prototype Pantheon\n        [181551] = { 40 }, -- Duty: Prototype Pantheon\n        [181546] = { 40 }, -- Renewal: Prototype Pantheon\n        [181549] = { 40 }, -- War: Prototype Pantheon\n        [183501] = { 75, 50 }, --Xymox\n        [180906] = { 78, 45 }, --Halondrus\n        [183671] = { 40 }, -- Monstrous Soul - Anduin\n        [185421] = { 15 }, -- The Jailer\n    }\n    \n    local sanctumOfDomination = {\n        [175730] = { 70, 40 }, -- Fatescribe Roh-Kalo\n        [176523] = { 70, 40 }, -- Painsmith\n        [175725] = { 66, 33 }, -- Eye of the Jailer\n        [176929] = { 60, 20 }, -- Remnant of Kel'Thuzad\n        [175732] = { 83, 50 }, -- Sylvanas Windrunner\n    }\n    \n    local nathria = {\n        [166969] = { 50 }, -- Council of Blood - Frieda\n        [166970] = { 50 }, -- Council of Blood - Stavros\n        [166971] = { 50 }, -- Council of Blood - Niklaus\n        [167406] = { 70.5, 37.5 }, -- Sire Denathrius\n        [173162] = { 66, 33 }, -- Lord Evershade\n    }\n    \n    local openWorld = {\n        [180013] = { 20 }, -- Escaped Wilderling, Shadowlands - Korthia\n        [179931] = { 80, 60 }, -- Relic Breaker krelva, Shadowlands - Korthia\n        [193532] = { 40 }, -- Bazual, The Dreaded Flame, Dragonflight\n    }\n    \n    local mageTower = {\n        [116410] = { 33 }, -- Karam Magespear\n    }\n    \n    envTable.lifePercent = {}\n    \n    local zones = {\n        manaforgeOmega,\n        liberationOfUndermine,\n        cinderbrewMeadery,\n        araKara,\n        darkflameCleft,\n        prioryOfTheSacredFlame,\n        cityOfThreads,\n        dawnbreaker,\n        rubyLifePools,\n        azureVault,\n        brackenhideHollow,\n        neltharus,\n        hallsOfInfusion,\n        nokhudOffensive,\n        uldaman,\n        theaterOfPain,\n        mistsOfTirnaScithe,\n        plaguefall,\n        hallsOfAtonement,\n        sanguineDepths,\n        spiresOfAscension,\n        necroticWake,\n        deOtherSide,\n        tazaveshGambit,\n        tazaveshStreets,\n        freehold,\n        waycrest,\n        siegeOfBoralus,\n        motherlode,\n        junkyard,\n        workshop,\n        karazhanUpper,\n        karazhanLower,\n        hallsOfValor,\n        courtOfStars,\n        neltharionsLair,\n        blackRookHold,\n        darkheartThicket,\n        grimrailDepot,\n        ironDocks,\n        shadowmoonBurialGrounds,\n        templeOfTheJadeSerpent,\n        throneOfTheTides,\n        grimBatol,\n        amirdrassil,\n        aberrus,\n        vault,\n        sepulcher,\n        sanctumOfDomination,\n        nathria,\n        openWorld,\n        mageTower,\n        dawnOfTheInfinite,\n    }\n    \n    for i = 1, #zones do\n        local zone = zones[i]\n        \n        for id, thresholds in pairs(zone) do\n            envTable.lifePercent[id] = thresholds\n        end\n    end\n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        \n        if not markersTable then\n            return\n        end\n        \n        local unitLifePercent = envTable._HealthPercent / 100\n        \n        for _, percent in ipairs(markersTable) do\n            percent = percent / 100\n            if unitLifePercent > percent then\n                if not unitFrame.healthMarker then\n                    envTable.CreateMarker(unitFrame)\n                end\n                \n                unitFrame.healthMarker:Show()\n                local width = unitFrame.healthBar:GetWidth()\n                unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width * percent, 0)\n                \n                local overlaySize = width * (unitLifePercent - percent)\n                unitFrame.healthOverlay:SetWidth(overlaySize)\n                unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                \n                unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                \n                unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                \n                return\n            end\n        end\n        \n        if unitFrame.healthMarker and unitFrame.healthMarker:IsShown() then\n            unitFrame.healthMarker:Hide()\n            unitFrame.healthOverlay:Hide()\n        end\n    end\nend",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"top\", unitFrame.HealthBar, -22, 15);   \n    envTable.FixateTarget.outline = scriptTable.config.outline\n    envTable.FixateTarget:Hide()\nend\n\n--MISC\n--174773 - Spiteful Shade\n\n--The War Within\n\n--220626 - Parasite\n\n--Ara Kara\n--218961 - Starved Crawler\n\n\n--Dragonflight\n\n--Brackenhide\n--194745 - Rotfang Hyena\n\n--Halls of Infusion\n--190366, 195399 - Curious Swoglet\n\n\n--Shadowlands\n\n--Halls of Atonement\n--165913 - Ghastly Parishioner\n--167898 - Manifestation of Envy\n\n--Necrotic Wake\n--164702 - Carrion Worm\n--167731 - Surgeons before 3rd boss\n\n\n--BFA\n\n--Freehold\n--129529 - Blacktooth Scrapper\n\n--Underrot\n--133835 - Feral Bloodswarmer\n\n--Siege of Boredom\n--128649 - 1st boss\n\n\n--LEGION\n\n--Nelth's Lair\n--101476 - Molten Charskin - Dargrul Encounter\n\n--Blackrook hold\n--102781 - Fel Bat Pup\n\n\n--OLD SHIT\n\n--Throne of the tides\n--212681 - Vicious Snap Dragon\n\n--Temple of the Jade Serpent\n--56792 - Figment of Doubt\n\n\n\n--87329 - test dummy \n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n    envTable.FixateTarget:Hide()\n    \n    \nend\n\n\n\n\n",
["OptionsValues"] = {
["dotsColor"] = {
0,
1,
0.007843137718737125,
1,
},
["outline"] = true,
["nameplateColor"] = {
0.8666667342185974,
0.4352941513061523,
0,
1,
},
["changeNameplateColor"] = true,
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.colorchanged = false\nend\n\n\n\n\n\n\n\n",
["UID"] = "0x669cfe742d32773",
["UpdateCode"] = "function (_, unitId, unitFrame, envTable, scriptTable)\n    --check if can change the nameplate color\n    local targetName = UnitName(unitId .. \"target\")\n    \n    if not targetName then\n        return\n    end\n    \n    local role = UnitGroupRolesAssigned(unitId .. \"target\")\n    \n    -- ignore temporary fixates if the unit is targeting the tank (again)\n    if role == \"TANK\" then\n        Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n        envTable.FixateTarget:Hide()\n        \n        return\n    end\n    \n    if UnitIsUnit(targetName, \"player\") then\n        Plater.SetNameplateColor(unitFrame, scriptTable.config.nameplateColor)\n        \n        if not envTable.colorchanged then\n            Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n            unitFrame.healthBar.MainTargetDotAnimation =\n            Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4)\n            \n            envTable.colorchanged = true\n        end\n    end\n    \n    targetName = Plater.SetTextColorByClass(unitId .. \"target\", targetName)\n    envTable.FixateTarget.text = targetName\n    envTable.FixateTarget:Show()\nend\n\n\n\n\n\n\n\n\n",
["Time"] = 1754250696,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"top\", unitFrame.HealthBar, -22, 15);   \n    envTable.FixateTarget.outline = scriptTable.config.outline\n    envTable.FixateTarget:Hide()\nend\n\n--MISC\n--174773 - Spiteful Shade\n\n--The War Within\n\n--220626 - Parasite\n\n--Ara Kara\n--218961 - Starved Crawler\n\n\n--Dragonflight\n\n--Brackenhide\n--194745 - Rotfang Hyena\n\n--Halls of Infusion\n--190366, 195399 - Curious Swoglet\n\n\n--Shadowlands\n\n--Halls of Atonement\n--165913 - Ghastly Parishioner\n--167898 - Manifestation of Envy\n\n--Necrotic Wake\n--164702 - Carrion Worm\n--167731 - Surgeons before 3rd boss\n\n\n--BFA\n\n--Freehold\n--129529 - Blacktooth Scrapper\n\n--Underrot\n--133835 - Feral Bloodswarmer\n\n--Siege of Boredom\n--128649 - 1st boss\n\n\n--LEGION\n\n--Nelth's Lair\n--101476 - Molten Charskin - Dargrul Encounter\n\n--Blackrook hold\n--102781 - Fel Bat Pup\n\n\n--OLD SHIT\n\n--Throne of the tides\n--212681 - Vicious Snap Dragon\n\n--Temple of the Jade Serpent\n--56792 - Figment of Doubt\n\n\n\n--87329 - test dummy \n\n\n",
["Icon"] = "4630415",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n    envTable.FixateTarget:Hide()\n    \n    \nend\n\n\n\n\n",
["Revision"] = 1191,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option6",
["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
["Name"] = "Option 6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "changeNameplateColor",
["Value"] = true,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "change to true to change the color",
},
{
["Type"] = 1,
["Key"] = "nameplateColor",
["Value"] = {
0.8666667342186,
0.43529415130615,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
0,
1,
0.0078431377187371,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "outline",
["Value"] = true,
["Name"] = "Outline",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Outline Test",
},
},
["NpcNames"] = {
"174773",
"164702",
"165913",
"167898",
"56792",
"129529",
"133835",
"101476",
"190366",
"195399",
"212681",
"102781",
"Shattershell Scarab",
"220626",
"218961",
"165251",
"162689",
"167731",
"128649",
"144160",
"40357",
"231014",
"129802",
"235631",
"133482",
"231028",
"231027",
"228502",
"231788",
"235187",
},
["Desc"] = "Changes nameplate color to Orange and adds glow to npcs that are fixated on you",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.colorchanged = false\nend\n\n\n\n\n\n\n\n",
["ScriptType"] = 3,
["Temp_UpdateCode"] = "function (_, unitId, unitFrame, envTable, scriptTable)\n    --check if can change the nameplate color\n    local targetName = UnitName(unitId .. \"target\")\n    \n    if not targetName then\n        return\n    end\n    \n    local role = UnitGroupRolesAssigned(unitId .. \"target\")\n    \n    -- ignore temporary fixates if the unit is targeting the tank (again)\n    if role == \"TANK\" then\n        Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n        envTable.FixateTarget:Hide()\n        \n        return\n    end\n    \n    if UnitIsUnit(targetName, \"player\") then\n        Plater.SetNameplateColor(unitFrame, scriptTable.config.nameplateColor)\n        \n        if not envTable.colorchanged then\n            Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n            unitFrame.healthBar.MainTargetDotAnimation =\n            Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4)\n            \n            envTable.colorchanged = true\n        end\n    end\n    \n    targetName = Plater.SetTextColorByClass(unitId .. \"target\", targetName)\n    envTable.FixateTarget.text = targetName\n    envTable.FixateTarget:Show()\nend\n\n\n\n\n\n\n\n\n",
["Name"] = "Fixate - Jundies",
["PlaterCore"] = 1,
["SpellIds"] = {
},
["Prio"] = 99,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Enabled"] = true,
},
{
["ConstructorCode"] = "function()\nend",
["OnHideCode"] = "function()\nend",
["OptionsValues"] = {
["casting"] = 1.199999928474426,
},
["Temp_OnShowCode"] = "function()\nend\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (_, _, unitFrame, _, scriptTable)\n    Plater.SetNameplateScale(unitFrame, scriptTable.config.casting)\n    Plater.FlashNameplateBorder(unitFrame)\nend",
["Time"] = 1755150807,
["NpcNames"] = {
"214287",
"220368",
"213751",
"179733",
"175576",
"240952",
},
["url"] = "",
["Icon"] = 132090,
["Options"] = {
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "Nameplate Scale",
["Min"] = 0,
["Key"] = "casting",
["Value"] = 1.2,
["Name"] = "Casting Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
},
["Temp_OnHideCode"] = "function()\nend",
["Revision"] = 396,
["semver"] = "",
["Desc"] = "conditionally scales the nameplate of Incorporeal Beings when not ccd",
["version"] = -1,
["Author"] = "Ququlcoatl-Blackmoore",
["Initialization"] = "function (scriptTable)        \nend",
["OnShowCode"] = "function()\nend\n\n\n\n",
["Name"] = "Must Die - Jundies",
["Temp_UpdateCode"] = "function (_, _, unitFrame, _, scriptTable)\n    Plater.SetNameplateScale(unitFrame, scriptTable.config.casting)\n    Plater.FlashNameplateBorder(unitFrame)\nend",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Prio"] = 99,
["Temp_Initialization"] = "function (scriptTable)        \nend",
["Enabled"] = true,
["Temp_ConstructorCode"] = "function()\nend",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame:Hide()\nend",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame:Hide()\nend",
["Time"] = 1755120706,
["NpcNames"] = {
"167966",
"199220",
"199916",
"225601",
"39450",
"233956",
"233955",
},
["semver"] = "1.0.1",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\nend",
["Icon"] = 644389,
["Desc"] = "Hide nameplates based on the unit's NPC ID.",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\nend\n\n\n",
["Revision"] = 197,
["Options"] = {
},
["version"] = 2,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame:Hide()\nend",
["Author"] = "Briarbreed-Area 52",
["Initialization"] = "function (scriptTable)\nend\n\n-- 167966: Experimental Sludge (De Other Side)\n-- 199220 - Stagbeetle (Valdrakken)\n-- 199916 - Bridge Slimes (Brackenhide Hollow)",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame:Hide()\nend",
["skipWagoUpdate"] = 3,
["Prio"] = 99,
["Name"] = "Hide Nameplate - Jundies",
["PlaterCore"] = 1,
["SpellIds"] = {
},
["Enabled"] = true,
["url"] = "",
["Temp_Initialization"] = "function (scriptTable)\nend\n\n-- 167966: Experimental Sludge (De Other Side)\n-- 199220 - Stagbeetle (Valdrakken)\n-- 199916 - Bridge Slimes (Brackenhide Hollow)",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.ChangeColor = False\n    envTable.CastbarColor = \"mediumvioletred\"\n    envTable.GlowOptions = {\n        glowType = \"pixel\",\n        xOffset = 2,\n        yOffset = 2,\n        key = \"\",\n    }\n    --number of lines\n    envTable.GlowOptions.N = scriptTable.config.glowOptionsN\n    --frequency of lines\n    envTable.GlowOptions.frequency = scriptTable.config.glowOptionsFrequency\n    --length of lines\n    envTable.GlowOptions.length = scriptTable.config.glowOptionsLength\n    --line thickness\n    envTable.GlowOptions.th = scriptTable.config.glowOptionsTh\n    --pixel glow color\n    envTable.GlowOptions.color = scriptTable.config.glowOptionsColor\n    --add glow to castbar\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --restore the cast bar to its original height\n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    --stop glow effect\n    Plater.StopGlow(self, \"pixel\")\nend",
["OptionsValues"] = {
["castBarHeight"] = 0,
["glowOptionsFrequency"] = 0.5,
["glowOptionsLength"] = 6,
["glowOptionsColor"] = {
0.97254908084869,
1,
0,
1,
},
["glowOptionsTh"] = 1.9999998807907,
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --change castbar color\n    if (envTable.ChangeColor) then\n        self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n    end\n    Plater.StartGlow(self, color, envTable.GlowOptions)\n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\nend",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend",
["Time"] = 1755151150,
["Icon"] = 132298,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.ChangeColor = False\n    envTable.CastbarColor = \"mediumvioletred\"\n    envTable.GlowOptions = {\n        glowType = \"pixel\",\n        xOffset = 2,\n        yOffset = 2,\n        key = \"\",\n    }\n    --number of lines\n    envTable.GlowOptions.N = scriptTable.config.glowOptionsN\n    --frequency of lines\n    envTable.GlowOptions.frequency = scriptTable.config.glowOptionsFrequency\n    --length of lines\n    envTable.GlowOptions.length = scriptTable.config.glowOptionsLength\n    --line thickness\n    envTable.GlowOptions.th = scriptTable.config.glowOptionsTh\n    --pixel glow color\n    envTable.GlowOptions.color = scriptTable.config.glowOptionsColor\n    --add glow to castbar\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\nend",
["NpcNames"] = {
},
["semver"] = "1.0.0",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --restore the cast bar to its original height\n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    --stop glow effect\n    Plater.StopGlow(self, \"pixel\")\nend",
["Revision"] = 460,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Sets a glow for casts you should stops on",
["Name"] = "Description",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Add new spells by entering spell ID, then click \"Add\"",
["Name"] = "Instructins",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increase the cast bar height value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 0,
["Name"] = "Cast Bar Height",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Increase number Pixel glow lines",
["Min"] = 1,
["Key"] = "glowOptionsN",
["Value"] = 8,
["Name"] = "Pixel Glow Lines",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 2,
["Desc"] = "Increase pixel glow frequency",
["Min"] = -2,
["Key"] = "glowOptionsFrequency",
["Value"] = 0.5,
["Name"] = "Pixel Glow Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Increase pixel glow length",
["Min"] = 1,
["Key"] = "glowOptionsLength",
["Value"] = 6,
["Name"] = "Pixel Glow Length",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Increase pixel glow thickness",
["Min"] = 0.05,
["Key"] = "glowOptionsTh",
["Value"] = 2,
["Name"] = "Pixel Glow Thickness",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Key"] = "glowOptionsColor",
["Value"] = {
0.97254908084869,
1,
0,
1,
},
["Name"] = "Pixel Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Change the color of the glow",
},
},
["Desc"] = "",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend",
["Author"] = "Takeover-Kel'Thuzad",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --change castbar color\n    if (envTable.ChangeColor) then\n        self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n    end\n    Plater.StartGlow(self, color, envTable.GlowOptions)\n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\nend",
["version"] = 1,
["Prio"] = 99,
["Name"] = "Use Stops - Jundies",
["PlaterCore"] = 1,
["SpellIds"] = {
427342,
461796,
294855,
267354,
1215412,
330532,
355640,
347721,
},
["Enabled"] = true,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["url"] = "",
},
},
["npcs_renamed"] = {
[173044] = "Stitcher",
[176394] = "Worker",
[212764] = "Speaker",
[192333] = "Alpha",
[191222] = "Frost Dragon",
[197985] = "Flame",
[190381] = "Rotburst",
[207796] = "Burning",
[220401] = "Detector",
[176523] = "Painsmith",
[185683] = "Speed Relic",
[98521] = "Etheldrin",
[101839] = "Cat",
[199368] = "Big Crystal",
[98696] = "Illysanna",
[184319] = "Custodian",
[204560] = "Incorporeal",
[135234] = "Doggo",
[185685] = "CDR Relic",
[216340] = "Sentry",
[189813] = "Dathea",
[98538] = "Velandras",
[184130] = "Earthen",
[184908] = "Haste Boi",
[179733] = "Fish Stick",
[230740] = "Shreddinator",
[163891] = "Bad Slime",
[201261] = "Kazzara",
[184910] = "Speed Boi",
[128551] = "Doggo",
[190340] = "Defender",
[184911] = "CDR Boi",
[180990] = "Jailer",
[181546] = "Renewal",
[194897] = "Stormsurge Totem",
[209090] = "T. Swift",
[214012] = "Dark",
[181548] = "Absolution",
[227300] = "Big Spawn",
[164705] = "Haste Slime",
[99192] = "Xavius",
[181549] = "War",
[98965] = "Kur'talos",
[197509] = "Cloud",
[201155] = "Nascent Dragon",
[214287] = "Bad Totem",
[151657] = "Bomb",
[114627] = "Terror",
[184582] = "Eric",
[197298] = "Nascent Dragon",
[214840] = "Engorged",
[151649] = "Mk I",
[164707] = "Purple Slime",
[167731] = "Separator",
[168969] = "Green Slime",
[144298] = "Mk III",
[216658] = "Izo",
[102781] = "Bat",
[165946] = "Mordretha",
[174773] = "Spiteful",
[198998] = "Tyr",
[151659] = "Rocket",
[114632] = "Attendant",
[165010] = "Purple Slime",
[190426] = "Decay Totem",
[181551] = "Duty",
[229537] = "Emissary",
[214350] = "Turned",
[197219] = "Big Lasher",
[185680] = "Haste Relic",
[59555] = "Haunting",
[208445] = "Larodar",
[198047] = "Tempest",
[174843] = "Maitre D",
},
["bossmod_support_bars_text_enabled"] = false,
["saved_cvars_last_change"] = {
["ShowClassColorInNameplate"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:1344",
["nameplateOverlapV"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:1344",
["ShowNamePlateLoseAggroFlash"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:1344",
["SoftTargetIconGameObject"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:1344",
["NamePlateClassificationScale"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:1344",
["nameplateShowFriendlyTotems"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:1344",
["nameplatePersonalHideDelaySeconds"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:1344",
["nameplateShowFriendlyPets"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:1344",
["nameplateOverlapH"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:1344",
["nameplatePersonalShowWithTarget"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:1344",
["nameplateMinAlpha"] = "Interface/AddOns/Plater/Plater.lua:4455",
["nameplateResourceOnTarget"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:1344",
["nameplateLargerScale"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:1344",
["nameplateMaxDistance"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:1344",
["nameplateShowFriendlyMinions"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:1344",
["nameplateSelfScale"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:1344",
["nameplateTargetBehindMaxDistance"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:1344",
["SoftTargetInteract"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:1344",
["nameplateShowEnemies"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:1344",
["NamePlateVerticalScale"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:1344",
["nameplateSelectedAlpha"] = "Interface/AddOns/Plater/Plater.lua:4455",
["nameplateShowSelf"] = "...lizzard_Settings_Shared/Blizzard_SettingControls.lua:423",
["nameplateShowPersonalCooldowns"] = "...lizzard_Settings_Shared/Blizzard_SettingControls.lua:423",
["nameplatePersonalShowAlways"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:1344",
["nameplateMotionSpeed"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:1344",
["nameplateSelfTopInset"] = "Interface/AddOns/Blizzard_SharedXMLBase/CvarUtil.lua:9",
["nameplateGlobalScale"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:1344",
["nameplateShowEnemyMinions"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:1344",
["nameplateShowEnemyPets"] = "Interface/AddOns/Plater/Plater.lua:8737",
["nameplateShowFriendlyNPCs"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:1344",
["nameplateSelectedScale"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:1344",
["nameplateShowOnlyNames"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:1344",
["nameplateShowFriendlyBuffs"] = "Interface/AddOns/Plater/Plater.lua:4455",
["nameplateMinAlphaDistance"] = "Interface/AddOns/Plater/Plater.lua:4455",
["NamePlateHorizontalScale"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:1344",
["nameplateShowFriends"] = "Interface/AddOns/Plater/Plater.lua:8737",
["nameplateMotion"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:1344",
["nameplateShowAll"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:1344",
["nameplateMinScale"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:1344",
["nameplateShowEnemyTotems"] = "Interface/AddOns/Plater/Plater.lua:8737",
["nameplateOtherTopInset"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:1344",
["nameplateOtherAtBase"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:1344",
["nameplateSelfBottomInset"] = "Interface/AddOns/Blizzard_SharedXMLBase/CvarUtil.lua:9",
["SoftTargetNameplateInteract"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:1344",
["nameplateShowFriendlyGuardians"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:1344",
["nameplateOccludedAlphaMult"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:1344",
["nameplateSelfAlpha"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:1344",
["nameplateShowEnemyMinus"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:1344",
["nameplateLargeTopInset"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:1344",
["nameplatePersonalShowInCombat"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:1344",
},
["aura_cache_by_name"] = {
["mort'regar's echoes"] = {
333575,
},
["broodkeeper's blaze"] = {
394452,
394453,
},
["regrowth"] = {
8936,
16561,
20665,
22373,
22695,
27637,
28744,
34361,
39000,
39125,
66067,
69882,
72922,
72932,
84158,
97426,
98099,
102047,
165753,
173791,
176218,
187697,
188905,
224527,
265532,
283745,
292627,
292734,
311571,
326689,
338857,
},
["storm dominance"] = {
374918,
396076,
396077,
396111,
396113,
},
["crippling poison"] = {
3408,
3409,
25809,
30981,
44289,
115196,
132747,
132748,
169622,
169623,
283648,
283649,
},
["flame dominance"] = {
374881,
396056,
396062,
396105,
396106,
},
["blazing soul"] = {
111642,
235365,
389176,
411008,
422067,
423530,
426898,
},
["echoing void"] = {
307232,
307236,
317014,
317020,
317022,
317029,
318280,
318485,
318486,
373281,
373304,
373305,
},
["ice barrier"] = {
11426,
33245,
69787,
198094,
201565,
240074,
262251,
264458,
267504,
284882,
},
["sphere of suppression"] = {
294906,
294907,
294908,
294909,
294910,
294912,
294919,
294920,
294922,
298292,
298418,
298419,
298420,
300012,
300013,
},
["atrophic poison"] = {
83609,
381637,
392388,
},
["concentrated flame"] = {
295368,
295373,
295374,
295375,
295376,
295377,
295378,
295379,
295380,
295384,
299349,
299353,
302564,
},
["sanguine sphere"] = {
163689,
166591,
},
["enslaved"] = {
201089,
204831,
211680,
222424,
268192,
299156,
303622,
323961,
},
["bolster"] = {
209859,
280001,
},
["frost dominance"] = {
374916,
396072,
396074,
396108,
396109,
},
["chaos brand"] = {
1490,
255260,
281242,
},
["whip rage"] = {
29340,
233210,
},
["kevin's wrath"] = {
352520,
352528,
352533,
352534,
},
["sinful revelation"] = {
309623,
324260,
},
["predatory instincts"] = {
389808,
},
["iron wire"] = {
196861,
256148,
},
["earth shield"] = {
379,
974,
32734,
38590,
54479,
54480,
55599,
55600,
56451,
57802,
57803,
58981,
58982,
59471,
59472,
60013,
60014,
66063,
66064,
67530,
67537,
69568,
69569,
69925,
69926,
77905,
79927,
79928,
101649,
101650,
143475,
143479,
145559,
145560,
159981,
159982,
165773,
199355,
199356,
204288,
204290,
226078,
254417,
254425,
268709,
268710,
374066,
374067,
377874,
377875,
383648,
413008,
413010,
},
["power word: shield"] = {
17,
11647,
11835,
11974,
17139,
20697,
22187,
27607,
29408,
32595,
35944,
36052,
41373,
44175,
44291,
46193,
66099,
71548,
71780,
83842,
84039,
102409,
113734,
122808,
123258,
127399,
135313,
136100,
165718,
211558,
226076,
248441,
284471,
318158,
344426,
},
["strength of the pack"] = {
64369,
64381,
171114,
178149,
178150,
189715,
199184,
199186,
200922,
260057,
341222,
341223,
359768,
365338,
},
["numbing poison"] = {
5760,
5761,
158873,
158876,
311373,
342947,
359078,
},
["consecration"] = {
26573,
32773,
33559,
36946,
37553,
38385,
41541,
43429,
57798,
59998,
69930,
79966,
81297,
107100,
111365,
153441,
158416,
162642,
165711,
184047,
188370,
190010,
200667,
200678,
200679,
204242,
205228,
216217,
221645,
221730,
233390,
243597,
251151,
251152,
251549,
251550,
264082,
283579,
283582,
283583,
288807,
288808,
288809,
290496,
290497,
290498,
294346,
294347,
327980,
344172,
382484,
387881,
413267,
},
["lunar empowerment"] = {
211091,
292664,
},
["ancient flame"] = {
144691,
144695,
144699,
295365,
295367,
295369,
295372,
295381,
299348,
299350,
303380,
369990,
375583,
},
["nimble steps"] = {
352366,
354050,
354051,
354052,
},
["breath of eons"] = {
403631,
403755,
403758,
409632,
409990,
},
["tidebringer"] = {
236501,
236502,
},
["prey on the weak"] = {
131511,
255909,
389788,
389806,
},
["pistol shot"] = {
185763,
207820,
214779,
223933,
240073,
255966,
267241,
267452,
268229,
274253,
275000,
285167,
294934,
},
["liquefying ooze"] = {
345466,
},
["enveloping mist"] = {
124682,
209193,
212414,
227345,
231605,
274062,
317602,
344008,
344240,
},
["selfless healer"] = {
85804,
114250,
128863,
216777,
},
["butcher cut"] = {
279416,
279426,
},
["mutilated flesh"] = {
211672,
340431,
381672,
394021,
},
["shadowflame wreathe"] = {
405076,
405764,
405765,
405766,
406753,
406764,
406770,
},
["shadow's grasp"] = {
206760,
263656,
263658,
306965,
},
["scouring touch"] = {
356329,
},
["dream delver"] = {
352786,
353353,
353354,
},
["might of the upper reaches"] = {
333579,
},
["thunder clap"] = {
6343,
57832,
60019,
69304,
85216,
145046,
147683,
183543,
236389,
237917,
262538,
267578,
283929,
316143,
316414,
316490,
382590,
386028,
396719,
},
["nothing personal"] = {
286573,
286579,
286581,
289467,
},
["filthy transfusion"] = {
273834,
273835,
273836,
},
["soulglow spectrometer"] = {
352186,
352938,
352939,
352940,
358379,
},
["arcane intellect"] = {
1459,
13326,
36880,
45525,
129171,
266499,
367803,
},
["mystic touch"] = {
8647,
113746,
331653,
},
["blistering heat"] = {
105444,
105445,
417039,
420950,
420968,
},
["effusive anima accelerator"] = {
352188,
353248,
353349,
360277,
},
["mind flay"] = {
15407,
16568,
17165,
22919,
23953,
26044,
26143,
28310,
29407,
29570,
32417,
35507,
37276,
37330,
37621,
38243,
40842,
42396,
43512,
46562,
52586,
54339,
54805,
57779,
57941,
59367,
59974,
60006,
60472,
65488,
78751,
79541,
79711,
89032,
91134,
103024,
129033,
144293,
149984,
150886,
150893,
154125,
164445,
172670,
183324,
189873,
193473,
193635,
196508,
196509,
201520,
202894,
203037,
203313,
203375,
208697,
216513,
218510,
222075,
234696,
241934,
254123,
260182,
260304,
263117,
264892,
271649,
274019,
274032,
277358,
277521,
278311,
284414,
290402,
292974,
299301,
303566,
306391,
308172,
308884,
308885,
310552,
310555,
312526,
312679,
314187,
314188,
314592,
315949,
316835,
317490,
319027,
321330,
394167,
406231,
},
["in the spotlight"] = {
227931,
312926,
},
["moonkin aura"] = {
209740,
209746,
},
["power word: fortitude"] = {
13864,
21562,
23947,
23948,
36004,
58921,
74973,
94366,
133538,
160637,
165739,
183585,
206629,
211681,
266501,
267528,
284466,
286145,
},
["blaze of glory"] = {
99252,
146038,
146039,
153926,
167629,
167630,
177354,
373972,
373973,
373974,
373975,
373976,
373977,
385528,
},
["insidious chill"] = {
391566,
391568,
},
["freezing ice stone"] = {
402940,
403391,
},
["amplifying poison"] = {
381664,
383414,
394328,
},
["earth dominance"] = {
374917,
396067,
396068,
396085,
396098,
},
["deadly poison"] = {
2818,
2823,
3583,
10022,
13582,
21787,
21788,
32970,
32971,
34616,
34655,
34657,
36872,
38519,
38520,
41191,
41192,
41485,
43580,
43581,
56145,
56149,
59479,
59482,
63755,
63756,
67710,
67711,
72329,
82632,
82633,
96648,
113780,
129410,
130980,
130981,
132745,
132746,
145419,
145420,
145421,
177918,
177919,
177920,
289078,
314113,
373774,
377030,
377036,
394324,
394325,
403952,
},
["defensive countermeasure"] = {
297133,
299428,
300996,
303941,
},
["inspired"] = {
105710,
133461,
133928,
134116,
134454,
134885,
135077,
135414,
135435,
192943,
224693,
235727,
256539,
301972,
343503,
},
["all-consuming spite"] = {
343553,
},
},
["bossmod_aura_glow_casts"] = false,
["blizzard_nameplate_font_override_enabled"] = true,
["aura2_y_offset"] = 1.5,
["aura_timer_text_anchor"] = {
["x"] = 0.5,
},
["buffs_on_aura2"] = true,
["health_selection_overlay"] = "Details! Slash",
["expansion_triggerwipe"] = {
["9"] = true,
["8"] = true,
[10] = true,
["10"] = true,
},
["cast_statusbar_color_nointerrupt"] = {
0.80000007152557,
0.30196079611778,
0.30196079611778,
1,
},
["first_run2"] = true,
["bossmod_support_bars_enabled"] = false,
["color_override_colors"] = {
[3] = {
0.74509803921569,
0.18823529411765,
0.11372549019608,
},
[4] = {
1,
0.79607850313187,
0.20784315466881,
},
},
["npc_cache"] = {
[200126] = {
"Fallen Waterspeaker",
"Temple of the Jade Serpent",
"enUS",
},
[194241] = {
"Vile Rothexer",
"Brackenhide Hollow",
"enUS",
},
[190403] = {
"Glacial Proto-Dragon",
"Halls of Infusion",
"enUS",
},
[244137] = {
"影卫奥法技师",
"档案馆突袭",
"zhCN",
},
[195265] = {
"Stormcaller Arynga",
"The Nokhud Offensive",
"enUS",
},
[183495] = {
"Twisted Worldeater",
"Sepulcher of the First Ones",
},
[244138] = {
"影目眼魔",
"档案馆突袭",
"zhCN",
},
[164562] = {
"堕落的驯犬者",
"赎罪大厅",
"zhCN",
},
[183497] = {
"Foul Controller",
"Sepulcher of the First Ones",
},
[220599] = {
"沾血的网法师",
"艾拉-卡拉，回响之城",
"zhCN",
},
[213179] = {
"阿瓦诺克斯",
"艾拉-卡拉，回响之城",
"zhCN",
},
[244140] = {
"影卫钢魂守卫",
"档案馆突袭",
"zhCN",
},
[164563] = {
"邪恶的加尔贡",
"赎罪大厅",
"zhCN",
},
[210109] = {
"Earth Infused Golem",
"The Stonevault",
"enUS",
},
[212412] = {
"Sootsnout",
"Darkflame Cleft",
"enUS",
},
[196548] = {
"Ancient Branch",
"Algeth'ar Academy",
"enUS",
},
[131812] = {
"Heartsbane Soulcharmer",
"Waycrest Manor",
"enUS",
},
[165076] = {
"Gluttonous Tick",
"Sanguine Depths",
},
[200387] = {
"Shambling Infester",
"Temple of the Jade Serpent",
"enUS",
},
[180429] = {
"盛装的星辰先知",
"塔扎维什，帷纱集市",
"zhCN",
},
[217531] = {
"伊克辛",
"艾拉-卡拉，回响之城",
"zhCN",
},
[167892] = {
"被折磨的灵魂",
"赎罪大厅",
"zhCN",
},
[180431] = {
"专心的祭师",
"塔扎维什，帷纱集市",
"zhCN",
},
[217533] = {
"阿提克",
"艾拉-卡拉，回响之城",
"zhCN",
},
[164567] = {
"Ingra Maloch",
"Mists of Tirna Scithe",
"enUS",
},
[211904] = {
"Tainted Treant",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[234933] = {
"塔尔·巴特",
"奥尔达尼生态圆顶",
"zhCN",
},
[227513] = {
"Tala",
"The Dread Pit",
"enUS",
},
[228537] = {
"夜幕影行者",
"破晨号",
"zhCN",
},
[212673] = {
"Naz'jar Ravager",
"Throne of the Tides",
"enUS",
},
[227514] = {
"Velo",
"The Dread Pit",
"enUS",
},
[199368] = {
"Hardened Crystal",
"The Azure Vault",
"enUS",
},
[214209] = {
"Naz'jar Tempest Witch",
"Throne of the Tides",
"enUS",
},
[234935] = {
"撰魂师",
"奥尔达尼生态圆顶",
"zhCN",
},
[213954] = {
"Rock Smasher",
"The Stonevault",
"enUS",
},
[228539] = {
"夜幕暗法师",
"破晨号",
"zhCN",
},
[200137] = {
"Depraved Mistweaver",
"Temple of the Jade Serpent",
"enUS",
},
[178388] = {
"卖场铁腕战士",
"塔扎维什，帷纱集市",
"zhCN",
},
[152033] = {
"Inconspicuous Plant",
"Operation: Mechagon",
"enUS",
},
[131819] = {
"Coven Diviner",
"Waycrest Manor",
"enUS",
},
[228540] = {
"未知目标",
"破晨号",
"zhCN",
},
[196044] = {
"Unruly Textbook",
"Algeth'ar Academy",
"enUS",
},
[102404] = {
"Stoneclaw Grubmaster",
"Neltharion's Lair",
},
[100485] = {
"Soul-torn Vanguard",
"Black Rook Hold",
"enUS",
},
[176598] = {
"Torment Golem",
"Torghast, Tower of the Damned",
},
[102788] = {
"Felspite Dominator",
"Black Rook Hold",
"enUS",
},
[173016] = {
"Corpse Collector",
"The Necrotic Wake",
"enUS",
},
[245173] = {
"注能的缠结",
"法力熔炉：欧米伽",
"zhCN",
},
[101637] = {
"Valarjar Aspirant",
"Halls of Valor",
"enUS",
},
[131821] = {
"Faceless Maiden",
"Waycrest Manor",
"enUS",
},
[175576] = {
"未知目标",
"塔扎维什，帷纱集市",
"zhCN",
},
[184020] = {
"Hulking Berserker",
"Uldaman: Legacy of Tyr",
"enUS",
},
[100486] = {
"Risen Arcanist",
"Black Rook Hold",
"enUS",
},
[178392] = {
"大门看护者佐·马兹",
"塔扎维什，帷纱集市",
"zhCN",
},
[133870] = {
"Diseased Lasher",
"The Underrot",
},
[224962] = {
"Cursedforge Mender",
"The Stonevault",
"enUS",
},
[98696] = {
"Illysanna Ravencrest",
"Black Rook Hold",
"enUS",
},
[129529] = {
"Blacktooth Scrapper",
"Freehold",
},
[113537] = {
"Emberhusk Dominator",
"Neltharion's Lair",
},
[178394] = {
"财团跟班",
"塔扎维什，帷纱集市",
"zhCN",
},
[244410] = {
"未知目标",
"地匍矿洞",
"zhCN",
},
[244922] = {
"影卫相位剑士",
"法力熔炉：欧米伽",
"zhCN",
},
[247481] = {
"葬轮",
"闸板陋巷",
"zhCN",
},
[178139] = {
"浊盐碎壳者",
"塔扎维什，帷纱集市",
"zhCN",
},
[164578] = {
"Stitchflesh's Creation",
"The Necrotic Wake",
"enUS",
},
[247482] = {
"芬戴尔·断轴",
"丝菌师洞穴",
"zhCN",
},
[150250] = {
"Pistonhead Blaster",
"Operation: Mechagon",
"enUS",
},
[220616] = {
"Corridor Sleeper",
"Darkflame Cleft",
"enUS",
},
[178141] = {
"浊盐缚鳞者",
"塔扎维什，帷纱集市",
"zhCN",
},
[168418] = {
"Forsworn Inquisitor",
"Spires of Ascension",
},
[150251] = {
"Pistonhead Mechanic",
"Operation: Mechagon",
"enUS",
},
[178142] = {
"浊盐鱼术师",
"塔扎维什，帷纱集市",
"zhCN",
},
[225479] = {
"苏雷吉网法师",
"破晨号",
"zhCN",
},
[199124] = {
"Primalist Chillblaster",
"Vault of the Incarnates",
"enUS",
},
[215756] = {
"Ascended Webwarden",
"Khaz Algar",
},
[198869] = {
"Sundered Devastator",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[168420] = {
"Forsworn Champion",
"Spires of Ascension",
},
[150253] = {
"Weaponized Crawler",
"Operation: Mechagon",
"enUS",
},
[82579] = {
"Grom'kar Far Seer",
"Grimrail Depot",
},
[236995] = {
"贪婪的毁灭者",
"奥尔达尼生态圆顶",
"zhCN",
},
[247486] = {
"蜡面",
"丝菌师洞穴",
"zhCN",
},
[190426] = {
"Decay Totem",
"Brackenhide Hollow",
"enUS",
},
[237763] = {
"节点之王萨哈达尔",
"法力熔炉：欧米伽",
"zhCN",
},
[177889] = {
"Mawforged Souljudge",
"Sanctum of Domination",
"enUS",
},
[84499] = {
"Entanglement",
"The Everbloom",
"enUS",
},
[217039] = {
"Nerubian Hauler",
"Ara-Kara, City of Echoes",
"enUS",
},
[244418] = {
"誓约唤荒者",
"地匍矿洞",
"zhCN",
},
[45912] = {
"Wild Vortex",
"The Vortex Pinnacle",
"enUS",
},
[177891] = {
"Mawforged Summoner",
"Sanctum of Domination",
"enUS",
},
[190174] = {
"Hypnosis Bat",
"Operation: Mechagon",
},
[190686] = {
"Frozen Destroyer",
"Vault of the Incarnates",
"enUS",
},
[168425] = {
"Forsworn Annihilator",
"Spires of Ascension",
},
[197595] = {
"Earthwrought Smasher",
"Vault of the Incarnates",
"enUS",
},
[220368] = {
"Failed Batch",
"Cinderbrew Meadery",
"enUS",
},
[222927] = {
"圣焰酿酒师",
"卡兹阿加",
"zhCN",
},
[94224] = {
"Petrifying Totem",
"Neltharion's Lair",
"enUS",
},
[202969] = {
"Empty Recollection",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[216275] = {
"未知目标",
"地匍矿洞",
"zhCN",
},
[229069] = {
"无人机狙击手",
"水闸行动",
"zhCN",
},
[190688] = {
"Blazing Fiend",
"Vault of the Incarnates",
"enUS",
},
[160495] = {
"Maniacal Soulbinder",
"Theater of Pain",
"enUS",
},
[242631] = {
"过载的哨兵",
"奥尔达尼生态圆顶",
"zhCN",
},
[234955] = {
"废土遗民诉契者",
"奥尔达尼生态圆顶",
"zhCN",
},
[237514] = {
"阿瓦兹吉",
"奥尔达尼生态圆顶",
"zhCN",
},
[202971] = {
"Null Glimmer",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[244423] = {
"狂野的沙丘飞禽",
"地匍矿洞",
"zhCN",
},
[218324] = {
"纳克特",
"艾拉-卡拉，回响之城",
"zhCN",
},
[190690] = {
"Thundering Ravager",
"Vault of the Incarnates",
"enUS",
},
[81432] = {
"Grom'kar Technician",
"Iron Docks",
},
[234957] = {
"废土遗民祭师",
"奥尔达尼生态圆顶",
"zhCN",
},
[196576] = {
"Spellbound Scepter",
"Algeth'ar Academy",
"enUS",
},
[127106] = {
"Irontide Officer",
"Freehold",
},
[168942] = {
"Death Speaker",
"De Other Side",
},
[245705] = {
"未知目标",
"法力熔炉：欧米伽",
"zhCN",
},
[203230] = {
"Dragonfire Golem",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[244426] = {
"未知目标",
"地匍矿洞",
"zhCN",
},
[102287] = {
"Emberhusk Dominator",
"Neltharion's Lair",
},
[131586] = {
"Banquet Steward",
"Waycrest Manor",
"enUS",
},
[101008] = {
"Stinging Swarm",
"Black Rook Hold",
"enUS",
},
[234960] = {
"驯服的废墟追猎者",
"奥尔达尼生态圆顶",
"zhCN",
},
[135169] = {
"Spirit Drain Totem",
"The Underrot",
},
[170480] = {
"Atal'ai Deathwalker",
"De Other Side",
},
[191206] = {
"Primalist Mage",
"Vault of the Incarnates",
"enUS",
},
[222167] = {
"Brood Infuser",
"Nerub-ar Palace",
"enUS",
},
[40925] = {
"Tainted Sentry",
"Throne of the Tides",
"enUS",
},
[98706] = {
"Commander Shemdah'sohn",
"Black Rook Hold",
"enUS",
},
[234962] = {
"废土遗民远遁者",
"奥尔达尼生态圆顶",
"zhCN",
},
[231380] = {
"幽暗爬行者",
"水闸行动",
"zhCN",
},
[162038] = {
"Regal Mistdancer",
"Sanguine Depths",
},
[130435] = {
"Addled Thug",
"The MOTHERLODE!!",
"enUS",
},
[45915] = {
"Armored Mistral",
"The Vortex Pinnacle",
"enUS",
},
[81819] = {
"Everbloom Naturalist",
"The Everbloom",
"enUS",
},
[184300] = {
"Ebonstone Golem",
"Uldaman: Legacy of Tyr",
"enUS",
},
[162039] = {
"Wicked Oppressor",
"Sanguine Depths",
},
[170483] = {
"Atal'ai Deathwalker's Spirit",
"De Other Side",
},
[76446] = {
"Shadowmoon Enslaver",
"Shadowmoon Burial Grounds",
},
[184301] = {
"Cavern Seeker",
"Uldaman: Legacy of Tyr",
"enUS",
},
[162040] = {
"Grand Overseer",
"Sanguine Depths",
},
[114316] = {
"Baroness Dorothea Millstipe",
"Return to Karazhan",
},
[81820] = {
"Everbloom Mender",
"The Everbloom",
"enUS",
},
[224219] = {
"Twilight Earthcaller",
"Grim Batol",
"enUS",
},
[224731] = {
"Web Marauder",
"City of Threads",
"enUS",
},
[213217] = {
"Speaker Brokk",
"The Stonevault",
"enUS",
},
[156157] = {
"Coldheart Ascendant",
"Torghast, Tower of the Damned",
},
[222173] = {
"入侵的幽暗爬行者",
"恐惧陷坑",
"zhCN",
},
[114317] = {
"Lady Catriona Von'Indi",
"Return to Karazhan",
},
[224732] = {
"Covert Webmancer",
"City of Threads",
"enUS",
},
[178163] = {
"浊盐滨奔者",
"塔扎维什，帷纱集市",
"zhCN",
},
[127111] = {
"Irontide Oarsman",
"Freehold",
},
[224221] = {
"Twilight Overseer",
"Grim Batol",
"enUS",
},
[98965] = {
"Kur'talos Ravencrest",
"Black Rook Hold",
"enUS",
},
[175861] = {
"Glacial Spike",
"Sanctum of Domination",
},
[178165] = {
"踏滨巨人",
"塔扎维什，帷纱集市",
"zhCN",
},
[86684] = {
"Feral Lasher",
"The Everbloom",
"enUS",
},
[212453] = {
"Ghastly Voidsoul",
"The Stonevault",
"enUS",
},
[39392] = {
"Faceless Corruptor",
"Grim Batol",
"enUS",
},
[170234] = {
"Oppressive Banner",
"Theater of Pain",
"enUS",
},
[170490] = {
"Atal'ai High Priest",
"De Other Side",
},
[164861] = {
"Spriggan Barkbinder",
"De Other Side",
},
[114319] = {
"Lady Keira Berrybuck",
"Return to Karazhan",
},
[162047] = {
"Insatiable Brute",
"Sanguine Depths",
},
[96664] = {
"Valarjar Runecarver",
"Halls of Valor",
"enUS",
},
[242648] = {
"初生的影卫",
"法力熔炉：欧米伽",
"zhCN",
},
[216293] = {
"颤声侍从",
"艾拉-卡拉，回响之城",
"zhCN",
},
[220643] = {
"深水龙虾人",
"飞掠裂口",
"zhCN",
},
[56792] = {
"Figment of Doubt",
"Temple of the Jade Serpent",
},
[239834] = {
"泰纳·杜尔玛",
"圣焰隐修院",
"zhCN",
},
[221667] = {
"Lost Watcher",
"Nerub-ar Palace",
"enUS",
},
[95769] = {
"Mindshattered Screecher",
"Darkheart Thicket",
"enUS",
},
[155908] = {
"Deathspeaker",
"Torghast, Tower of the Damned",
},
[174843] = {
"Stoneborn Maitre D'",
"Castle Nathria",
},
[205804] = {
"Risen Dragon",
"Dawn of the Infinite",
"enUS",
},
[84767] = {
"Twisted Abomination",
"The Everbloom",
"enUS",
},
[239836] = {
"歇尼麦尔中士",
"圣焰隐修院",
"zhCN",
},
[231904] = {
"重拳恶党",
"真菌之愚",
"zhCN",
},
[244442] = {
"佣兵收购专家",
"真菌之愚",
"zhCN",
},
[214761] = {
"夜幕祭师",
"破晨号",
"zhCN",
},
[178171] = {
"雷铸守护者",
"塔扎维什，帷纱集市",
"zhCN",
},
[180474] = {
"Soul Reaver",
"Sanctum of Domination",
"enUS",
},
[183033] = {
"Grim Reflection",
"Sepulcher of the First Ones",
},
[214762] = {
"夜幕司令官",
"破晨号",
"zhCN",
},
[227300] = {
"Bile-Soaked Spawn",
"Nerub-ar Palace",
"enUS",
},
[182778] = {
"Collapsing Quasar",
"Sepulcher of the First Ones",
},
[191222] = {
"Juvenile Frost Proto-Dragon",
"Vault of the Incarnates",
"enUS",
},
[95771] = {
"Dreadsoul Ruiner",
"Darkheart Thicket",
"enUS",
},
[221160] = {
"暗影癫狂之猪",
"丝菌师洞穴",
"zhCN",
},
[206064] = {
"Coalesced Moment",
"Dawn of the Infinite",
"enUS",
},
[187897] = {
"Defier Draghar",
"Ruby Life Pools",
"enUS",
},
[231908] = {
"新潮机器人",
"真菌之愚",
"zhCN",
},
[45919] = {
"Young Storm Dragon",
"The Vortex Pinnacle",
"enUS",
},
[175616] = {
"佐·菲克斯",
"塔扎维什，帷纱集市",
"zhCN",
},
[231909] = {
"低薪蛮兵",
"恐惧陷坑",
"zhCN",
},
[191225] = {
"Tarasek Earthreaver",
"Vault of the Incarnates",
"enUS",
},
[206066] = {
"Timestream Leech",
"Dawn of the Infinite",
"enUS",
},
[127757] = {
"Reanimated Honor Guard",
"Atal'Dazar",
"enUS",
},
[231910] = {
"蒙面自由职业者",
"真菌之愚",
"zhCN",
},
[244448] = {
"入侵的相位爬行者",
"地匍矿洞",
"zhCN",
},
[196856] = {
"Primal Stormsentry",
"Vault of the Incarnates",
"enUS",
},
[220141] = {
"Royal Jelly Purveyor",
"Cinderbrew Meadery",
"enUS",
},
[136470] = {
"Refreshment Vendor",
"The MOTHERLODE!!",
"enUS",
},
[80805] = {
"Makogg Emberblade",
"Iron Docks",
},
[184319] = {
"Refti Custodian",
"Uldaman: Legacy of Tyr",
"enUS",
},
[223724] = {
"Backfill Barrel",
"Draenor",
"enUS",
},
[133912] = {
"Bloodsworn Defiler",
"The Underrot",
},
[164873] = {
"Runestag Elderhorn",
"De Other Side",
},
[82597] = {
"Grom'kar Captain",
"Grimrail Depot",
},
[190206] = {
"Primalist Flamedancer",
"Ruby Life Pools",
"enUS",
},
[164363] = {
"不死石精",
"赎罪大厅",
"zhCN",
},
[191230] = {
"Dragonspawn Flamebender",
"Vault of the Incarnates",
"enUS",
},
[190207] = {
"Primalist Cinderweaver",
"Ruby Life Pools",
"enUS",
},
[180484] = {
"维尔特",
"塔扎维什，帷纱集市",
"zhCN",
},
[59546] = {
"The Talking Fish",
"Temple of the Jade Serpent",
},
[244453] = {
"德鲁德",
"真菌之愚",
"zhCN",
},
[220401] = {
"Pale Priest",
"City of Threads",
"enUS",
},
[80935] = {
"Grom'kar Boomer",
"Grimrail Depot",
},
[192767] = {
"Primal Icebulk",
"Vault of the Incarnates",
"enUS",
},
[191232] = {
"Drakonid Stormbringer",
"Vault of the Incarnates",
"enUS",
},
[163086] = {
"Rancid Gasbag",
"Theater of Pain",
"enUS",
},
[245222] = {
"帕哥斯",
"法力熔炉：欧米伽",
"zhCN",
},
[184580] = {
"Olaf",
"Uldaman: Legacy of Tyr",
"enUS",
},
[132126] = {
"Gilded Priestess",
"Atal'Dazar",
"enUS",
},
[206074] = {
"Pendule",
"Dawn of the Infinite",
"enUS",
},
[80936] = {
"Grom'kar Grenadier",
"Grimrail Depot",
},
[213751] = {
"Dynamite Mine Cart",
"Darkflame Cleft",
"enUS",
},
[214263] = {
"蜡面",
"水能堡",
"zhCN",
},
[114584] = {
"Phantom Crew",
"Return to Karazhan",
},
[184582] = {
"Eric \"The Swift\"",
"Uldaman: Legacy of Tyr",
"enUS",
},
[59547] = {
"Jiang",
"Temple of the Jade Serpent",
},
[168718] = {
"Forsworn Warden",
"Spires of Ascension",
},
[234478] = {
"迪门修斯",
"法力熔炉：欧米伽",
"zhCN",
},
[222964] = {
"Flavor Scientist",
"Cinderbrew Meadery",
"enUS",
},
[176395] = {
"过载的邮件元素",
"塔扎维什，帷纱集市",
"zhCN",
},
[218103] = {
"蛛魔领主",
"地匍矿洞",
"zhCN",
},
[195842] = {
"Ukhel Corruptor",
"The Nokhud Offensive",
"enUS",
},
[98081] = {
"Bellowing Idol",
"Neltharion's Lair",
"enUS",
},
[176396] = {
"损坏的分拣机",
"塔扎维什，帷纱集市",
"zhCN",
},
[150297] = {
"Mechagon Renormalizer",
"Operation: Mechagon",
"enUS",
},
[84520] = {
"Pitwarden Gwarnok",
"Iron Docks",
},
[40357] = {
"Invoked Shadowflame Spirit",
"Grim Batol",
"enUS",
},
[80938] = {
"Grom'kar Hulk",
"Grimrail Depot",
},
[229619] = {
"Blazing Fueldemon",
"Liberation of Undermine",
"enUS",
},
[95779] = {
"Festerhide Grizzly",
"Darkheart Thicket",
"enUS",
},
[235505] = {
"暗索咯笑魔",
"闸板陋巷",
"zhCN",
},
[227573] = {
"Anub'vir",
"Earthcrawl Mines",
"enUS",
},
[214012] = {
"Dark Colossus",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[184331] = {
"Infinite Timereaver",
"Uldaman: Legacy of Tyr",
"enUS",
},
[153882] = {
"Deadsoul Spirit",
"Torghast, Tower of the Damned",
},
[221945] = {
"Forgotten Harbinger",
"Nerub-ar Palace",
"enUS",
},
[196102] = {
"Conjured Lasher",
"The Azure Vault",
"enUS",
},
[163862] = {
"Defender of Many Eyes",
"Plaguefall",
},
[227575] = {
"Armored Shellguard",
"Earthcrawl Mines",
"enUS",
},
[231925] = {
"钻头中士",
"恐惧陷坑",
"zhCN",
},
[40166] = {
"Molten Giant",
"Grim Batol",
"enUS",
},
[224249] = {
"Twilight Lavabender",
"Grim Batol",
"enUS",
},
[189706] = {
"Chaotic Essence",
"Castle Nathria",
},
[151325] = {
"Alarm-o-Bot",
"Operation: Mechagon",
"enUS",
},
[180495] = {
"暴怒的恐角龙",
"塔扎维什，帷纱集市",
"zhCN",
},
[223994] = {
"夜幕影法师",
"破晨号",
"zhCN",
},
[186125] = {
"Tricktotem",
"Brackenhide Hollow",
"enUS",
},
[238068] = {
"Geargrinder Rager",
"Liberation of Undermine",
"enUS",
},
[223995] = {
"夜幕咒刃",
"破晨号",
"zhCN",
},
[184335] = {
"Infinite Agent",
"Uldaman: Legacy of Tyr",
"enUS",
},
[227578] = {
"Nerubian Webcaster",
"Earthcrawl Mines",
"enUS",
},
[201223] = {
"Infinite Twilight Magus",
"Dawn of the Infinite",
"enUS",
},
[193291] = {
"Apex Blazewing",
"Neltharus",
"enUS",
},
[194315] = {
"Stormcaller Solongo",
"The Nokhud Offensive",
"enUS",
},
[165913] = {
"阴森的教民",
"赎罪大厅",
"zhCN",
},
[40167] = {
"Twilight Beguiler",
"Grim Batol",
"enUS",
},
[212739] = {
"Radiating Voidstone",
"The Rookery",
"enUS",
},
[231930] = {
"顺服的掠食者",
"真菌之愚",
"zhCN",
},
[114334] = {
"Damaged Golem",
"Return to Karazhan",
},
[194317] = {
"Stormcaller Boroo",
"The Nokhud Offensive",
"enUS",
},
[227581] = {
"Nerubian Oracle",
"Earthcrawl Mines",
"enUS",
},
[129559] = {
"Cutwater Duelist",
"Freehold",
},
[179733] = {
"活力鱼串",
"塔扎维什，帷纱集市",
"zhCN",
},
[167963] = {
"Headless Client",
"De Other Side",
},
[187154] = {
"Unstable Curator",
"The Azure Vault",
"enUS",
},
[167964] = {
"4.RF-4.RF",
"De Other Side",
},
[236027] = {
"未知目标",
"丝菌师洞穴",
"zhCN",
},
[187155] = {
"Rune Seal Keeper",
"The Azure Vault",
"enUS",
},
[168988] = {
"Overgrowth",
"Mists of Tirna Scithe",
"enUS",
},
[218884] = {
"Shattershell Scarab",
"Nerub-ar Palace",
"enUS",
},
[167965] = {
"Lubricator",
"De Other Side",
},
[216326] = {
"Ascended Neophyte",
"City of Threads",
"enUS",
},
[40936] = {
"Faceless Watcher",
"Throne of the Tides",
"enUS",
},
[165919] = {
"Skeletal Marauder",
"The Necrotic Wake",
"enUS",
},
[115488] = {
"Infused Pyromancer",
"Return to Karazhan",
},
[171805] = {
"Research Scribe",
"Sanguine Depths",
},
[167967] = {
"Sentient Oil",
"De Other Side",
},
[197905] = {
"Spellbound Scepter",
"Algeth'ar Academy",
},
[216584] = {
"蛛魔队长",
"地匍矿洞",
"zhCN",
},
[163618] = {
"Zolramus Necromancer",
"The Necrotic Wake",
"enUS",
},
[192788] = {
"Qalashi Thaumaturge",
"Neltharus",
"enUS",
},
[84400] = {
"Gnarled Ancient",
"The Everbloom",
"enUS",
},
[168992] = {
"Risen Cultist",
"De Other Side",
},
[196115] = {
"Arcane Tender",
"The Azure Vault",
"enUS",
},
[187160] = {
"Crystal Fury",
"The Azure Vault",
"enUS",
},
[206351] = {
"Alliance Conjuror",
"Dawn of the Infinite",
"enUS",
},
[204560] = {
"Incorporeal Being",
"Halls of Infusion",
"enUS",
},
[233474] = {
"Gallagio Goon",
"Liberation of Undermine",
"enUS",
},
[135474] = {
"Thistle Acolyte",
"UNKNOWN",
"enUS",
},
[59552] = {
"The Crybaby Hozen",
"Temple of the Jade Serpent",
},
[189464] = {
"Qalashi Irontorch",
"Neltharus",
"enUS",
},
[196117] = {
"Crystal Thrasher",
"The Azure Vault",
"enUS",
},
[163621] = {
"Goregrind",
"The Necrotic Wake",
"enUS",
},
[192791] = {
"Nokhud Warspear",
"The Nokhud Offensive",
"enUS",
},
[182045] = {
"Necrotic Ritualist",
"Sepulcher of the First Ones",
},
[133685] = {
"Befouled Spirit",
"The Underrot",
},
[189466] = {
"Irontorch Commander",
"Neltharus",
"enUS",
},
[216333] = {
"沾血的助手",
"艾拉-卡拉，回响之城",
"zhCN",
},
[165414] = {
"堕落的歼灭者",
"赎罪大厅",
"zhCN",
},
[133430] = {
"Venture Co. Mastermind",
"The MOTHERLODE!!",
"enUS",
},
[65310] = {
"未知目标",
"塔扎维什，帷纱集市",
"zhCN",
},
[214287] = {
"Earth Burst Totem",
"The Stonevault",
"enUS",
},
[83763] = {
"Grom'kar Technician",
"Iron Docks",
},
[241666] = {
"影卫主宰",
"法力熔炉：欧米伽",
"zhCN",
},
[59553] = {
"The Songbird Queen",
"Temple of the Jade Serpent",
},
[236549] = {
"结晶魔像",
"法力熔炉：欧米伽",
"zhCN",
},
[198424] = {
"Primalist Frostsculptor",
"Vault of the Incarnates",
"enUS",
},
[241923] = {
"未知目标",
"法力熔炉：欧米伽",
"zhCN",
},
[197145] = {
"Colossal Stormfiend",
"Vault of the Incarnates",
"enUS",
},
[45928] = {
"Executor of the Caliph",
"The Vortex Pinnacle",
"enUS",
},
[83892] = {
"Life Warden Gola",
"The Everbloom",
"enUS",
},
[163882] = {
"Decaying Flesh Giant",
"Plaguefall",
},
[192796] = {
"Nokhud Hornsounder",
"The Nokhud Offensive",
"enUS",
},
[197146] = {
"Qalashi Emissary",
"Vault of the Incarnates",
"enUS",
},
[189470] = {
"Lava Flare",
"Neltharus",
"enUS",
},
[216337] = {
"血工",
"艾拉-卡拉，回响之城",
"zhCN",
},
[188703] = {
"Protoform Barrier",
"Castle Nathria",
},
[215826] = {
"血工",
"艾拉-卡拉，回响之城",
"zhCN",
},
[216338] = {
"魁梧的血卫",
"艾拉-卡拉，回响之城",
"zhCN",
},
[83893] = {
"Earthshaper Telu",
"The Everbloom",
"enUS",
},
[224271] = {
"Twilight Warlock",
"Grim Batol",
"enUS",
},
[216339] = {
"Sureki Unnaturaler",
"City of Threads",
"enUS",
},
[210966] = {
"未知目标",
"破晨号",
"zhCN",
},
[186658] = {
"Stonevault Geomancer",
"Uldaman: Legacy of Tyr",
"enUS",
},
[197149] = {
"Qalashi Lavamancer",
"Vault of the Incarnates",
"enUS",
},
[168747] = {
"Venomfang",
"Plaguefall",
},
[216340] = {
"哨兵鹿壳虫",
"艾拉-卡拉，回响之城",
"zhCN",
},
[220946] = {
"Venture Co. Honey Harvester",
"Cinderbrew Meadery",
"enUS",
},
[192800] = {
"Nokhud Lancemaster",
"The Nokhud Offensive",
"enUS",
},
[197406] = {
"Aggravated Skitterfly",
"Algeth'ar Academy",
"enUS",
},
[240905] = {
"奥术收集装置",
"法力熔炉：欧米伽",
"zhCN",
},
[245255] = {
"阿托席恩",
"法力熔炉：欧米伽",
"zhCN",
},
[230927] = {
"暗索伐木机驾驶员",
"水闸行动",
"zhCN",
},
[100527] = {
"Dreadfire Imp",
"Darkheart Thicket",
"enUS",
},
[59555] = {
"Haunting Sha",
"Temple of the Jade Serpent",
"enUS",
},
[163121] = {
"Stitched Vanguard",
"The Necrotic Wake",
"enUS",
},
[45930] = {
"Minister of Air",
"The Vortex Pinnacle",
"enUS",
},
[216856] = {
"未知目标",
"艾拉-卡拉，回响之城",
"zhCN",
},
[223253] = {
"未知目标",
"艾拉-卡拉，回响之城",
"zhCN",
},
[162099] = {
"General Kaal",
"Sanguine Depths",
},
[211228] = {
"Blazing Fiend",
"Darkflame Cleft",
"enUS",
},
[195876] = {
"Desecrated Ohuna",
"The Nokhud Offensive",
"enUS",
},
[212764] = {
"Engine Speaker",
"The Stonevault",
"enUS",
},
[135234] = {
"Diseased Mastiff",
"Waycrest Manor",
"enUS",
},
[238608] = {
"受训的拾荒者",
"闸板陋巷",
"zhCN",
},
[195877] = {
"Risen Mystic",
"The Nokhud Offensive",
"enUS",
},
[175663] = {
"希尔布兰德",
"塔扎维什，帷纱集市",
"zhCN",
},
[212765] = {
"Void Bound Despoiler",
"The Stonevault",
"enUS",
},
[246285] = {
"集市监督者",
"塔扎维什，帷纱集市",
"zhCN",
},
[163126] = {
"Brittlebone Mage",
"The Necrotic Wake",
"enUS",
},
[163894] = {
"Blighted Spinebreaker",
"Plaguefall",
},
[248589] = {
"虚无束缚者",
"法力熔炉：欧米伽",
"zhCN",
},
[199717] = {
"Nokhud Defender",
"The Nokhud Offensive",
"enUS",
},
[180015] = {
"肌肉虬结的水手",
"塔扎维什，帷纱集市",
"zhCN",
},
[223770] = {
"Blazing Fiend",
"Darkflame Cleft",
"enUS",
},
[221979] = {
"Void Bound Howler",
"The Stonevault",
"enUS",
},
[197671] = {
"Volatile Infuser",
"Vault of the Incarnates",
"enUS",
},
[163128] = {
"Zolramus Sorcerer",
"The Necrotic Wake",
"enUS",
},
[239379] = {
"无缚虚灵",
"奥尔达尼生态圆顶",
"zhCN",
},
[100531] = {
"Bloodtainted Fury",
"Darkheart Thicket",
"enUS",
},
[245265] = {
"未知目标",
"法力熔炉：欧米伽",
"zhCN",
},
[223772] = {
"Blazing Fiend",
"Darkflame Cleft",
"enUS",
},
[164921] = {
"Drust Harvester",
"Mists of Tirna Scithe",
"enUS",
},
[196394] = {
"未知目标",
"塔扎维什，帷纱集市",
"zhCN",
},
[100532] = {
"Bloodtainted Burster",
"Darkheart Thicket",
"enUS",
},
[223773] = {
"Blazing Fiend",
"Darkflame Cleft",
"enUS",
},
[166969] = {
"Baroness Frieda",
"Castle Nathria",
},
[208165] = {
"Alliance Knight",
"Dawn of the Infinite",
"enUS",
},
[177716] = {
"未知目标",
"塔扎维什，帷纱集市",
"zhCN",
},
[165946] = {
"Mordretha, the Endless Empress",
"Theater of Pain",
"enUS",
},
[223774] = {
"Blazing Fiend",
"Darkflame Cleft",
"enUS",
},
[83389] = {
"Ironwing Flamespitter",
"Iron Docks",
},
[166970] = {
"Lord Stavros",
"Castle Nathria",
},
[40943] = {
"Gilgoblin Aquamage",
"Throne of the Tides",
"enUS",
},
[223775] = {
"Blazing Fiend",
"Darkflame Cleft",
"enUS",
},
[166971] = {
"Castellan Niklaus",
"Castle Nathria",
},
[152898] = {
"Deadsoul Chorus",
"Torghast, Tower of the Damned",
},
[248084] = {
"誓约掠沙者",
"地匍矿洞",
"zhCN",
},
[223776] = {
"Blazing Fiend",
"Darkflame Cleft",
"enUS",
},
[83390] = {
"Thunderlord Wrangler",
"Iron Docks",
},
[231197] = {
"Bubbles",
"Operation: Floodgate",
"enUS",
},
[223777] = {
"Blazing Fiend",
"Darkflame Cleft",
"enUS",
},
[189234] = {
"Frostbreath Arachnid",
"Vault of the Incarnates",
"enUS",
},
[220195] = {
"Sureki Silkbinder",
"City of Threads",
"enUS",
},
[212775] = {
"Faceless Seer",
"Throne of the Tides",
"enUS",
},
[198702] = {
"Unstable Frost",
"Vault of the Incarnates",
"enUS",
},
[201261] = {
"Kazzara, the Hellforged",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[189235] = {
"Overseer Lahar",
"Neltharus",
"enUS",
},
[220196] = {
"Herald of Ansurek",
"City of Threads",
"enUS",
},
[75459] = {
"Plagued Bat",
"Shadowmoon Burial Grounds",
},
[167998] = {
"Portal Guardian",
"Theater of Pain",
"enUS",
},
[235805] = {
"影卫黑暗法师",
"法力熔炉：欧米伽",
"zhCN",
},
[220197] = {
"Royal Swarmguard",
"City of Threads",
"enUS",
},
[227874] = {
"蛛网散播者",
"地匍矿洞",
"zhCN",
},
[164929] = {
"Tirnenn Villager",
"Mists of Tirna Scithe",
"enUS",
},
[81985] = {
"Everbloom Cultivator",
"The Everbloom",
"enUS",
},
[235807] = {
"影卫助祭",
"法力熔炉：欧米伽",
"zhCN",
},
[131666] = {
"Coven Thornshaper",
"Waycrest Manor",
"enUS",
},
[185656] = {
"Filth Caller",
"Brackenhide Hollow",
"enUS",
},
[175677] = {
"走私来的生物",
"塔扎维什，帷纱集市",
"zhCN",
},
[65317] = {
"Xiang",
"Temple of the Jade Serpent",
},
[152905] = {
"Tower Sentinel",
"Torghast, Tower of the Damned",
},
[104247] = {
"Duskwatch Arcanist",
"Court of Stars",
},
[216363] = {
"强化雄虫",
"艾拉-卡拉，回响之城",
"zhCN",
},
[210478] = {
"被感染的野兽",
"真菌之愚",
"zhCN",
},
[176959] = {
"Mawsworn Soulmage",
"Sanctum of Domination",
"enUS",
},
[216364] = {
"鲜血监督者",
"艾拉-卡拉，回响之城",
"zhCN",
},
[210479] = {
"食肉鞭笞者",
"丝菌师洞穴",
"zhCN",
},
[196406] = {
"未知目标",
"塔扎维什，帷纱集市",
"zhCN",
},
[198709] = {
"Unstable Earth",
"Vault of the Incarnates",
"enUS",
},
[213806] = {
"Splotch",
"Throne of the Tides",
"enUS",
},
[216365] = {
"飞翼运输者",
"艾拉-卡拉，回响之城",
"zhCN",
},
[216621] = {
"Nerubian Webspinner",
"Earthcrawl Mines",
"enUS",
},
[176705] = {
"雯扎·金线",
"塔扎维什，帷纱集市",
"zhCN",
},
[205619] = {
"Sarek Cinderbreath",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[133463] = {
"Venture Co. War Machine",
"The MOTHERLODE!!",
"enUS",
},
[205620] = {
"Malgosa Spellbinder",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[89] = {
"地狱火爪牙",
"法力熔炉：欧米伽",
"zhCN",
},
[168007] = {
"Empowered Mawsworn Soulbinder",
"Torghast, Tower of the Damned",
},
[237861] = {
"弗兰克提鲁斯",
"法力熔炉：欧米伽",
"zhCN",
},
[179010] = {
"Fatespawn Anomaly",
"Sanctum of Domination",
},
[134232] = {
"Hired Assassin",
"The MOTHERLODE!!",
"enUS",
},
[218671] = {
"Venture Co. Pyromaniac",
"Cinderbrew Meadery",
"enUS",
},
[220974] = {
"Bazaar Guard",
"Khaz Algar",
},
[96574] = {
"Stormforged Sentinel",
"Halls of Valor",
"enUS",
},
[205622] = {
"Krono Sandtongue",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[214066] = {
"Cursedforge Stoneshaper",
"The Stonevault",
"enUS",
},
[115765] = {
"Abstract Nullifier",
"Return to Karazhan",
},
[231978] = {
"Sharpshot Sentry",
"Liberation of Undermine",
"enUS",
},
[205623] = {
"Drazos Blackwing",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[104251] = {
"Duskwatch Sentry",
"Court of Stars",
},
[184130] = {
"Earthen Custodian",
"Uldaman: Legacy of Tyr",
"enUS",
},
[41139] = {
"Naz'jar Oracle",
"Throne of the Tides",
"enUS",
},
[179269] = {
"绿洲保安",
"塔扎维什，帷纱集市",
"zhCN",
},
[240935] = {
"初生的影卫",
"法力熔炉：欧米伽",
"zhCN",
},
[187969] = {
"Flashfrost Earthshaper",
"Ruby Life Pools",
"enUS",
},
[184131] = {
"Earthen Guardian",
"Uldaman: Legacy of Tyr",
"enUS",
},
[198716] = {
"Unstable Storm",
"Vault of the Incarnates",
"enUS",
},
[131677] = {
"Heartsbane Runeweaver",
"Waycrest Manor",
"enUS",
},
[165197] = {
"Skeletal Monstrosity",
"The Necrotic Wake",
"enUS",
},
[208440] = {
"Infinite Slayer",
"Dawn of the Infinite",
"enUS",
},
[184132] = {
"Earthen Warder",
"Uldaman: Legacy of Tyr",
"enUS",
},
[195135] = {
"Bracken Warscourge",
"Brackenhide Hollow",
},
[92610] = {
"Understone Drummer",
"Neltharion's Lair",
},
[101438] = {
"Vileshard Chunk",
"Neltharion's Lair",
},
[227632] = {
"Venombite",
"The Dread Pit",
"enUS",
},
[170572] = {
"Atal'ai Hoodoo Hexxer",
"De Other Side",
},
[228144] = {
"暗索士兵",
"水闸行动",
"zhCN",
},
[243241] = {
"无常具象",
"法力熔炉：欧米伽",
"zhCN",
},
[208698] = {
"Infinite Riftmage",
"Dawn of the Infinite",
"enUS",
},
[98368] = {
"Ghostly Protector",
"Black Rook Hold",
"enUS",
},
[75979] = {
"Exhumed Spirit",
"Shadowmoon Burial Grounds",
},
[156244] = {
"Winged Automaton",
"Torghast, Tower of the Damned",
},
[206140] = {
"Coalesced Time",
"Dawn of the Infinite",
"enUS",
},
[151127] = {
"Lord of Torment",
"Torghast, Tower of the Damned",
},
[115640] = {
"Fuming Imp",
"Faronaar",
},
[156245] = {
"Grand Automaton",
"Torghast, Tower of the Damned",
},
[128434] = {
"Feasting Skyscreamer",
"Atal'Dazar",
"enUS",
},
[197697] = {
"Flamegullet",
"Ruby Life Pools",
"enUS",
},
[227635] = {
"Kas'dru",
"The Dread Pit",
"enUS",
},
[199233] = {
"Flamescale Captain",
"Vault of the Incarnates",
"enUS",
},
[197698] = {
"Thunderhead",
"Ruby Life Pools",
"enUS",
},
[171343] = {
"Bladebeak Matriarch",
"De Other Side",
},
[208445] = {
"Larodar, Keeper of the Flame",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[237871] = {
"无缚刺客",
"法力熔炉：欧米伽",
"zhCN",
},
[98370] = {
"Ghostly Councilor",
"Black Rook Hold",
"enUS",
},
[237872] = {
"无缚法师",
"法力熔炉：欧米伽",
"zhCN",
},
[217658] = {
"布朗派克爵士",
"圣焰隐修院",
"zhCN",
},
[176974] = {
"Soul Reaver",
"Sanctum of Domination",
"enUS",
},
[115642] = {
"Umbral Imp",
"Faronaar",
},
[211262] = {
"坚不可摧的伊克斯雷腾",
"破晨号",
"zhCN",
},
[131685] = {
"Runic Disciple",
"Waycrest Manor",
"enUS",
},
[199748] = {
"Timeline Marauder",
"Dawn of the Infinite",
"enUS",
},
[157017] = {
"Lithic Watcher",
"Torghast, Tower of the Damned",
},
[220730] = {
"Royal Venomshell",
"City of Threads",
"enUS",
},
[98243] = {
"Soul-Torn Champion",
"Black Rook Hold",
"enUS",
},
[229686] = {
"风险投资公司勘探员",
"水闸行动",
"zhCN",
},
[199749] = {
"Timestream Anomaly",
"Dawn of the Infinite",
"enUS",
},
[208193] = {
"Paladin of the Silver Hand",
"Dawn of the Infinite",
"enUS",
},
[198214] = {
"Broodguardian Ziruss",
"Vault of the Incarnates",
"enUS",
},
[85194] = {
"Entanglement",
"The Everbloom",
"enUS",
},
[136549] = {
"Ashvane Cannoneer",
"Siege of Boralus",
"enUS",
},
[208450] = {
"Wandering Candle",
"Darkflame Cleft",
"enUS",
},
[231223] = {
"被惊扰的海藻",
"水闸行动",
"zhCN",
},
[211777] = {
"喷火引线看护者",
"水能堡",
"zhCN",
},
[207939] = {
"布朗派克男爵",
"圣焰隐修院",
"zhCN",
},
[115388] = {
"King",
"Return to Karazhan",
},
[164185] = {
"艾谢朗",
"赎罪大厅",
"zhCN",
},
[137830] = {
"Pallid Gorger",
"Waycrest Manor",
"enUS",
},
[130485] = {
"Mechanized Peacekeeper",
"The MOTHERLODE!!",
"enUS",
},
[207940] = {
"隐修院长穆普雷",
"圣焰隐修院",
"zhCN",
},
[186191] = {
"Decay Speaker",
"Brackenhide Hollow",
"enUS",
},
[201288] = {
"Sundered Champion",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[214338] = {
"蜃鱼人矛渔夫",
"真菌之愚",
"zhCN",
},
[192333] = {
"Alpha Eagle",
"Algeth'ar Academy",
"enUS",
},
[151649] = {
"Defense Bot Mk I",
"Operation: Mechagon",
"enUS",
},
[234041] = {
"熔炉哨兵",
"法力熔炉：欧米伽",
"zhCN",
},
[248626] = {
"初生的黑暗法师",
"法力熔炉：欧米伽",
"zhCN",
},
[177237] = {
"诅咒锁链",
"塔扎维什，帷纱集市",
"zhCN",
},
[173655] = {
"Mistveil Matriarch",
"Mists of Tirna Scithe",
"enUS",
},
[131436] = {
"Chosen Blood Matron",
"The Underrot",
},
[221760] = {
"亡灵法师",
"圣焰隐修院",
"zhCN",
},
[207943] = {
"阿拉希新兵",
"圣焰隐修院",
"zhCN",
},
[194894] = {
"Primalist Stormspeaker",
"The Nokhud Offensive",
"enUS",
},
[189265] = {
"Qalashi Bonetender",
"Neltharus",
"enUS",
},
[240952] = {
"挑衅之灵",
"奥尔达尼生态圆顶",
"zhCN",
},
[208456] = {
"Shuffling Horror",
"Darkflame Cleft",
"enUS",
},
[207177] = {
"Infinite Watchkeeper",
"Dawn of the Infinite",
"enUS",
},
[164702] = {
"Carrion Worm",
"The Necrotic Wake",
"enUS",
},
[190034] = {
"Blazebound Destroyer",
"Ruby Life Pools",
"enUS",
},
[178008] = {
"Decrepit Orb",
"Sanctum of Domination",
"enUS",
},
[180567] = {
"狂乱的夜爪豹",
"塔扎维什，帷纱集市",
"zhCN",
},
[234557] = {
"Support Rig",
"Liberation of Undermine",
"enUS",
},
[226625] = {
"洞穴弹涂鱼",
"真菌之愚",
"zhCN",
},
[165471] = {
"Nathrian Duelist",
"Castle Nathria",
},
[114624] = {
"Arcane Warden",
"Return to Karazhan",
},
[194897] = {
"Stormsurge Totem",
"The Nokhud Offensive",
"enUS",
},
[204109] = {
"邃穴尖啸者",
"水能堡",
"zhCN",
},
[208459] = {
"Fiery Treant",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[213577] = {
"喷火冲锋者",
"水能堡",
"zhCN",
},
[52019] = {
"Skyfall Nova",
"The Vortex Pinnacle",
"enUS",
},
[220742] = {
"Guardian Tentacle",
"The Sinkhole",
"enUS",
},
[207949] = {
"热心的圣殿骑士",
"圣焰隐修院",
"zhCN",
},
[177500] = {
"海盗船蛮兵",
"塔扎维什，帷纱集市",
"zhCN",
},
[83025] = {
"Grom'kar Battlemaster",
"Iron Docks",
},
[225605] = {
"夜幕暗法师",
"破晨号",
"zhCN",
},
[164451] = {
"Dessia the Decapitator",
"Theater of Pain",
"enUS",
},
[187224] = {
"Vile Rothexer",
"Brackenhide Hollow",
"enUS",
},
[114626] = {
"Forlorn Spirit",
"Return to Karazhan",
},
[225606] = {
"夜幕影行者",
"破晨号",
"zhCN",
},
[96587] = {
"Felsworn Infester",
"Vault of the Wardens",
},
[203857] = {
"Horde Warlock",
"Dawn of the Infinite",
"enUS",
},
[151659] = {
"Rocket Tonk",
"Operation: Mechagon",
"enUS",
},
[234051] = {
"灵牙吠魂者",
"法力熔炉：欧米伽",
"zhCN",
},
[170850] = {
"Raging Bloodhorn",
"Theater of Pain",
"enUS",
},
[208208] = {
"Alliance Destroyer",
"Dawn of the Infinite",
"enUS",
},
[114627] = {
"Shrieking Terror",
"Return to Karazhan",
},
[115395] = {
"Queen",
"Return to Karazhan",
},
[198998] = {
"Tyr, the Infinite Keeper",
"Dawn of the Infinite",
"enUS",
},
[81236] = {
"Grimrail Technician",
"Grimrail Depot",
},
[228424] = {
"暗索无人机",
"水闸行动",
"zhCN",
},
[195928] = {
"Soulharvester Duuren",
"The Nokhud Offensive",
"enUS",
},
[165479] = {
"Court Enforcer",
"Castle Nathria",
},
[227145] = {
"水能堡鳄鱼",
"水闸行动",
"zhCN",
},
[203861] = {
"Horde Destroyer",
"Dawn of the Infinite",
"enUS",
},
[195929] = {
"Soulharvester Tumen",
"The Nokhud Offensive",
"enUS",
},
[214608] = {
"Screaming Soul",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[231496] = {
"风险管理公司潜水员",
"水闸行动",
"zhCN",
},
[195930] = {
"Soulharvester Mandakh",
"The Nokhud Offensive",
"enUS",
},
[114629] = {
"Spectral Retainer",
"Return to Karazhan",
},
[231497] = {
"爆壳螃蟹",
"水闸行动",
"zhCN",
},
[219983] = {
"Eye of the Queen",
"City of Threads",
"enUS",
},
[186208] = {
"Rotbow Stalker",
"Brackenhide Hollow",
"enUS",
},
[180323] = {
"Fatespawn Monstrosity",
"Sanctum of Domination",
},
[223822] = {
"Queen's Guard Re'zah",
"Nerub-ar Palace",
"enUS",
},
[193373] = {
"Nokhud Thunderfist",
"The Nokhud Offensive",
"enUS",
},
[116549] = {
"Backup Singer",
"Return to Karazhan",
},
[218961] = {
"未知目标",
"艾拉-卡拉，回响之城",
"zhCN",
},
[87252] = {
"Unruly Ogron",
"Iron Docks",
},
[164461] = {
"Sathel the Accursed",
"Theater of Pain",
"enUS",
},
[134012] = {
"Taskmaster Askari",
"The MOTHERLODE!!",
"enUS",
},
[167532] = {
"Heavin the Breaker",
"Theater of Pain",
"enUS",
},
[180070] = {
"Mawsworn Scryer",
"Sanctum of Domination",
},
[129600] = {
"Bilge Rat Brinescale",
"Freehold",
},
[210264] = {
"Bee Wrangler",
"Cinderbrew Meadery",
"enUS",
},
[167533] = {
"Advent Nevermore",
"Theater of Pain",
"enUS",
},
[101326] = {
"Honored Ancestor",
"Halls of Valor",
},
[157810] = {
"Mawsworn Endbringer",
"Torghast, Tower of the Damned",
},
[217429] = {
"大恶魔",
"法力熔炉：欧米伽",
"zhCN",
},
[207450] = {
"真菌戳刺者",
"飞掠裂口",
"zhCN",
},
[237132] = {
"影卫科技巫师",
"法力熔炉：欧米伽",
"zhCN",
},
[114632] = {
"Spectral Attendant",
"Return to Karazhan",
},
[219221] = {
"未知目标",
"艾拉-卡拉，回响之城",
"zhCN",
},
[235853] = {
"界门观察者",
"法力熔炉：欧米伽",
"zhCN",
},
[247624] = {
"钢魂奥能守卫",
"恐惧陷坑",
"zhCN",
},
[211290] = {
"艾蕾娜·安博兰兹",
"圣焰隐修院",
"zhCN",
},
[101839] = {
"Risen Companion",
"Black Rook Hold",
"enUS",
},
[102095] = {
"Risen Lancer",
"Black Rook Hold",
"enUS",
},
[104270] = {
"Guardian Construct",
"Court of Stars",
},
[114633] = {
"Spectral Valet",
"Return to Karazhan",
},
[207197] = {
"被诅咒的雷鸫守卫",
"驭雷栖巢",
"zhCN",
},
[207453] = {
"真菌散腐者",
"真菌之愚",
"zhCN",
},
[129602] = {
"Irontide Enforcer",
"Freehold",
},
[204127] = {
"狗头人领职者",
"水能堡",
"zhCN",
},
[212827] = {
"高阶牧师艾姆雅",
"圣焰隐修院",
"zhCN",
},
[207198] = {
"Cursed Thunderer",
"The Rookery",
"enUS",
},
[197219] = {
"Vile Lasher",
"Algeth'ar Academy",
"enUS",
},
[187240] = {
"Drakonid Breaker",
"The Azure Vault",
"enUS",
},
[154744] = {
"Toxic Monstrosity",
"Operation: Mechagon",
"enUS",
},
[171376] = {
"Head Custodian Javlin",
"Sanguine Depths",
},
[167538] = {
"Dokigg the Brutalizer",
"Theater of Pain",
"enUS",
},
[207199] = {
"Cursed Rooktender",
"The Rookery",
"enUS",
},
[191847] = {
"Nokhud Plainstomper",
"The Nokhud Offensive",
"enUS",
},
[179821] = {
"指挥官佐·法",
"塔扎维什，帷纱集市",
"zhCN",
},
[198500] = {
"Council Earthcaller",
"Vault of the Incarnates",
"enUS",
},
[244302] = {
"束缚的标枪",
"奥尔达尼生态圆顶",
"zhCN",
},
[196198] = {
"Algeth'ar Security",
"Algeth'ar Academy",
},
[198501] = {
"Council Icecaller",
"Vault of the Incarnates",
"enUS",
},
[115019] = {
"Coldmist Widow",
"Return to Karazhan",
},
[228951] = {
"蛛魔追猎者",
"地匍矿洞",
"zhCN",
},
[212831] = {
"铸炉大师达米安",
"圣焰隐修院",
"zhCN",
},
[180335] = {
"财团走私者",
"塔扎维什，帷纱集市",
"zhCN",
},
[213343] = {
"Forge Loader",
"The Stonevault",
"enUS",
},
[150142] = {
"Scrapbone Trashtosser",
"Operation: Mechagon",
"enUS",
},
[228952] = {
"蛛魔潜伏者",
"地匍矿洞",
"zhCN",
},
[198503] = {
"Council Flamecaller",
"Vault of the Incarnates",
"enUS",
},
[180336] = {
"财团智囊",
"塔扎维什，帷纱集市",
"zhCN",
},
[233814] = {
"集能哨兵",
"法力熔炉：欧米伽",
"zhCN",
},
[150143] = {
"Scrapbone Grinder",
"Operation: Mechagon",
"enUS",
},
[203877] = {
"狗头人重击者",
"水能堡",
"zhCN",
},
[101075] = {
"Wormspeaker Devout",
"Neltharion's Lair",
"enUS",
},
[228953] = {
"飞掠入侵者",
"地匍矿洞",
"zhCN",
},
[233815] = {
"卢米萨尔",
"法力熔炉：欧米伽",
"zhCN",
},
[203878] = {
"狗头人秘法师",
"水能堡",
"zhCN",
},
[196202] = {
"Spectral Invoker",
"Algeth'ar Academy",
"enUS",
},
[126919] = {
"Irontide Stormcaller",
"Freehold",
},
[174197] = {
"Battlefield Ritualist",
"Theater of Pain",
"enUS",
},
[233816] = {
"缚魂者娜欣达利",
"法力熔炉：欧米伽",
"zhCN",
},
[226396] = {
"沼面",
"水闸行动",
"zhCN",
},
[196203] = {
"Ethereal Restorer",
"Algeth'ar Academy",
"enUS",
},
[206694] = {
"热诚的神射手",
"圣焰隐修院",
"zhCN",
},
[239702] = {
"看守者加兹克雷斯",
"法力熔炉：欧米伽",
"zhCN",
},
[233817] = {
"熔炉编织者阿拉兹",
"法力熔炉：欧米伽",
"zhCN",
},
[150146] = {
"Scrapbone Shaman",
"Operation: Mechagon",
"enUS",
},
[177269] = {
"索·莉亚",
"塔扎维什，帷纱集市",
"zhCN",
},
[171384] = {
"Research Scribe",
"Sanguine Depths",
},
[120651] = {
"Explosives",
"Operation: Mechagon",
},
[229212] = {
"暗索爆破手",
"水闸行动",
"zhCN",
},
[226398] = {
"老大娘",
"水闸行动",
"zhCN",
},
[115406] = {
"Knight",
"Return to Karazhan",
},
[84957] = {
"Putrid Pyromancer",
"The Everbloom",
"enUS",
},
[166524] = {
"Deathwalker",
"Theater of Pain",
"enUS",
},
[134284] = {
"Fallen Deathspeaker",
"The Underrot",
},
[234843] = {
"相位追猎者",
"法力熔炉：欧米伽",
"zhCN",
},
[241240] = {
"成长中的丝肉虫",
"法力熔炉：欧米伽",
"zhCN",
},
[175992] = {
"Dutiful Attendant",
"Castle Nathria",
},
[168572] = {
"Fungi Stormer",
"Plaguefall",
},
[224609] = {
"Twilight Destroyer",
"Grim Batol",
"enUS",
},
[206698] = {
"狂热的咒术师",
"圣焰隐修院",
"zhCN",
},
[211816] = {
"Bazaar Sentry",
"Khaz Algar",
},
[195696] = {
"Primalist Thunderbeast",
"The Nokhud Offensive",
"enUS",
},
[241242] = {
"影卫收获者",
"法力熔炉：欧米伽",
"zhCN",
},
[186229] = {
"Wilted Oak",
"Brackenhide Hollow",
"enUS",
},
[237660] = {
"维拉瑞安·血愤",
"法力熔炉：欧米伽",
"zhCN",
},
[186741] = {
"Arcane Elemental",
"The Azure Vault",
"enUS",
},
[226402] = {
"布隆特",
"水闸行动",
"zhCN",
},
[183671] = {
"Monstrous Soul",
"Sepulcher of the First Ones",
},
[157572] = {
"Mawsworn Firecaller",
"Torghast, Tower of the Damned",
},
[237661] = {
"阿达拉斯·暮焰",
"法力熔炉：欧米伽",
"zhCN",
},
[233823] = {
"皇家虚空之翼",
"法力熔炉：欧米伽",
"zhCN",
},
[223844] = {
"Covert Webmancer",
"City of Threads",
"enUS",
},
[164737] = {
"Brood Ambusher",
"Plaguefall",
},
[95834] = {
"Valarjar Mystic",
"Halls of Valor",
"enUS",
},
[189813] = {
"Dathea, Ascended",
"Vault of the Incarnates",
"enUS",
},
[210539] = {
"Corridor Creeper",
"Darkflame Cleft",
"enUS",
},
[137103] = {
"Blood Visage",
"The Underrot",
"enUS",
},
[237662] = {
"伊莉萨·悲夜",
"法力熔炉：欧米伽",
"zhCN",
},
[98521] = {
"Lord Etheldrin Ravencrest",
"Black Rook Hold",
"enUS",
},
[246874] = {
"进流守护者",
"法力熔炉：欧米伽",
"zhCN",
},
[163459] = {
"Forsworn Mender",
"Spires of Ascension",
},
[239454] = {
"暗法师扎杜斯",
"法力熔炉：欧米伽",
"zhCN",
},
[40577] = {
"Naz'jar Sentinel",
"Throne of the Tides",
"enUS",
},
[187768] = {
"Dathea Stormlash",
"Vault of the Incarnates",
"enUS",
},
[102232] = {
"Rockbound Trapper",
"Neltharion's Lair",
},
[165763] = {
"Vile Occultist",
"Castle Nathria",
},
[180348] = {
"财团打手",
"塔扎维什，帷纱集市",
"zhCN",
},
[166275] = {
"Mistveil Shaper",
"Mists of Tirna Scithe",
"enUS",
},
[168578] = {
"Fungalmancer",
"Plaguefall",
},
[189816] = {
"Dathea Stormlash",
"Vault of the Incarnates",
"enUS",
},
[179837] = {
"追踪者佐·刻斯",
"塔扎维什，帷纱集市",
"zhCN",
},
[206704] = {
"热切的圣骑士",
"圣焰隐修院",
"zhCN",
},
[166276] = {
"Mistveil Guardian",
"Mists of Tirna Scithe",
"enUS",
},
[170882] = {
"Bone Magus",
"Theater of Pain",
"enUS",
},
[130635] = {
"Stonefury",
"The MOTHERLODE!!",
"enUS",
},
[224616] = {
"活化暗影",
"破晨号",
"zhCN",
},
[188026] = {
"Frost Tomb",
"Vault of the Incarnates",
"enUS",
},
[206705] = {
"阿拉希步兵",
"圣焰隐修院",
"zhCN",
},
[215405] = {
"阿努布泽克特",
"艾拉-卡拉，回响之城",
"zhCN",
},
[76518] = {
"Ritual of Bones",
"Shadowmoon Burial Grounds",
},
[231014] = {
"载货机器人",
"水闸行动",
"zhCN",
},
[174210] = {
"Blighted Sludge-Spewer",
"Theater of Pain",
"enUS",
},
[208242] = {
"蛛魔暗法师",
"地匍矿洞",
"zhCN",
},
[198263] = {
"Stalwart Broodwarden",
"Vault of the Incarnates",
"enUS",
},
[169861] = {
"Ickor Bileflesh",
"Plaguefall",
},
[215407] = {
"收割者吉卡塔尔",
"艾拉-卡拉，回响之城",
"zhCN",
},
[180864] = {
"High Torturer",
"Sanctum of Domination",
},
[183423] = {
"Reformed Bachelor",
"Return to Karazhan",
},
[208243] = {
"蛛魔斩击者",
"地匍矿洞",
"zhCN",
},
[179841] = {
"老练的火花法师",
"塔扎维什，帷纱集市",
"zhCN",
},
[245601] = {
"执行者加克图尔",
"法力熔炉：欧米伽",
"zhCN",
},
[190588] = {
"Tectonic Crusher",
"Vault of the Incarnates",
"enUS",
},
[150160] = {
"Scrapbone Bully",
"Operation: Mechagon",
"enUS",
},
[173189] = {
"Nathrian Hawkeye",
"Castle Nathria",
},
[208244] = {
"蛛魔御纤士",
"地匍矿洞",
"zhCN",
},
[179842] = {
"贸易执行者",
"塔扎维什，帷纱集市",
"zhCN",
},
[204918] = {
"Iridikron's Creation",
"Dawn of the Infinite",
"enUS",
},
[183425] = {
"Wholesome Host",
"Return to Karazhan",
},
[208245] = {
"敏捷的聚生虫",
"地匍矿洞",
"zhCN",
},
[206710] = {
"光耀之子",
"圣焰隐修院",
"zhCN",
},
[245092] = {
"掘地蠕行者",
"奥尔达尼生态圆顶",
"zhCN",
},
[165515] = {
"堕落的黑暗剑士",
"赎罪大厅",
"zhCN",
},
[88163] = {
"Grom'kar Cinderseer",
"Grimrail Depot",
},
[86372] = {
"Melded Berserker",
"The Everbloom",
"enUS",
},
[199547] = {
"Frostforged Zealot",
"Vault of the Incarnates",
},
[211062] = {
"比尔",
"真菌之愚",
"zhCN",
},
[179334] = {
"传送门操控师佐·霍恩",
"塔扎维什，帷纱集市",
"zhCN",
},
[199037] = {
"Primalist Shocktrooper",
"Halls of Infusion",
"enUS",
},
[246374] = {
"影卫士兵",
"法力熔炉：欧米伽",
"zhCN",
},
[199549] = {
"Flamesworn Herald",
"Vault of the Incarnates",
},
[228463] = {
"Coin Reel Assistant",
"Liberation of Undermine",
"enUS",
},
[179847] = {
"Shadowsteel Horror",
"Sanctum of Domination",
},
[176521] = {
"Stygian Abductor",
"Sanctum of Domination",
},
[205435] = {
"Epoch Ripper",
"Dawn of the Infinite",
"enUS",
},
[205691] = {
"Iridikron's Creation",
"Dawn of the Infinite",
"enUS",
},
[180104] = {
"Tangling Bloom",
"The Shadowlands",
},
[31216] = {
"Xiaoxinlol",
"法力熔炉：欧米伽",
"zhCN",
},
[234208] = {
"丑恶聚合体",
"恐惧陷坑",
"zhCN",
},
[180486] = {
"未知目标",
"塔扎维什，帷纱集市",
"zhCN",
},
[180485] = {
"未知目标",
"塔扎维什，帷纱集市",
"zhCN",
},
[190340] = {
"Refti Defender",
"Halls of Infusion",
"enUS",
},
[180470] = {
"维利席安",
"塔扎维什，帷纱集市",
"zhCN",
},
[176523] = {
"Painsmith Raznal",
"Sanctum of Domination",
},
[150168] = {
"Toxic Monstrosity",
"Operation: Mechagon",
"enUS",
},
[180432] = {
"热心的同谋",
"塔扎维什，帷纱集市",
"zhCN",
},
[95842] = {
"Valarjar Thundercaller",
"Halls of Valor",
"enUS",
},
[245098] = {
"虚灵指挥官",
"档案馆突袭",
"zhCN",
},
[214350] = {
"Turned Speaker",
"The Stonevault",
"enUS",
},
[163620] = {
"Rotspew",
"The Necrotic Wake",
"enUS",
},
[193760] = {
"Surging Ruiner",
"Vault of the Incarnates",
"enUS",
},
[102781] = {
"Fel Bat Pup",
"Black Rook Hold",
"enUS",
},
[150169] = {
"Toxic Lurker",
"Operation: Mechagon",
"enUS",
},
[231928] = {
"炸弹机器人",
"真菌之愚",
"zhCN",
},
[165010] = {
"Congealed Slime",
"Plaguefall",
},
[217268] = {
"低泣之影",
"恐惧陷坑",
"zhCN",
},
[207459] = {
"真菌腐法师",
"丝菌师洞穴",
"zhCN",
},
[241517] = {
"迪门修斯",
"法力熔炉：欧米伽",
"zhCN",
},
[135329] = {
"Matron Bryndle",
"Waycrest Manor",
"enUS",
},
[212835] = {
"复活的步兵",
"圣焰隐修院",
"zhCN",
},
[221159] = {
"暗影癫狂之猪",
"丝菌师洞穴",
"zhCN",
},
[207468] = {
"多瘤复生者",
"丝菌师洞穴",
"zhCN",
},
[114266] = {
"Shoreline Tidespeaker",
"Return to Karazhan",
},
[220256] = {
"郁齿诱捕者",
"恐惧陷坑",
"zhCN",
},
[179852] = {
"Soulless Vengeance",
"The Shadowlands",
},
[216336] = {
"贪婪爬蛛",
"艾拉-卡拉，回响之城",
"zhCN",
},
[226484] = {
"幼虫",
"恐惧陷坑",
"zhCN",
},
[131492] = {
"Devout Blood Priest",
"The Underrot",
},
[168594] = {
"Chamber Sentinel",
"Sanguine Depths",
},
[216341] = {
"戳刺飞虫",
"艾拉-卡拉，回响之城",
"zhCN",
},
[214140] = {
"Naz'jar Sentinel",
"Throne of the Tides",
"enUS",
},
[186696] = {
"Quaking Totem",
"Uldaman: Legacy of Tyr",
"enUS",
},
[216583] = {
"啾鸣释惧蛛",
"地匍矿洞",
"zhCN",
},
[228954] = {
"蛛魔掠夺者",
"地匍矿洞",
"zhCN",
},
[198502] = {
"Council Stormcaller",
"Vault of the Incarnates",
"enUS",
},
[220504] = {
"暗影图腾",
"飞掠裂口",
"zhCN",
},
[197509] = {
"Primal Thundercloud",
"Ruby Life Pools",
"enUS",
},
[213885] = {
"未知目标",
"破晨号",
"zhCN",
},
[244415] = {
"誓约沙尘剑士",
"地匍矿洞",
"zhCN",
},
[118489] = {
"Corrupted Risen Soldier",
"Black Rook Hold - Artifact Challenge",
},
[177807] = {
"海关保安",
"塔扎维什，帷纱集市",
"zhCN",
},
[169875] = {
"Shackled Soul",
"Theater of Pain",
"enUS",
},
[200836] = {
"Obsidian Guard",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[180433] = {
"流浪的脉冲星",
"塔扎维什，帷纱集市",
"zhCN",
},
[208438] = {
"Infinite Saboteur",
"Dawn of the Infinite",
"enUS",
},
[185032] = {
"Taskmaster Xy'pro",
"Sepulcher of the First Ones",
},
[219683] = {
"暗影癫狂之猪",
"丝菌师洞穴",
"zhCN",
},
[206696] = {
"阿拉希骑士",
"圣焰隐修院",
"zhCN",
},
[177808] = {
"装甲监工",
"塔扎维什，帷纱集市",
"zhCN",
},
[241832] = {
"庇护的侍从",
"法力熔炉：欧米伽",
"zhCN",
},
[126918] = {
"Irontide Crackshot",
"Freehold",
},
[81212] = {
"Grimrail Overseer",
"Grimrail Depot",
},
[135552] = {
"Deathtouched Slaver",
"Waycrest Manor",
"enUS",
},
[221103] = {
"Hulking Warshell",
"City of Threads",
"enUS",
},
[205363] = {
"Time-Lost Waveshaper",
"Dawn of the Infinite",
"enUS",
},
[164218] = {
"宫务大臣",
"赎罪大厅",
"zhCN",
},
[201155] = {
"Nascent Proto-Dragon",
"Vault of the Incarnates",
},
[162763] = {
"Soulforged Bonereaver",
"Theater of Pain",
"enUS",
},
[234207] = {
"被污染的吞食者",
"真菌之愚",
"zhCN",
},
[215040] = {
"蜃鱼人嚼骨者",
"真菌之愚",
"zhCN",
},
[210812] = {
"Royal Wicklighter",
"Darkflame Cleft",
"enUS",
},
[164707] = {
"Congealed Slime",
"Plaguefall",
},
[168658] = {
"Forsworn Devastator",
"Spires of Ascension",
},
[234870] = {
"入侵的幼虫",
"奥尔达尼生态圆顶",
"zhCN",
},
[239833] = {
"艾蕾娜·安博兰兹",
"圣焰隐修院",
"zhCN",
},
[245617] = {
"熔骨者",
"法力熔炉：欧米伽",
"zhCN",
},
[210818] = {
"Lowly Moleherd",
"Darkflame Cleft",
"enUS",
},
[154014] = {
"Imprisoned Cabalist",
"Torghast, Tower of the Damned",
},
[207796] = {
"Burning Colossus",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[207946] = {
"戴尔克莱上尉",
"圣焰隐修院",
"zhCN",
},
[196671] = {
"Arcane Ravager",
"Algeth'ar Academy",
"enUS",
},
[118491] = {
"Corrupted Risen Mage",
"Black Rook Hold - Artifact Challenge",
},
[165529] = {
"堕落的搜集者",
"赎罪大厅",
"zhCN",
},
[188302] = {
"Reconfiguration Emitter",
"Castle Nathria",
},
[200840] = {
"Flamebound Huntsman",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[82590] = {
"Grimrail Scout",
"Grimrail Depot",
},
[164506] = {
"Ancient Captain",
"Theater of Pain",
"enUS",
},
[212411] = {
"Torchsnarl",
"Darkflame Cleft",
"enUS",
},
[233824] = {
"迪门修斯",
"法力熔炉：欧米伽",
"zhCN",
},
[234872] = {
"废土遗民相位剑士",
"奥尔达尼生态圆顶",
"zhCN",
},
[83894] = {
"Dulhu",
"The Everbloom",
"enUS",
},
[211289] = {
"泰纳·杜尔玛",
"圣焰隐修院",
"zhCN",
},
[206699] = {
"作战山猫",
"圣焰隐修院",
"zhCN",
},
[205337] = {
"Infinite Timebender",
"Dawn of the Infinite",
"enUS",
},
[196045] = {
"Corrupted Manafiend",
"Algeth'ar Academy",
"enUS",
},
[144293] = {
"Waste Processing Unit",
"Operation: Mechagon",
"enUS",
},
[211121] = {
"Rank Overseer",
"Darkflame Cleft",
"enUS",
},
[176394] = {
"P.O.S.T.工人",
"塔扎维什，帷纱集市",
"zhCN",
},
[165483] = {
"Court Hierarch",
"Castle Nathria",
},
[211263] = {
"死亡尖啸者艾肯塔克",
"破晨号",
"zhCN",
},
[122970] = {
"Shadowblade Stalker",
"Atal'Dazar",
"enUS",
},
[166299] = {
"Mistveil Tender",
"Mists of Tirna Scithe",
"enUS",
},
[129367] = {
"Bilge Rat Tempest",
"Siege of Boralus",
"enUS",
},
[213892] = {
"夜幕影法师",
"破晨号",
"zhCN",
},
[83761] = {
"Ogron Laborer",
"Iron Docks",
},
[99366] = {
"Taintheart Summoner",
"Darkheart Thicket",
"enUS",
},
[173720] = {
"Mistveil Gorgegullet",
"Mists of Tirna Scithe",
"enUS",
},
[99358] = {
"Rotheart Dryad",
"Darkheart Thicket",
"enUS",
},
[212786] = {
"Voidrider",
"The Rookery",
"enUS",
},
[144295] = {
"Mechagon Mechanic",
"Operation: Mechagon",
"enUS",
},
[180159] = {
"打架的顾客",
"塔扎维什，帷纱集市",
"zhCN",
},
[213893] = {
"夜幕暗法师",
"破晨号",
"zhCN",
},
[209090] = {
"Tindral Sageswift",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[75506] = {
"Shadowmoon Loyalist",
"Shadowmoon Burial Grounds",
},
[184140] = {
"Xy Acolyte",
"Sepulcher of the First Ones",
},
[156212] = {
"Coldheart Agent",
"Torghast, Tower of the Damned",
},
[122971] = {
"Dazar'ai Juggernaut",
"Atal'Dazar",
"enUS",
},
[166301] = {
"Mistveil Stalker",
"Mists of Tirna Scithe",
"enUS",
},
[164510] = {
"Shambling Arbalest",
"Theater of Pain",
"enUS",
},
[213894] = {
"夜幕咒刃",
"破晨号",
"zhCN",
},
[186420] = {
"Earthen Weaver",
"Uldaman: Legacy of Tyr",
"enUS",
},
[205384] = {
"Infinite Chronoweaver",
"Dawn of the Infinite",
"enUS",
},
[177816] = {
"审讯专员",
"塔扎维什，帷纱集市",
"zhCN",
},
[45935] = {
"Temple Adept",
"The Vortex Pinnacle",
"enUS",
},
[114803] = {
"Spectral Stable Hand",
"Return to Karazhan",
},
[154020] = {
"Prisonbreak Cursewalker",
"Torghast, Tower of the Damned",
},
[194487] = {
"Vile Rothexer",
"Brackenhide Hollow",
"enUS",
},
[209801] = {
"军需官科拉泰特",
"驭雷栖巢",
"zhCN",
},
[213895] = {
"夜幕影行者",
"破晨号",
"zhCN",
},
[242209] = {
"吃撑的幼虫",
"奥尔达尼生态圆顶",
"zhCN",
},
[177817] = {
"支援警官",
"塔扎维什，帷纱集市",
"zhCN",
},
[98280] = {
"Risen Arcanist",
"Black Rook Hold",
"enUS",
},
[155812] = {
"Mawsworn Ritualist",
"Torghast, Tower of the Damned",
},
[41096] = {
"Naz'jar Oracle",
"Throne of the Tides",
"enUS",
},
[129369] = {
"Irontide Raider",
"Siege of Boralus",
"enUS",
},
[144298] = {
"Defense Bot Mk III",
"Operation: Mechagon",
"enUS",
},
[220988] = {
"Skeins Sentry",
"Khaz Algar",
},
[194316] = {
"Stormcaller Zarii",
"The Nokhud Offensive",
"enUS",
},
[194895] = {
"Unstable Squall",
"The Nokhud Offensive",
"enUS",
},
[215755] = {
"Ascended Overseer",
"Khaz Algar",
},
[151657] = {
"Bomb Tonk",
"Operation: Mechagon",
"enUS",
},
[234842] = {
"虚帷蝠鲼",
"法力熔炉：欧米伽",
"zhCN",
},
[167731] = {
"Separation Assistant",
"The Necrotic Wake",
"enUS",
},
[40634] = {
"Naz'jar Tempest Witch",
"Throne of the Tides",
"enUS",
},
[101991] = {
"Nightmare Dweller",
"Darkheart Thicket",
"enUS",
},
[75713] = {
"Shadowmoon Bone-Mender",
"Shadowmoon Burial Grounds",
},
[98810] = {
"Wrathguard Bladelord",
"Black Rook Hold",
"enUS",
},
[229250] = {
"风险投资公司合同工",
"水闸行动",
"zhCN",
},
[122973] = {
"Dazar'ai Confessor",
"Atal'Dazar",
"enUS",
},
[131858] = {
"Thornguard",
"Waycrest Manor",
"enUS",
},
[129370] = {
"Irontide Waveshaper",
"Siege of Boralus",
"enUS",
},
[115020] = {
"Arcanid",
"Return to Karazhan",
},
[240974] = {
"影卫编织大师",
"法力熔炉：欧米伽",
"zhCN",
},
[175517] = {
"Symbiotic Faerie",
"9.0 Bastion Arena - Path of Ascension",
},
[115757] = {
"Wrathguard Flamebringer",
"Return to Karazhan",
},
[229251] = {
"风险投资公司建筑师",
"水闸行动",
"zhCN",
},
[77700] = {
"Shadowmoon Exhumer",
"Shadowmoon Burial Grounds",
},
[168310] = {
"Plagueroc",
"Plaguefall",
},
[185529] = {
"Bracken Warscourge",
"Brackenhide Hollow",
"enUS",
},
[210269] = {
"Hired Muscle",
"Cinderbrew Meadery",
"enUS",
},
[135245] = {
"Bilge Rat Demolisher",
"Siege of Boralus",
"enUS",
},
[220976] = {
"Hollows Guard",
"Khaz Algar",
},
[214840] = {
"充血的爬行者",
"艾拉-卡拉，回响之城",
"zhCN",
},
[229252] = {
"暗索土狼",
"水闸行动",
"zhCN",
},
[129788] = {
"Irontide Bonesaw",
"Freehold",
},
[211341] = {
"暗影具象",
"破晨号",
"zhCN",
},
[187033] = {
"Stinkbreath",
"Brackenhide Hollow",
"enUS",
},
[45922] = {
"Empyrean Assassin",
"The Vortex Pinnacle",
"enUS",
},
[234912] = {
"肆虐的食腐者",
"奥尔达尼生态圆顶",
"zhCN",
},
[183707] = {
"Xy Spellslinger",
"Sepulcher of the First Ones",
},
[203951] = {
"狗头人颅面者",
"水能堡",
"zhCN",
},
[198868] = {
"Primalist Voltweaver",
"Vault of the Incarnates",
"enUS",
},
[175806] = {
"索·阿兹密",
"塔扎维什，帷纱集市",
"zhCN",
},
[231531] = {
"Territorial Bombshell",
"Liberation of Undermine",
"enUS",
},
[188244] = {
"Primal Juggernaut",
"Ruby Life Pools",
"enUS",
},
[234833] = {
"不稳定的法力",
"法力熔炉：欧米伽",
"zhCN",
},
[75652] = {
"Void Spawn",
"Shadowmoon Burial Grounds",
},
[234883] = {
"贪食的饕餮者",
"奥尔达尼生态圆顶",
"zhCN",
},
[173729] = {
"Manifestation of Pride",
"Halls of Atonement",
},
[214441] = {
"Scorched Treant",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[211087] = {
"代言人夏多克朗",
"破晨号",
"zhCN",
},
[244095] = {
"失败的候选者",
"档案馆突袭",
"zhCN",
},
[129372] = {
"Blacktar Bomber",
"Siege of Boralus",
"enUS",
},
[179386] = {
"海盗船军官",
"塔扎维什，帷纱集市",
"zhCN",
},
[168934] = {
"Enraged Spirit",
"De Other Side",
},
[193944] = {
"Qalashi Lavamancer",
"Neltharus",
"enUS",
},
[242649] = {
"初生的助祭",
"法力熔炉：欧米伽",
"zhCN",
},
[190362] = {
"Dazzling Dragonfly",
"Halls of Infusion",
"enUS",
},
[105704] = {
"Arcane Manifestation",
"Court of Stars",
},
[217485] = {
"夜幕哨兵",
"真菌之愚",
"zhCN",
},
[199703] = {
"Magma Mystic",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[219046] = {
"Voracious Worm",
"Nerub-ar Palace",
"enUS",
},
[99192] = {
"Shade of Xavius",
"Darkheart Thicket",
"enUS",
},
[231977] = {
"Darkfuse Technician",
"Liberation of Undermine",
"enUS",
},
[206697] = {
"虔诚的牧师",
"圣焰隐修院",
"zhCN",
},
[169893] = {
"Nefarious Darkspeaker",
"Theater of Pain",
"enUS",
},
[211089] = {
"阿努布伊卡基",
"破晨号",
"zhCN",
},
[180640] = {
"雷鸣破灭者",
"塔扎维什，帷纱集市",
"zhCN",
},
[86526] = {
"Grom'kar Chainmaster",
"Iron Docks",
},
[129552] = {
"Monzumi",
"Atal'Dazar",
"enUS",
},
[187771] = {
"Kadros Icewrath",
"Vault of the Incarnates",
"enUS",
},
[97068] = {
"Storm Drake",
"Halls of Valor",
"enUS",
},
[198870] = {
"Sundered Preserver",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[163520] = {
"Forsworn Squad-Leader",
"Spires of Ascension",
},
[175546] = {
"时空船长钩尾",
"塔扎维什，帷纱集市",
"zhCN",
},
[45704] = {
"Lurking Tempest",
"The Vortex Pinnacle",
"enUS",
},
[114783] = {
"Reformed Maiden",
"Return to Karazhan",
},
[213905] = {
"不稳定的黑暗",
"破晨号",
"zhCN",
},
[45917] = {
"Cloud Prince",
"The Vortex Pinnacle",
"enUS",
},
[165762] = {
"Soul Infuser",
"Castle Nathria",
},
[214673] = {
"Flavor Scientist",
"Cinderbrew Meadery",
"enUS",
},
[197985] = {
"Flame Channeler",
"Ruby Life Pools",
"enUS",
},
[237897] = {
"影卫刺客",
"法力熔炉：欧米伽",
"zhCN",
},
[244099] = {
"徘徊的虚空追踪者",
"档案馆突袭",
"zhCN",
},
[129374] = {
"Scrimshaw Enforcer",
"Siege of Boralus",
"enUS",
},
[84990] = {
"Addled Arcanomancer",
"The Everbloom",
"enUS",
},
[163458] = {
"Forsworn Castigator",
"Spires of Ascension",
},
[206230] = {
"Infinite Diversionist",
"Dawn of the Infinite",
"enUS",
},
[220815] = {
"Blazing Fiend",
"Darkflame Cleft",
"enUS",
},
[76104] = {
"Monstrous Corpse Spider",
"Shadowmoon Burial Grounds",
},
[234443] = {
"Jundies",
"Theater of Pain",
"enUS",
},
[223423] = {
"Careless Hopgoblin",
"Cinderbrew Meadery",
"enUS",
},
[166589] = {
"Animated Weapon",
"Sanguine Depths",
},
[97197] = {
"Valarjar Purifier",
"Halls of Valor",
"enUS",
},
[122969] = {
"Zanchuli Witch-Doctor",
"Atal'Dazar",
"enUS",
},
[26125] = {
"复活的食尸鬼",
"法力熔炉：欧米伽",
"zhCN",
},
[237192] = {
"Giga-Juiced Technician",
"Liberation of Undermine",
"enUS",
},
[167612] = {
"石裔掠夺者",
"赎罪大厅",
"zhCN",
},
[155824] = {
"Lumbering Creation",
"Torghast, Tower of the Damned",
},
[244101] = {
"影卫相位斩裂者",
"档案馆突袭",
"zhCN",
},
[165872] = {
"Flesh Crafter",
"The Necrotic Wake",
"enUS",
},
[98538] = {
"Lady Velandras Ravencrest",
"Black Rook Hold",
"enUS",
},
[99891] = {
"Storm Drake",
"Halls of Valor",
"enUS",
},
[144071] = {
"Irontide Waveshaper",
"Siege of Boralus",
"enUS",
},
[194990] = {
"Stormseeker Acolyte",
"Vault of the Incarnates",
"enUS",
},
[190368] = {
"Flamecaller Aymi",
"Halls of Infusion",
"enUS",
},
[104278] = {
"Felbound Enforcer",
"Court of Stars",
},
[176551] = {
"宝库净化者",
"塔扎维什，帷纱集市",
"zhCN",
},
[184023] = {
"Vicious Basilisk",
"Uldaman: Legacy of Tyr",
"enUS",
},
[179893] = {
"未知目标",
"塔扎维什，帷纱集市",
"zhCN",
},
[212389] = {
"Cursedheart Invader",
"The Stonevault",
"enUS",
},
[214421] = {
"Coalescing Void Diffuser",
"The Rookery",
"enUS",
},
[104300] = {
"Shadow Mistress",
"Court of Stars",
},
[151476] = {
"Blastatron X-80",
"Operation: Mechagon",
"enUS",
},
[241800] = {
"法力铸造泰坦",
"法力熔炉：欧米伽",
"zhCN",
},
[130909] = {
"Fetid Maggot",
"The Underrot",
},
[199325] = {
"Nokhud Stormcaller",
"The Nokhud Offensive",
},
[168443] = {
"Zolramus Necromancer",
"The Necrotic Wake",
},
[186226] = {
"Fetid Rotsinger",
"Brackenhide Hollow",
"enUS",
},
[168109] = {
"Empowered Mawsworn Ritualist",
"Torghast, Tower of the Damned",
},
[188067] = {
"Flashfrost Chillweaver",
"Ruby Life Pools",
"enUS",
},
[190370] = {
"Squallbringer Cyraz",
"Halls of Infusion",
"enUS",
},
[241801] = {
"影卫收割者",
"法力熔炉：欧米伽",
"zhCN",
},
[207202] = {
"Void Fragment",
"The Rookery",
"enUS",
},
[130400] = {
"Irontide Crusher",
"Freehold",
},
[197535] = {
"High Channeler Ryvati",
"Ruby Life Pools",
"enUS",
},
[204188] = {
"古墓掠影者干须",
"克莱格瓦之眠",
"zhCN",
},
[198047] = {
"Tempest Channeler",
"Ruby Life Pools",
"enUS",
},
[114542] = {
"Ghostly Philanthropist",
"Return to Karazhan",
},
[188673] = {
"Smoldering Colossus",
"Vault of the Incarnates",
"enUS",
},
[75899] = {
"Possessed Soul",
"Shadowmoon Burial Grounds",
},
[205212] = {
"Infinite Keeper",
"Dawn of the Infinite",
"enUS",
},
[180091] = {
"上古熔火恶犬",
"塔扎维什，帷纱集市",
"zhCN",
},
[230740] = {
"撕碎王3000型",
"水闸行动",
"zhCN",
},
[203812] = {
"Voice From Beyond",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[165137] = {
"Zolramus Gatekeeper",
"The Necrotic Wake",
"enUS",
},
[212826] = {
"守卫队长苏雷曼",
"圣焰隐修院",
"zhCN",
},
[231312] = {
"风险投资公司电工",
"水闸行动",
"zhCN",
},
[241803] = {
"节点亲王凯沃尔",
"法力熔炉：欧米伽",
"zhCN",
},
[176555] = {
"阿喀琉忒",
"塔扎维什，帷纱集市",
"zhCN",
},
[122972] = {
"Dazar'ai Augur",
"Atal'Dazar",
"enUS",
},
[213913] = {
"Kobold Flametender",
"Darkflame Cleft",
"enUS",
},
[220310] = {
"暗影癫狂之猪",
"丝菌师洞穴",
"zhCN",
},
[191739] = {
"Scalebane Lieutenant",
"The Azure Vault",
"enUS",
},
[235151] = {
"卡雷什元素",
"奥尔达尼生态圆顶",
"zhCN",
},
[190373] = {
"Primalist Galesinger",
"Halls of Infusion",
"enUS",
},
[155830] = {
"Mawsworn Disciple",
"Torghast, Tower of the Damned",
},
[176556] = {
"阿尔克鲁克斯",
"塔扎维什，帷纱集市",
"zhCN",
},
[81603] = {
"Champion Druna",
"Iron Docks",
},
[168318] = {
"Forsworn Goliath",
"Spires of Ascension",
},
[164926] = {
"Drust Boughbreaker",
"Mists of Tirna Scithe",
"enUS",
},
[171341] = {
"Bladebeak Hatchling",
"De Other Side",
},
[98275] = {
"Risen Archer",
"Black Rook Hold",
"enUS",
},
[211291] = {
"Sergeant Shaynemail",
"Priory of the Sacred Flame",
"enUS",
},
[155831] = {
"Mawsworn Soulbinder",
"Torghast, Tower of the Damned",
},
[237967] = {
"Discharged Giga Bomb",
"Liberation of Undermine",
"enUS",
},
[236176] = {
"未知目标",
"丝菌师洞穴",
"zhCN",
},
[205727] = {
"Time-Lost Rocketeer",
"Dawn of the Infinite",
"enUS",
},
[171184] = {
"Mythresh, Sky's Talons",
"De Other Side",
},
[234050] = {
"影卫士兵",
"法力熔炉：欧米伽",
"zhCN",
},
[129553] = {
"Dinomancer Kish'o",
"Atal'Dazar",
"enUS",
},
[169905] = {
"Risen Warlord",
"De Other Side",
},
[180473] = {
"Unstoppable Abomination",
"Sanctum of Domination",
"enUS",
},
[192934] = {
"Volatile Infuser",
"Vault of the Incarnates",
"enUS",
},
[173044] = {
"Stitching Assistant",
"The Necrotic Wake",
"enUS",
},
[168882] = {
"Fleeting Manifestation",
"Sanguine Depths",
},
[172981] = {
"Kyrian Stitchwerk",
"The Necrotic Wake",
"enUS",
},
[90998] = {
"Blightshard Shaper",
"Neltharion's Lair",
},
[165556] = {
"Fleeting Manifestation",
"Sanguine Depths",
},
[235154] = {
"低薪蛮兵",
"恐惧陷坑",
"zhCN",
},
[162057] = {
"Chamber Sentinel",
"Sanguine Depths",
},
[154758] = {
"Toxic Monstrosity",
"Operation: Mechagon",
"enUS",
},
[168627] = {
"Plaguebinder",
"Plaguefall",
},
[235158] = {
"低薪蛮兵",
"恐惧陷坑",
"zhCN",
},
[83578] = {
"Ogron Laborer",
"Iron Docks",
},
[136643] = {
"Azerite Extractor",
"The MOTHERLODE!!",
"enUS",
},
[236946] = {
"废土蠕行者",
"法力熔炉：欧米伽",
"zhCN",
},
[190377] = {
"Primalist Icecaller",
"Halls of Infusion",
"enUS",
},
[91000] = {
"Vileshard Hulk",
"Neltharion's Lair",
},
[244111] = {
"影卫虚空精英",
"档案馆突袭",
"zhCN",
},
[216658] = {
"Izo, the Grand Splicer",
"City of Threads",
"enUS",
},
[226200] = {
"Chamber Acolyte",
"Nerub-ar Palace",
"enUS",
},
[196263] = {
"Nokhud Neophyte",
"The Nokhud Offensive",
"enUS",
},
[236947] = {
"掘地蠕行者",
"法力熔炉：欧米伽",
"zhCN",
},
[235156] = {
"低薪蛮兵",
"恐惧陷坑",
"zhCN",
},
[162744] = {
"Nekthara the Mangler",
"Theater of Pain",
"enUS",
},
[135365] = {
"Matron Alma",
"Waycrest Manor",
"enUS",
},
[114796] = {
"Wholesome Hostess",
"Return to Karazhan",
},
[130404] = {
"Vermin Trapper",
"Freehold",
},
[220060] = {
"Taste Tester",
"Cinderbrew Meadery",
"enUS",
},
[197799] = {
"Quarry Infuser",
"Vault of the Incarnates",
"enUS",
},
[220572] = {
"暗影元素",
"飞掠裂口",
"zhCN",
},
[198311] = {
"Flamewrought Eradicator",
"Vault of the Incarnates",
"enUS",
},
[189555] = {
"Astral Attendant",
"The Azure Vault",
"enUS",
},
[122984] = {
"Dazar'ai Colossus",
"Atal'Dazar",
"enUS",
},
[176562] = {
"打架的顾客",
"塔扎维什，帷纱集市",
"zhCN",
},
[180399] = {
"艾薇勒",
"塔扎维什，帷纱集市",
"zhCN",
},
[168886] = {
"Virulax Blightweaver",
"Plaguefall",
},
[150292] = {
"Mechagon Cavalry",
"Operation: Mechagon",
"enUS",
},
[220573] = {
"暗影元素",
"飞掠裂口",
"zhCN",
},
[167607] = {
"石裔切割者",
"赎罪大厅",
"zhCN",
},
[168717] = {
"Forsworn Justicar",
"Spires of Ascension",
},
[233623] = {
"Pyrotechnics",
"Liberation of Undermine",
"enUS",
},
[176563] = {
"佐·格伦",
"塔扎维什，帷纱集市",
"zhCN",
},
[198308] = {
"Frostwrought Dominator",
"Vault of the Incarnates",
"enUS",
},
[215968] = {
"黑血",
"艾拉-卡拉，回响之城",
"zhCN",
},
[130661] = {
"Venture Co. Earthshaper",
"The MOTHERLODE!!",
"enUS",
},
[157571] = {
"Mawsworn Flametender",
"Torghast, Tower of the Damned",
},
[179840] = {
"集市维和者",
"塔扎维什，帷纱集市",
"zhCN",
},
[190381] = {
"Rotburst Totem",
"Brackenhide Hollow",
"enUS",
},
[205152] = {
"Lerai, Timesworn Maiden",
"Dawn of the Infinite",
"enUS",
},
[213338] = {
"Forgebound Mender",
"The Stonevault",
"enUS",
},
[174773] = {
"Spiteful Shade",
"Algeth'ar Academy",
"enUS",
},
[165805] = {
"Shade of Kael'thas",
"Castle Nathria",
},
[226460] = {
"幽暗爬行者幼体",
"恐惧陷坑",
"zhCN",
},
[220575] = {
"暗影元素",
"飞掠裂口",
"zhCN",
},
[164414] = {
"Reanimated Mage",
"The Necrotic Wake",
"enUS",
},
[81984] = {
"Gnarlroot",
"The Everbloom",
"enUS",
},
[200943] = {
"Electrified Colossal Stormfiend",
"Vault of the Incarnates",
},
[176565] = {
"捣乱的顾客",
"塔扎维什，帷纱集市",
"zhCN",
},
[177892] = {
"Mawforged Goliath",
"Sanctum of Domination",
"enUS",
},
[205735] = {
"Sundered Preserver",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[97720] = {
"Blightshard Skitter",
"Neltharion's Lair",
},
[220576] = {
"暗影元素",
"飞掠裂口",
"zhCN",
},
[167610] = {
"石精噬踝者",
"赎罪大厅",
"zhCN",
},
[234893] = {
"阿兹希卡",
"奥尔达尼生态圆顶",
"zhCN",
},
[173190] = {
"Court Hawkeye",
"Castle Nathria",
},
[166396] = {
"Noble Skirmisher",
"Sanguine Depths",
},
[133835] = {
"Feral Bloodswarmer",
"The Underrot",
},
[199595] = {
"Nokhud Defender",
"The Nokhud Offensive",
},
[83026] = {
"Siegemaster Olugar",
"Iron Docks",
},
[220577] = {
"潜伏者奈拉瑟克",
"飞掠裂口",
"zhCN",
},
[167611] = {
"石裔剔骨者",
"赎罪大厅",
"zhCN",
},
[84989] = {
"Infested Icecaller",
"The Everbloom",
"enUS",
},
[186220] = {
"Brackenhide Shaper",
"Brackenhide Hollow",
"enUS",
},
[105715] = {
"Watchful Inquisitor",
"Court of Stars",
},
[219810] = {
"蛛魔祭师",
"飞掠裂口",
"zhCN",
},
[136139] = {
"Mechanized Peacekeeper",
"The MOTHERLODE!!",
"enUS",
},
[115486] = {
"Erudite Slayer",
"Return to Karazhan",
},
[212793] = {
"Void Ascendant",
"The Rookery",
"enUS",
},
[241304] = {
"影卫注魔者",
"法力熔炉：欧米伽",
"zhCN",
},
[231325] = {
"暗索接线者",
"水闸行动",
"zhCN",
},
[241798] = {
"节点亲王泽沃斯",
"法力熔炉：欧米伽",
"zhCN",
},
[167534] = {
"Rek the Hardened",
"Theater of Pain",
"enUS",
},
[92538] = {
"Tarspitter Grub",
"Neltharion's Lair",
"enUS",
},
[138187] = {
"Grotesque Horror",
"The Underrot",
},
[184022] = {
"Stonevault Geomancer",
"Uldaman: Legacy of Tyr",
"enUS",
},
[189531] = {
"Decayed Elder",
"Brackenhide Hollow",
"enUS",
},
[155221] = {
"Faeleaf Tender",
"Torghast, Tower of the Damned",
},
[157634] = {
"Flameforge Enforcer",
"Torghast, Tower of the Damned",
},
[186246] = {
"Fleshripper Vulture",
"Brackenhide Hollow",
"enUS",
},
[231176] = {
"脚手架",
"水闸行动",
"zhCN",
},
[115407] = {
"Rook",
"Return to Karazhan",
},
[173714] = {
"Mistveil Nightblossom",
"Mists of Tirna Scithe",
"enUS",
},
[195927] = {
"Soulharvester Galtmaa",
"The Nokhud Offensive",
"enUS",
},
[214439] = {
"Corrupted Oracle",
"The Rookery",
"enUS",
},
[114544] = {
"Skeletal Usher",
"Return to Karazhan",
},
[135241] = {
"Bilge Rat Pillager",
"Siege of Boralus",
"enUS",
},
[166302] = {
"Corpse Harvester",
"The Necrotic Wake",
"enUS",
},
[231839] = {
"Scrapmaster",
"Liberation of Undermine",
"enUS",
},
[236072] = {
"无缚实体",
"法力熔炉：欧米伽",
"zhCN",
},
[242586] = {
"未知目标",
"法力熔炉：欧米伽",
"zhCN",
},
[205158] = {
"Spurlok, Timesworn Sentinel",
"Dawn of the Infinite",
"enUS",
},
[167536] = {
"Harugia the Bloodthirsty",
"Theater of Pain",
"enUS",
},
[167615] = {
"堕落的黑暗剑士",
"赎罪大厅",
"zhCN",
},
[165824] = {
"Nar'zudah",
"The Necrotic Wake",
"enUS",
},
[229537] = {
"未知目标",
"赎罪大厅",
"zhCN",
},
[237981] = {
"影卫法师",
"法力熔炉：欧米伽",
"zhCN",
},
[236190] = {
"未知目标",
"奥尔达尼生态圆顶",
"zhCN",
},
[242587] = {
"活体物质",
"法力熔炉：欧米伽",
"zhCN",
},
[228514] = {
"Pit Mechanic",
"Liberation of Undermine",
"enUS",
},
[204206] = {
"Horde Farseer",
"Dawn of the Infinite",
"enUS",
},
[214697] = {
"Chef Chewie",
"Cinderbrew Meadery",
"enUS",
},
[198577] = {
"Unstable Flame",
"Vault of the Incarnates",
"enUS",
},
[211261] = {
"扬升者维斯可里亚",
"破晨号",
"zhCN",
},
[168384] = {
"Flesh Construct",
"The Necrotic Wake",
},
[197298] = {
"Nascent Proto-Dragon",
"Vault of the Incarnates",
"enUS",
},
[128969] = {
"Ashvane Commander",
"Siege of Boralus",
"enUS",
},
[185528] = {
"Trickclaw Mystic",
"Brackenhide Hollow",
"enUS",
},
[189878] = {
"Nathrezim Infiltrator",
"Operation: Mechagon",
},
[128551] = {
"Irontide Mastiff",
"Freehold",
"enUS",
},
[175646] = {
"P.O.S.T.总管",
"塔扎维什，帷纱集市",
"zhCN",
},
[44404] = {
"Naz'jar Frost Witch",
"Throne of the Tides",
"enUS",
},
[176573] = {
"Mawsworn Woebringer",
"Torghast, Tower of the Damned",
},
[221863] = {
"Summoned Acolyte",
"Nerub-ar Palace",
"enUS",
},
[242589] = {
"未知目标",
"法力熔炉：欧米伽",
"zhCN",
},
[179388] = {
"时沙号海潮贤者",
"塔扎维什，帷纱集市",
"zhCN",
},
[175550] = {
"Volatile Faerie",
"9.0 Bastion Arena - Path of Ascension",
},
[163524] = {
"Kyrian Dark-Praetor",
"Spires of Ascension",
},
[133432] = {
"Venture Co. Alchemist",
"The MOTHERLODE!!",
"enUS",
},
[165222] = {
"Zolramus Bonemender",
"The Necrotic Wake",
"enUS",
},
[190342] = {
"Containment Apparatus",
"Halls of Infusion",
"enUS",
},
[129527] = {
"Bilge Rat Buccaneer",
"Freehold",
},
[213932] = {
"苏雷吉好战者",
"破晨号",
"zhCN",
},
[131587] = {
"Bewitched Captain",
"Waycrest Manor",
"enUS",
},
[234623] = {
"巧手窃贼",
"真菌之愚",
"zhCN",
},
[91006] = {
"Rockback Gnasher",
"Neltharion's Lair",
},
[171799] = {
"Depths Warden",
"Sanguine Depths",
},
[184107] = {
"Runic Protector",
"Uldaman: Legacy of Tyr",
"enUS",
},
[176575] = {
"Mawsworn Soulwarden",
"Torghast, Tower of the Damned",
},
[170690] = {
"Diseased Horror",
"Theater of Pain",
"enUS",
},
[144294] = {
"Mechagon Tinkerer",
"Operation: Mechagon",
"enUS",
},
[220978] = {
"Skeins Guard",
"Khaz Algar",
},
[80816] = {
"Ahri'ok Dugru",
"Iron Docks",
},
[99359] = {
"Rotheart Keeper",
"Darkheart Thicket",
"enUS",
},
[167876] = {
"审判官西加尔",
"赎罪大厅",
"zhCN",
},
[211119] = {
"卡兹里克",
"真菌之愚",
"zhCN",
},
[217516] = {
"夜幕行刑者",
"真菌之愚",
"zhCN",
},
[230748] = {
"暗索扭血者",
"水闸行动",
"zhCN",
},
[213934] = {
"夜幕战略家",
"破晨号",
"zhCN",
},
[144296] = {
"Spider Tank",
"Operation: Mechagon",
"enUS",
},
[189227] = {
"Qalashi Hunter",
"Neltharus",
"enUS",
},
[198326] = {
"Stormwrought Despoiler",
"Vault of the Incarnates",
},
[169924] = {
"Veteran Stoneguard",
"Castle Nathria",
},
[244413] = {
"未知目标",
"地匍矿洞",
"zhCN",
},
[217517] = {
"夜幕窃愿者",
"真菌之愚",
"zhCN",
},
[162133] = {
"General Kaal",
"Sanguine Depths",
},
[156226] = {
"Coldheart Binder",
"Torghast, Tower of the Damned",
},
[244414] = {
"无缚残影",
"地匍矿洞",
"zhCN",
},
[208241] = {
"啃踝者",
"地匍矿洞",
"zhCN",
},
[221896] = {
"蛛网将军阿贝纳尔",
"地匍矿洞",
"zhCN",
},
[234206] = {
"噩梦爬行者",
"真菌之愚",
"zhCN",
},
[114804] = {
"Spectral Charger",
"Return to Karazhan",
},
[245008] = {
"无缚相位剑士",
"法力熔炉：欧米伽",
"zhCN",
},
[205618] = {
"Thorak Greenscale",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[208239] = {
"飞掠之恐",
"地匍矿洞",
"zhCN",
},
[167111] = {
"Spinemaw Staghorn",
"Mists of Tirna Scithe",
"enUS",
},
[234918] = {
"废土蠕行者",
"奥尔达尼生态圆顶",
"zhCN",
},
[206214] = {
"Infinite Infiltrator",
"Dawn of the Infinite",
"enUS",
},
[216328] = {
"Unstable Test Subject",
"City of Threads",
"enUS",
},
[244755] = {
"节点女亲王凯威扎",
"飞掠裂口",
"zhCN",
},
[168156] = {
"Remornia",
"Castle Nathria",
},
[191164] = {
"Arcane Tender",
"The Azure Vault",
"enUS",
},
[213937] = {
"拉夏南",
"破晨号",
"zhCN",
},
[169159] = {
"Unstable Canister",
"Plaguefall",
},
[231906] = {
"空中支援机器人",
"真菌之愚",
"zhCN",
},
[247457] = {
"古墓掠影者干须",
"丝菌师洞穴",
"zhCN",
},
[221102] = {
"Elder Shadeweaver",
"City of Threads",
"enUS",
},
[211140] = {
"阿拉希新兵",
"圣焰隐修院",
"zhCN",
},
[165415] = {
"劳苦的管理员",
"赎罪大厅",
"zhCN",
},
[248481] = {
"未知目标",
"飞掠裂口",
"zhCN",
},
[98813] = {
"Bloodscent Felhound",
"Black Rook Hold",
"enUS",
},
[167113] = {
"Spinemaw Acidgullet",
"Mists of Tirna Scithe",
"enUS",
},
[212403] = {
"Cursedheart Invader",
"The Stonevault",
"enUS",
},
[245411] = {
"肆虐的食腐者",
"奥尔达尼生态圆顶",
"zhCN",
},
[223150] = {
"Ascended Voidspeaker",
"Nerub-ar Palace",
"enUS",
},
[226403] = {
"齐扎·迅索",
"水闸行动",
"zhCN",
},
[165408] = {
"哈尔吉亚斯",
"赎罪大厅",
"zhCN",
},
[165410] = {
"高阶裁决官阿丽兹",
"赎罪大厅",
"zhCN",
},
[167898] = {
"嫉妒具象",
"赎罪大厅",
"zhCN",
},
[185537] = {
"Foul Controller",
"Sepulcher of the First Ones",
},
[244411] = {
"誓约奥术师",
"地匍矿洞",
"zhCN",
},
[245412] = {
"贪食的饕餮者",
"奥尔达尼生态圆顶",
"zhCN",
},
[231385] = {
"暗索调查员",
"水闸行动",
"zhCN",
},
[232228] = {
"水能堡食泥者",
"水闸行动",
"zhCN",
},
[226404] = {
"吉泽尔·超震",
"水闸行动",
"zhCN",
},
[201222] = {
"Valow, Timesworn Keeper",
"Dawn of the Infinite",
"enUS",
},
[225601] = {
"落网的受害者",
"破晨号",
"zhCN",
},
[172265] = {
"Remnant of Fury",
"Sanguine Depths",
},
[220986] = {
"Hollows Sentry",
"Khaz Algar",
},
[59873] = {
"Corrupt Living Water",
"Temple of the Jade Serpent",
"enUS",
},
[212838] = {
"阿拉希新兵",
"圣焰隐修院",
"zhCN",
},
[228538] = {
"夜幕咒刃",
"破晨号",
"zhCN",
},
[178630] = {
"Mawsworn Seeker",
"Sanctum of Domination",
},
[164557] = {
"哈尔吉亚斯的碎片",
"赎罪大厅",
"zhCN",
},
[220206] = {
"疯狂的斯卡丁",
"恐惧陷坑",
"zhCN",
},
[167116] = {
"Spinemaw Reaver",
"Mists of Tirna Scithe",
"enUS",
},
[155090] = {
"Anodized Coilbearer",
"Operation: Mechagon",
"enUS",
},
[247461] = {
"地渊之海憎恶",
"闸板陋巷",
"zhCN",
},
[207456] = {
"真菌护矛者",
"丝菌师洞穴",
"zhCN",
},
[196798] = {
"Corrupted Manafiend",
"Algeth'ar Academy",
},
[168396] = {
"Plaguebelcher",
"Plaguefall",
},
[228015] = {
"Hulking Bloodguard",
"Ara-Kara, City of Echoes",
"enUS",
},
[244444] = {
"大吞噬者",
"丝菌师洞穴",
"zhCN",
},
[179399] = {
"醉酒的海盗",
"塔扎维什，帷纱集市",
"zhCN",
},
[221158] = {
"暗影癫狂之猪",
"丝菌师洞穴",
"zhCN",
},
[207454] = {
"真菌开膛者",
"丝菌师洞穴",
"zhCN",
},
[168153] = {
"Plagueroc",
"Plaguefall",
},
[150165] = {
"Slime Elemental",
"Operation: Mechagon",
"enUS",
},
[247480] = {
"殴棘",
"闸板陋巷",
"zhCN",
},
[211061] = {
"帕特洛",
"真菌之愚",
"zhCN",
},
[207481] = {
"旋菇",
"真菌之愚",
"zhCN",
},
},
["extra_icon_timer_decimals"] = true,
["aura_grow_direction"] = 1,
["indicator_anchor"] = {
["x"] = 2,
["side"] = 6,
},
["hide_name_on_game_objects"] = false,
["minor_height_scale"] = 0.99999994039536,
["aura_padding"] = 0,
["indicator_worldboss"] = false,
["script_banned_user"] = {
["Player-3674-08A5D7A3"] = true,
},
["cast_statusbar_fadeout_time"] = 0.49999997019768,
["aura_stack_size"] = 8,
["range_check_power_bar_alpha"] = 0.8999999761581421,
["range_check_health_bar_alpha"] = 0.75,
["aura_show_crowdcontrol"] = true,
["cast_colors"] = {
[358320] = {
false,
"white",
"",
},
[330868] = {
true,
"white",
"Volley",
},
},
["extra_icon_timer_outline"] = "OUTLINE",
["aura_border_colors"] = {
["enrage"] = {
0.70196078431373,
0,
0.054901960784314,
},
["steal_or_purge"] = {
nil,
0.92549019607843,
1,
},
["offensive"] = {
nil,
0.65098039215686,
0.10196078431373,
0,
},
["crowdcontrol"] = {
1,
1,
1,
},
["is_show_all"] = {
0.70196080207825,
0.10196079313755,
0.10196079313755,
},
["is_buff"] = {
nil,
0,
0,
},
},
["class_colors"] = {
["DEATHKNIGHT"] = {
["colorStr"] = "ffc31d3a",
},
["WARRIOR"] = {
["colorStr"] = "ffc69a6d",
},
["PALADIN"] = {
["colorStr"] = "fff48bb9",
},
["WARLOCK"] = {
["colorStr"] = "ff8687ed",
},
["DEMONHUNTER"] = {
["colorStr"] = "ffa22fc8",
},
["SHAMAN"] = {
["colorStr"] = "ff006fdd",
},
["DRUID"] = {
["colorStr"] = "ffff7c09",
},
["EVOKER"] = {
["colorStr"] = "ff33937e",
},
["ROGUE"] = {
["colorStr"] = "fffff467",
},
},
["show_healthbars_on_softinteract"] = false,
["extra_icon_anchor"] = {
["x"] = -1,
},
["extra_icon_wide_icon"] = false,
["range_check_alpha"] = 0.8999999761581421,
["semver"] = "11.2.1",
["bossmod_aura_glow_expiring"] = false,
["aura_frame2_anchor"] = {
["y"] = 1.5,
["x"] = -1.199996948242188,
["side"] = 1,
},
["aura_alpha"] = 1,
["auto_toggle_friendly"] = {
["arena"] = true,
},
["indicator_faction"] = false,
["castbar_icon_x_offset"] = 7,
["show_softinteract_icons"] = false,
["extra_icon_height"] = 21,
["transparency_behavior"] = 2,
["spell_animations"] = false,
["debuff_show_cc_border"] = {
1,
1,
1,
},
["aura_consolidate"] = true,
["extra_icon_width"] = 22,
["hook_auto_imported"] = {
["Color Automation"] = 1,
["Blockade Encounter"] = 1,
["Cast Bar Icon Config"] = 2,
["Hide Neutral Units"] = 1,
["Aura Reorder"] = 3,
["Reorder Nameplate"] = 4,
["Dont Have Aura"] = 1,
["Players Targetting Amount"] = 4,
["Bwonsamdi Reaping"] = 1,
["Jaina Encounter"] = 6,
["Execute Range"] = 1,
["Attacking Specific Unit"] = 2,
["Combo Points"] = 6,
["Targetting Alpha"] = 3,
["Target Color"] = 3,
["Extra Border"] = 2,
["Monk Statue"] = 2,
},
["extra_icon_border_color"] = {
1,
1,
1,
},
["minor_width_scale"] = 0.99999994039536,
["indicator_pet"] = false,
["aura_frame1_anchor"] = {
["y"] = 1.5,
["x"] = 1.199996948242188,
["side"] = 7,
},
["aura_timer_text_font"] = "Expressway",
["cast_statusbar_color_finished"] = {
0.27843137254902,
0.75294117647059,
0.23529411764706,
},
["extra_icon_stack_font"] = "Expressway",
["non_targeted_alpha_enabled"] = true,
["aura2_x_offset"] = -1.199996948242188,
["target_indicator"] = "Double Arrows",
["range_check_cast_bar_alpha"] = 0.8999999761581421,
["saved_cvars"] = {
["nameplateShowOnlyNames"] = "0",
["nameplateOverlapV"] = "1.5",
["nameplateLargeTopInset"] = "0.03999999910593",
["nameplateShowEnemyMinus"] = "1",
["NamePlateClassificationScale"] = "1",
["nameplateShowFriendlyTotems"] = "0",
["nameplatePersonalHideDelaySeconds"] = "0.2",
["nameplateShowFriendlyPets"] = "0",
["nameplatePersonalShowInCombat"] = "0",
["nameplatePersonalShowWithTarget"] = "0",
["nameplateMinAlpha"] = "0.90135484",
["nameplateResourceOnTarget"] = "0",
["nameplateNotSelectedAlpha"] = "1",
["nameplateLargerScale"] = "1",
["nameplateMaxDistance"] = "60",
["nameplateShowFriendlyMinions"] = "0",
["nameplateSelfScale"] = "0.99779832363129",
["nameplateTargetBehindMaxDistance"] = "15",
["SoftTargetInteract"] = "0",
["nameplateShowEnemies"] = "1",
["NamePlateVerticalScale"] = "1",
["nameplateSelectedAlpha"] = "1",
["nameplateShowSelf"] = "1",
["nameplateShowPersonalCooldowns"] = "1",
["nameplatePersonalShowAlways"] = "1",
["nameplateMotionSpeed"] = "0.048449993133545",
["nameplateOverlapH"] = "0.75",
["nameplateGlobalScale"] = "1",
["nameplateShowEnemyMinions"] = "1",
["nameplateShowEnemyPets"] = "1",
["nameplateShowFriendlyNPCs"] = "0",
["nameplateSelectedScale"] = "0.99656772613525",
["nameplateShowFriendlyBuffs"] = "0",
["NamePlateHorizontalScale"] = "1",
["nameplateMinAlphaDistance"] = "-158489.31924611",
["nameplateOccludedAlphaMult"] = "0.5",
["nameplateShowFriends"] = "1",
["nameplateMotion"] = "1",
["nameplateShowAll"] = "1",
["nameplateMinScale"] = "1",
["nameplateShowEnemyTotems"] = "1",
["nameplateOtherTopInset"] = "0.03999999910593",
["nameplateOtherAtBase"] = "0",
["nameplateSelfBottomInset"] = "0.38",
["SoftTargetNameplateInteract"] = "0",
["nameplateShowFriendlyGuardians"] = "0",
["nameplateSelfAlpha"] = "0.89999997615814",
["nameplateSelfTopInset"] = "0.56",
["SoftTargetIconGameObject"] = "0",
["ShowNamePlateLoseAggroFlash"] = "1",
["ShowClassColorInNameplate"] = "1",
},
["login_counter"] = 57478,
["extra_icon_caster_name"] = false,
["click_space_friendly"] = {
120,
1,
},
["bossmod_aura_height"] = 32.105155944824,
["aura_stack_font"] = "Expressway",
["blizzard_nameplate_font"] = "Expressway",
["range_check_buffs_alpha"] = 0.75,
["indicator_shield"] = true,
["hide_friendly_castbars"] = true,
["OptionsPanelDB"] = {
["PlaterOptionsPanelFrame"] = {
["scale"] = 1.350000023841858,
},
},
["bossmod_cooldown_text_enabled"] = false,
["auras_per_row_amount"] = 4,
["target_highlight_texture"] = "Interface\\AddOns\\Plater\\images\\selection_indicator2",
["blizzard_nameplate_large_font"] = "Expressway",
["aura_stack_anchor"] = {
["y"] = 2.5,
["x"] = 8,
["side"] = 12,
},
["plate_config"] = {
["player"] = {
["spellpercent_text_font"] = "Expressway",
["cast"] = {
170,
},
["castbar_enabled"] = false,
["mana_incombat"] = {
172,
7,
},
["healthbar_color"] = {
0.07058823853731155,
1,
0.09803922474384308,
},
["cast_incombat"] = {
170,
},
["percent_text_anchor"] = {
["y"] = 1.299999237060547,
},
["power_percent_text_size"] = 8,
["spellname_text_font"] = "Expressway",
["mana"] = {
172,
7,
},
["power_percent_text_font"] = "Expressway",
["castbar_offset"] = -55,
["percent_text_size"] = 9,
["percent_text_font"] = "Expressway",
["percent_text_show_decimals"] = false,
["healthbar_color_by_hp"] = true,
["health_incombat"] = {
172,
},
["health"] = {
172,
},
["percent_text_color"] = {
1,
1,
1,
},
},
["friendlyplayer"] = {
["spellpercent_text_font"] = "Expressway",
["actorname_friend_color"] = {
0.70980392156863,
},
["level_text_size"] = 8,
["actorname_use_class_color"] = true,
["cast"] = {
135,
7,
},
["level_text_font"] = "Expressway",
["actorname_text_font"] = "Expressway",
["actorname_text_spacing"] = 8,
["only_damaged"] = false,
["only_thename"] = true,
["cast_incombat"] = {
135,
7,
},
["spellname_text_anchor"] = {
["y"] = -1.5,
["x"] = -1,
},
["spellname_text_size"] = 9,
["spellpercent_text_size"] = 9,
["percent_text_show_decimals"] = false,
["level_text_alpha"] = 0.2999999821186066,
["spellpercent_text_enabled"] = true,
["percent_text_font"] = "Expressway",
["actorname_guild_color"] = {
0.49803921568627,
},
["percent_show_percent"] = false,
["spellname_text_font"] = "Expressway",
["health_incombat"] = {
135,
16,
},
["health"] = {
135,
16,
},
["actorname_text_size"] = 9,
},
["friendlynpc"] = {
["spellpercent_text_font"] = "Expressway",
["level_text_size"] = 8,
["cast"] = {
135,
7,
},
["spellpercent_text_anchor"] = {
["x"] = 1,
["side"] = 5,
},
["enabled"] = false,
["spellname_text_outline"] = "OUTLINE",
["level_text_font"] = "Expressway",
["actorname_text_font"] = "Expressway",
["quest_color"] = {
1,
0.49803921568627,
},
["actorname_text_outline"] = "OUTLINE",
["big_actortitle_text_color"] = {
nil,
0.7843137254902,
nil,
1,
},
["actorname_text_spacing"] = 8,
["quest_color_enemy"] = {
1,
0.36862745098039,
0,
1,
},
["big_actortitle_text_font"] = "Expressway",
["percent_text_ooc"] = true,
["big_actorname_text_color"] = {
0.25098039215686,
0.68627450980392,
0.20392156862745,
1,
},
["level_text_alpha"] = 0.2999999821186066,
["cast_incombat"] = {
135,
7,
},
["spellname_text_anchor"] = {
["y"] = -1.5,
["x"] = -1,
["side"] = 3,
},
["percent_text_anchor"] = {
["y"] = 0.5,
["side"] = 11,
},
["spellname_text_font"] = "Expressway",
["quest_color_neutral"] = {
1,
0.65,
0,
},
["actorname_text_size"] = 9,
["big_actorname_text_font"] = "Expressway",
["big_actortitle_text_size"] = 9,
["spellpercent_text_size"] = 9,
["percent_show_health"] = true,
["spellpercent_text_enabled"] = true,
["percent_text_font"] = "Expressway",
["health_incombat"] = {
135,
},
["health"] = {
135,
16,
},
["percent_text_enabled"] = true,
["spellname_text_size"] = 9,
["actorname_text_anchor"] = {
["y"] = 0.5,
["x"] = 2.5,
["side"] = 10,
},
},
["global_health_height"] = 16,
["global_health_width"] = 132,
["enemyplayer"] = {
["big_actorname_text_size"] = 10,
["spellpercent_text_font"] = "Expressway",
["level_text_size"] = 8,
["cast"] = {
135,
7,
},
["fixed_class_color"] = {
0.69803921568627,
0.1921568627451,
0.11372549019608,
},
["spellpercent_text_anchor"] = {
["y"] = -1.5,
["x"] = 3,
["side"] = 5,
},
["spellname_text_outline"] = "OUTLINE",
["level_text_font"] = "Expressway",
["actorname_text_font"] = "Expressway",
["all_names"] = true,
["actorname_text_outline"] = "OUTLINE",
["actorname_text_spacing"] = 8,
["quest_color_enemy"] = {
1,
0.49803921568627,
0,
1,
},
["big_actortitle_text_font"] = "Expressway",
["spellpercent_text_size"] = 9,
["cast_incombat"] = {
135,
7,
},
["spellname_text_anchor"] = {
["y"] = -1.5,
["x"] = -1,
["side"] = 3,
},
["percent_text_anchor"] = {
["y"] = 0.5,
["side"] = 11,
},
["spellname_text_font"] = "Expressway",
["quest_color_neutral"] = {
1,
0.49803921568627,
0,
1,
},
["actorname_text_size"] = 9,
["big_actorname_text_font"] = "Expressway",
["big_actortitle_text_size"] = 10,
["level_text_alpha"] = 0.2999999821186066,
["percent_text_font"] = "Expressway",
["quest_enabled"] = true,
["quest_color_enabled"] = true,
["spellname_text_size"] = 9,
["health"] = {
135,
16,
},
["actorname_text_anchor"] = {
["y"] = 0.5,
["x"] = 2,
["side"] = 10,
},
["health_incombat"] = {
135,
},
["level_text_enabled"] = false,
},
["enemynpc"] = {
["spellpercent_text_font"] = "Expressway",
["cast"] = {
135,
7,
},
["big_actortitle_text_size"] = 9,
["spellpercent_text_anchor"] = {
["y"] = -1.5,
["x"] = 3,
["side"] = 5,
},
["level_text_font"] = "Expressway",
["actorname_text_font"] = "Expressway",
["actorname_text_outline"] = "OUTLINE",
["actorname_text_spacing"] = 8,
["quest_color_enemy"] = {
nil,
0.49803921568627,
},
["big_actortitle_text_font"] = "Expressway",
["cast_incombat"] = {
135,
7,
},
["spellname_text_anchor"] = {
["y"] = -1.5,
["x"] = -1,
["side"] = 3,
},
["percent_text_anchor"] = {
["y"] = 0.5,
["side"] = 11,
},
["spellname_text_font"] = "Expressway",
["quest_color_neutral"] = {
nil,
0.49803921568627,
},
["big_actorname_text_font"] = "Expressway",
["big_actorname_text_size"] = 9,
["spellpercent_text_size"] = 9,
["level_text_alpha"] = 0.2999999821186066,
["percent_text_font"] = "Expressway",
["health_incombat"] = {
135,
},
["health"] = {
135,
16,
},
["actorname_text_size"] = 9,
["actorname_text_anchor"] = {
["y"] = 0.5,
["x"] = 2,
["side"] = 10,
},
["spellname_text_size"] = 9,
["level_text_enabled"] = false,
},
},
["aura_y_offset"] = 1.5,
["bossmod_aura_glow_important_only"] = false,
["cast_statusbar_bgcolor"] = {
0.21176470588235,
0.21176470588235,
0.21176470588235,
0.90000000596046,
},
["bossmod_aura_width"] = 33,
["indicator_spec"] = false,
["border_thickness"] = 1.200000047683716,
["resources_settings"] = {
["global_settings"] = {
["anchor"] = {
["y"] = 9.709999084472656,
},
["show_depleted"] = false,
["scale"] = 0.80000001192093,
},
["chr"] = {
["Player-4184-004EAE08"] = "ArcaneCharges",
["Player-3296-00936CF9"] = "ComboPoints",
["Player-11-0E82EBCD"] = "ArcaneCharges",
["Player-5764-00449C8A"] = "ComboPoints",
["Player-11-0E5C6A6B"] = "ComboPoints",
["Player-970-00B46921"] = "ComboPoints",
["Player-11-0E5C6A2D"] = "ComboPoints",
["Player-3674-09CBAF8C"] = "ArcaneCharges",
["Player-3678-0D7BB774"] = "ComboPoints",
["Player-2073-09AF21B0"] = "ComboPoints",
["Player-11-0E912F58"] = "SoulShards",
["Player-3684-0EA9A055"] = "HolyPower",
["Player-3684-0E9E51FC"] = "ComboPoints",
["Player-4184-00C60F8C"] = "ArcaneCharges",
["Player-5764-0046B6C4"] = "ComboPoints",
["Player-5764-0008F0CD"] = "ComboPoints",
["Player-3684-091919FE"] = "HolyPower",
["Player-4184-0021692E"] = "ComboPoints",
["Player-3296-00945C33"] = "ComboPoints",
["Player-11-0E912F44"] = "ComboPoints",
["Player-970-006B99B8"] = "ComboPoints",
["Player-3684-0E9F508B"] = "ComboPoints",
["Player-3674-0898468A"] = "SoulShards",
["Player-970-00B2046C"] = "ComboPoints",
["Player-5764-003EB19F"] = "ComboPoints",
["Player-3678-0D8642EB"] = "ComboPoints",
["Player-3678-0D4C07B5"] = "ComboPoints",
["Player-4184-00CB2DE1"] = "ComboPoints",
["Player-3678-0D44FD01"] = "ComboPoints",
["Player-970-00B49A85"] = "ComboPoints",
["Player-5764-004254A6"] = "ArcaneCharges",
["Player-5764-0008EBB9"] = "ComboPoints",
["Player-3678-0D4F17CA"] = "ComboPoints",
["Player-11-0E929C72"] = "SoulShards",
["Player-3684-0E9F0125"] = "ComboPoints",
["Player-5764-003E78D5"] = "ComboPoints",
["Player-11-0E89E36C"] = "ComboPoints",
["Player-3674-096625B1"] = "Chi",
["Player-57-0DF9236F"] = "Essence",
["Player-5764-00018799"] = "ComboPoints",
["Player-3676-0DBAB9E1"] = "ComboPoints",
["Player-970-0065C1C7"] = "ComboPoints",
["Player-4184-008FBEFA"] = "ComboPoints",
["Player-5764-00430DD1"] = "ComboPoints",
["Player-3684-0E9F010E"] = "ComboPoints",
["Player-5764-00423DA8"] = "SoulShards",
["Player-5764-003EB012"] = "ComboPoints",
["Player-4604-00325132"] = "ComboPoints",
["Player-57-0DF7C676"] = "Runes",
["Player-4184-00C7C500"] = "HolyPower",
["Player-4184-00C8CB6C"] = "ComboPoints",
},
},
["spell_animation_list"] = {
[27285] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.1,
["scale_upY"] = 1.1,
["scale_downX"] = 0.9,
["scale_downY"] = 0.9,
["duration"] = 0.075,
["cooldown"] = 0.75,
["enabled"] = true,
},
["3"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.1,
["scale_upY"] = 1.1,
["scale_downX"] = 0.9,
["scale_downY"] = 0.9,
["duration"] = 0.075,
["cooldown"] = 0.75,
["enabled"] = true,
},
["2"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.1,
["scale_upY"] = 1.1,
["scale_downX"] = 0.9,
["scale_downY"] = 0.9,
["duration"] = 0.075,
["cooldown"] = 0.75,
["enabled"] = true,
},
["5"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.1,
["scale_upY"] = 1.1,
["scale_downX"] = 0.9,
["scale_downY"] = 0.9,
["duration"] = 0.075,
["cooldown"] = 0.75,
["enabled"] = true,
},
["4"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.1,
["scale_upY"] = 1.1,
["scale_downX"] = 0.9,
["scale_downY"] = 0.9,
["duration"] = 0.075,
["cooldown"] = 0.75,
["enabled"] = true,
},
["7"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.1,
["scale_upY"] = 1.1,
["scale_downX"] = 0.9,
["scale_downY"] = 0.9,
["duration"] = 0.075,
["cooldown"] = 0.75,
["enabled"] = true,
},
["6"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.1,
["scale_upY"] = 1.1,
["scale_downX"] = 0.9,
["scale_downY"] = 0.9,
["duration"] = 0.075,
["cooldown"] = 0.75,
["enabled"] = true,
},
},
[188443] = {
["1"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
["3"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
["2"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
["5"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
["4"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
["6"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
},
[46968] = {
["1"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 0.95,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.1,
["frequency"] = 120,
},
["3"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 0.95,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.1,
["frequency"] = 120,
},
["2"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 0.95,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.1,
["frequency"] = 120,
},
["5"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 0.95,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.1,
["frequency"] = 120,
},
["4"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 0.95,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.1,
["frequency"] = 120,
},
["7"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 0.95,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.1,
["frequency"] = 120,
},
["6"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 0.95,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.1,
["frequency"] = 120,
},
},
[275779] = {
["1"] = {
["scaleY"] = -1,
["fade_out"] = 0.02,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["3"] = {
["scaleY"] = -1,
["fade_out"] = 0.02,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["2"] = {
["scaleY"] = -1,
["fade_out"] = 0.02,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["5"] = {
["scaleY"] = -1,
["fade_out"] = 0.02,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["4"] = {
["scaleY"] = -1,
["fade_out"] = 0.02,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["7"] = {
["scaleY"] = -1,
["fade_out"] = 0.02,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["6"] = {
["scaleY"] = -1,
["fade_out"] = 0.02,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.5,
["frequency"] = 25,
},
},
[11366] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.15,
["scale_upY"] = 1.15,
["scale_downX"] = 0.8,
["scale_downY"] = 0.8,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["3"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.15,
["scale_upY"] = 1.15,
["scale_downX"] = 0.8,
["scale_downY"] = 0.8,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["critical_scale"] = 1,
["amplitude"] = 10,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["5"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.15,
["scale_upY"] = 1.15,
["scale_downX"] = 0.8,
["scale_downY"] = 0.8,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["4"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["critical_scale"] = 1,
["amplitude"] = 10,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["7"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.15,
["scale_upY"] = 1.15,
["scale_downX"] = 0.8,
["scale_downY"] = 0.8,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["6"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["critical_scale"] = 1,
["amplitude"] = 10,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["9"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.15,
["scale_upY"] = 1.15,
["scale_downX"] = 0.8,
["scale_downY"] = 0.8,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["8"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["critical_scale"] = 1,
["amplitude"] = 10,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["14"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["critical_scale"] = 1,
["amplitude"] = 10,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["13"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.15,
["scale_upY"] = 1.15,
["scale_downX"] = 0.8,
["scale_downY"] = 0.8,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["12"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["critical_scale"] = 1,
["amplitude"] = 10,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["11"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.15,
["scale_upY"] = 1.15,
["scale_downX"] = 0.8,
["scale_downY"] = 0.8,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["10"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["critical_scale"] = 1,
["amplitude"] = 10,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
},
[228354] = {
["1"] = {
["scaleY"] = 1,
["fade_out"] = 0.02,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["3"] = {
["scaleY"] = 1,
["fade_out"] = 0.02,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["2"] = {
["scaleY"] = 1,
["fade_out"] = 0.02,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["5"] = {
["scaleY"] = 1,
["fade_out"] = 0.02,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["4"] = {
["scaleY"] = 1,
["fade_out"] = 0.02,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["6"] = {
["scaleY"] = 1,
["fade_out"] = 0.02,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.5,
["frequency"] = 25,
},
},
[32645] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.1000000238419,
["scale_upY"] = 1.1999999284744,
["scale_downX"] = 0.89999997615814,
["scale_downY"] = 0.89999997615814,
["duration"] = 0.04,
["cooldown"] = 0.75,
["enabled"] = true,
},
["3"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.1000000238419,
["scale_upY"] = 1.1999999284744,
["scale_downX"] = 0.89999997615814,
["scale_downY"] = 0.89999997615814,
["duration"] = 0.04,
["cooldown"] = 0.75,
["enabled"] = true,
},
["2"] = {
["scaleY"] = 1,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["enabled"] = true,
["amplitude"] = 4.0999999046326,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.12000000476837,
["cooldown"] = 0.5,
["frequency"] = 2.6099998950958,
},
["5"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.1000000238419,
["scale_upY"] = 1.1999999284744,
["scale_downX"] = 0.89999997615814,
["scale_downY"] = 0.89999997615814,
["duration"] = 0.04,
["cooldown"] = 0.75,
["enabled"] = true,
},
["4"] = {
["scaleY"] = 1,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["enabled"] = true,
["amplitude"] = 4.0999999046326,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.12000000476837,
["cooldown"] = 0.5,
["frequency"] = 2.6099998950958,
},
["7"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.1000000238419,
["scale_upY"] = 1.1999999284744,
["scale_downX"] = 0.89999997615814,
["scale_downY"] = 0.89999997615814,
["duration"] = 0.04,
["cooldown"] = 0.75,
["enabled"] = true,
},
["6"] = {
["scaleY"] = 1,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["enabled"] = true,
["amplitude"] = 4.0999999046326,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.12000000476837,
["cooldown"] = 0.5,
["frequency"] = 2.6099998950958,
},
["9"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.1000000238419,
["scale_upY"] = 1.1999999284744,
["scale_downX"] = 0.89999997615814,
["scale_downY"] = 0.89999997615814,
["duration"] = 0.04,
["cooldown"] = 0.75,
["enabled"] = true,
},
["8"] = {
["scaleY"] = 1,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["enabled"] = true,
["amplitude"] = 4.0999999046326,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.12000000476837,
["cooldown"] = 0.5,
["frequency"] = 2.6099998950958,
},
["14"] = {
["scaleY"] = 1,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["enabled"] = true,
["amplitude"] = 4.0999999046326,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.12000000476837,
["cooldown"] = 0.5,
["frequency"] = 2.6099998950958,
},
["13"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.1000000238419,
["scale_upY"] = 1.1999999284744,
["scale_downX"] = 0.89999997615814,
["scale_downY"] = 0.89999997615814,
["duration"] = 0.04,
["cooldown"] = 0.75,
["enabled"] = true,
},
["12"] = {
["scaleY"] = 1,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["enabled"] = true,
["amplitude"] = 4.0999999046326,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.12000000476837,
["cooldown"] = 0.5,
["frequency"] = 2.6099998950958,
},
["11"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.1000000238419,
["scale_upY"] = 1.1999999284744,
["scale_downX"] = 0.89999997615814,
["scale_downY"] = 0.89999997615814,
["duration"] = 0.04,
["cooldown"] = 0.75,
["enabled"] = true,
},
["10"] = {
["scaleY"] = 1,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["enabled"] = true,
["amplitude"] = 4.0999999046326,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.12000000476837,
["cooldown"] = 0.5,
["frequency"] = 2.6099998950958,
},
},
[189112] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.34999999403954,
["absolute_sineX"] = true,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["critical_scale"] = 1.05,
["amplitude"] = 1.8799999952316,
["fade_in"] = 0,
["duration"] = 0.40000000596046,
["cooldown"] = 0.5,
["frequency"] = 51.979999542236,
},
["3"] = {
["enabled"] = true,
["fade_out"] = 0.34999999403954,
["absolute_sineX"] = true,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["critical_scale"] = 1.05,
["amplitude"] = 1.8799999952316,
["fade_in"] = 0,
["duration"] = 0.40000000596046,
["cooldown"] = 0.5,
["frequency"] = 51.979999542236,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.34999999403954,
["absolute_sineX"] = true,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["critical_scale"] = 1.05,
["amplitude"] = 1.8799999952316,
["fade_in"] = 0,
["duration"] = 0.40000000596046,
["cooldown"] = 0.5,
["frequency"] = 51.979999542236,
},
["5"] = {
["enabled"] = true,
["fade_out"] = 0.34999999403954,
["absolute_sineX"] = true,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["critical_scale"] = 1.05,
["amplitude"] = 1.8799999952316,
["fade_in"] = 0,
["duration"] = 0.40000000596046,
["cooldown"] = 0.5,
["frequency"] = 51.979999542236,
},
["4"] = {
["enabled"] = true,
["fade_out"] = 0.34999999403954,
["absolute_sineX"] = true,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["critical_scale"] = 1.05,
["amplitude"] = 1.8799999952316,
["fade_in"] = 0,
["duration"] = 0.40000000596046,
["cooldown"] = 0.5,
["frequency"] = 51.979999542236,
},
["6"] = {
["enabled"] = true,
["fade_out"] = 0.34999999403954,
["absolute_sineX"] = true,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["critical_scale"] = 1.05,
["amplitude"] = 1.8799999952316,
["fade_in"] = 0,
["duration"] = 0.40000000596046,
["cooldown"] = 0.5,
["frequency"] = 51.979999542236,
},
},
[187874] = {
["1"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.85,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 100,
},
["3"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.85,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 100,
},
["2"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.85,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 100,
},
["5"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.85,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 100,
},
["4"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.85,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 100,
},
["7"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.85,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 100,
},
["6"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.85,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 100,
},
},
[185763] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.25999999046326,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 3.6583230495453,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.15999999642372,
["cooldown"] = 0.5,
["frequency"] = 23.525663375854,
},
["3"] = {
["enabled"] = true,
["fade_out"] = 0.25999999046326,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 3.6583230495453,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.15999999642372,
["cooldown"] = 0.5,
["frequency"] = 23.525663375854,
},
["2"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0299999713898,
["scale_upY"] = 1.0299999713898,
["scale_downX"] = 0.96999996900559,
["scale_downY"] = 0.96999996900559,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["5"] = {
["enabled"] = true,
["fade_out"] = 0.25999999046326,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 3.6583230495453,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.15999999642372,
["cooldown"] = 0.5,
["frequency"] = 23.525663375854,
},
["4"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0299999713898,
["scale_upY"] = 1.0299999713898,
["scale_downX"] = 0.96999996900559,
["scale_downY"] = 0.96999996900559,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["7"] = {
["enabled"] = true,
["fade_out"] = 0.25999999046326,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 3.6583230495453,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.15999999642372,
["cooldown"] = 0.5,
["frequency"] = 23.525663375854,
},
["6"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0299999713898,
["scale_upY"] = 1.0299999713898,
["scale_downX"] = 0.96999996900559,
["scale_downY"] = 0.96999996900559,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["9"] = {
["enabled"] = true,
["fade_out"] = 0.25999999046326,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 3.6583230495453,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.15999999642372,
["cooldown"] = 0.5,
["frequency"] = 23.525663375854,
},
["8"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0299999713898,
["scale_upY"] = 1.0299999713898,
["scale_downX"] = 0.96999996900559,
["scale_downY"] = 0.96999996900559,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["14"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0299999713898,
["scale_upY"] = 1.0299999713898,
["scale_downX"] = 0.96999996900559,
["scale_downY"] = 0.96999996900559,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["13"] = {
["enabled"] = true,
["fade_out"] = 0.25999999046326,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 3.6583230495453,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.15999999642372,
["cooldown"] = 0.5,
["frequency"] = 23.525663375854,
},
["12"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0299999713898,
["scale_upY"] = 1.0299999713898,
["scale_downX"] = 0.96999996900559,
["scale_downY"] = 0.96999996900559,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["11"] = {
["enabled"] = true,
["fade_out"] = 0.25999999046326,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 3.6583230495453,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.15999999642372,
["cooldown"] = 0.5,
["frequency"] = 23.525663375854,
},
["10"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0299999713898,
["scale_upY"] = 1.0299999713898,
["scale_downX"] = 0.96999996900559,
["scale_downY"] = 0.96999996900559,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
},
[31661] = {
["1"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0,
["frequency"] = 200,
},
["3"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0,
["frequency"] = 200,
},
["2"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0,
["frequency"] = 200,
},
["5"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0,
["frequency"] = 200,
},
["4"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0,
["frequency"] = 200,
},
["7"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0,
["frequency"] = 200,
},
["6"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0,
["frequency"] = 200,
},
},
[203782] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = true,
["scaleY"] = -1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["critical_scale"] = 1.05,
["amplitude"] = 1.5,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["3"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = true,
["scaleY"] = -1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["critical_scale"] = 1.05,
["amplitude"] = 1.5,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = true,
["scaleY"] = -1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["critical_scale"] = 1.05,
["amplitude"] = 1.5,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["5"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = true,
["scaleY"] = -1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["critical_scale"] = 1.05,
["amplitude"] = 1.5,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["4"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = true,
["scaleY"] = -1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["critical_scale"] = 1.05,
["amplitude"] = 1.5,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["7"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = true,
["scaleY"] = -1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["critical_scale"] = 1.05,
["amplitude"] = 1.5,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["6"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = true,
["scaleY"] = -1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["critical_scale"] = 1.05,
["amplitude"] = 1.5,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 1,
},
},
[100784] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1.05,
["amplitude"] = 3,
["fade_in"] = 0.01,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["3"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1.05,
["amplitude"] = 3,
["fade_in"] = 0.01,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1.05,
["amplitude"] = 3,
["fade_in"] = 0.01,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["5"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1.05,
["amplitude"] = 3,
["fade_in"] = 0.01,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["4"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1.05,
["amplitude"] = 3,
["fade_in"] = 0.01,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["7"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1.05,
["amplitude"] = 3,
["fade_in"] = 0.01,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["6"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1.05,
["amplitude"] = 3,
["fade_in"] = 0.01,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 1,
},
},
[31935] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.03,
["scale_upY"] = 1.03,
["scale_downX"] = 0.97,
["scale_downY"] = 0.97,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["3"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.03,
["scale_upY"] = 1.03,
["scale_downX"] = 0.97,
["scale_downY"] = 0.97,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = true,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1,
["amplitude"] = 6,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["5"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.03,
["scale_upY"] = 1.03,
["scale_downX"] = 0.97,
["scale_downY"] = 0.97,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["4"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = true,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1,
["amplitude"] = 6,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["7"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.03,
["scale_upY"] = 1.03,
["scale_downX"] = 0.97,
["scale_downY"] = 0.97,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["6"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = true,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1,
["amplitude"] = 6,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["9"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.03,
["scale_upY"] = 1.03,
["scale_downX"] = 0.97,
["scale_downY"] = 0.97,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["8"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = true,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1,
["amplitude"] = 6,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["14"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = true,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1,
["amplitude"] = 6,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["13"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.03,
["scale_upY"] = 1.03,
["scale_downX"] = 0.97,
["scale_downY"] = 0.97,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["12"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = true,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1,
["amplitude"] = 6,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["11"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.03,
["scale_upY"] = 1.03,
["scale_downX"] = 0.97,
["scale_downY"] = 0.97,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["10"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = true,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1,
["amplitude"] = 6,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
},
[53351] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0199999809265,
["scale_upY"] = 1,
["scale_downX"] = 0.97999995946884,
["scale_downY"] = 1,
["duration"] = 0.050000000745058,
["cooldown"] = 0.75,
["enabled"] = true,
},
["3"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0199999809265,
["scale_upY"] = 1,
["scale_downX"] = 0.97999995946884,
["scale_downY"] = 1,
["duration"] = 0.050000000745058,
["cooldown"] = 0.75,
["enabled"] = true,
},
["2"] = {
["scaleY"] = -1,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["enabled"] = true,
["amplitude"] = 5.6999998092651,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
["5"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0199999809265,
["scale_upY"] = 1,
["scale_downX"] = 0.97999995946884,
["scale_downY"] = 1,
["duration"] = 0.050000000745058,
["cooldown"] = 0.75,
["enabled"] = true,
},
["4"] = {
["scaleY"] = -1,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["enabled"] = true,
["amplitude"] = 5.6999998092651,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
["7"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0199999809265,
["scale_upY"] = 1,
["scale_downX"] = 0.97999995946884,
["scale_downY"] = 1,
["duration"] = 0.050000000745058,
["cooldown"] = 0.75,
["enabled"] = true,
},
["6"] = {
["scaleY"] = -1,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["enabled"] = true,
["amplitude"] = 5.6999998092651,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
["9"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0199999809265,
["scale_upY"] = 1,
["scale_downX"] = 0.97999995946884,
["scale_downY"] = 1,
["duration"] = 0.050000000745058,
["cooldown"] = 0.75,
["enabled"] = true,
},
["8"] = {
["scaleY"] = -1,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["enabled"] = true,
["amplitude"] = 5.6999998092651,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
["14"] = {
["scaleY"] = -1,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["enabled"] = true,
["amplitude"] = 5.6999998092651,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
["13"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0199999809265,
["scale_upY"] = 1,
["scale_downX"] = 0.97999995946884,
["scale_downY"] = 1,
["duration"] = 0.050000000745058,
["cooldown"] = 0.75,
["enabled"] = true,
},
["12"] = {
["scaleY"] = -1,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["enabled"] = true,
["amplitude"] = 5.6999998092651,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
["11"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0199999809265,
["scale_upY"] = 1,
["scale_downX"] = 0.97999995946884,
["scale_downY"] = 1,
["duration"] = 0.050000000745058,
["cooldown"] = 0.75,
["enabled"] = true,
},
["10"] = {
["scaleY"] = -1,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["enabled"] = true,
["amplitude"] = 5.6999998092651,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
},
[257045] = {
["1"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0,
["frequency"] = 200,
},
["3"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0,
["frequency"] = 200,
},
["2"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0,
["frequency"] = 200,
},
["5"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0,
["frequency"] = 200,
},
["4"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0,
["frequency"] = 200,
},
["7"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0,
["frequency"] = 200,
},
["6"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0,
["frequency"] = 200,
},
},
[107270] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 0.1499999910593,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1499999910593,
["cooldown"] = 0.5,
["frequency"] = 200,
},
["3"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 0.1499999910593,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1499999910593,
["cooldown"] = 0.5,
["frequency"] = 200,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 0.1499999910593,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1499999910593,
["cooldown"] = 0.5,
["frequency"] = 200,
},
["5"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 0.1499999910593,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1499999910593,
["cooldown"] = 0.5,
["frequency"] = 200,
},
["4"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 0.1499999910593,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1499999910593,
["cooldown"] = 0.5,
["frequency"] = 200,
},
["7"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 0.1499999910593,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1499999910593,
["cooldown"] = 0.5,
["frequency"] = 200,
},
["6"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 0.1499999910593,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1499999910593,
["cooldown"] = 0.5,
["frequency"] = 200,
},
},
[17364] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.02,
["scale_upY"] = 1.02,
["scale_downX"] = 0.97,
["scale_downY"] = 0.97,
["duration"] = 0.10000000745058,
["cooldown"] = 0.75,
["enabled"] = true,
},
["3"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.02,
["scale_upY"] = 1.02,
["scale_downX"] = 0.97,
["scale_downY"] = 0.97,
["duration"] = 0.10000000745058,
["cooldown"] = 0.75,
["enabled"] = true,
},
["2"] = {
["scaleY"] = -1,
["fade_out"] = 0.11,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["enabled"] = true,
["amplitude"] = 2.5,
["fade_in"] = 0,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
["5"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.02,
["scale_upY"] = 1.02,
["scale_downX"] = 0.97,
["scale_downY"] = 0.97,
["duration"] = 0.10000000745058,
["cooldown"] = 0.75,
["enabled"] = true,
},
["4"] = {
["scaleY"] = -1,
["fade_out"] = 0.11,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["enabled"] = true,
["amplitude"] = 2.5,
["fade_in"] = 0,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
["7"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.02,
["scale_upY"] = 1.02,
["scale_downX"] = 0.97,
["scale_downY"] = 0.97,
["duration"] = 0.10000000745058,
["cooldown"] = 0.75,
["enabled"] = true,
},
["6"] = {
["scaleY"] = -1,
["fade_out"] = 0.11,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["enabled"] = true,
["amplitude"] = 2.5,
["fade_in"] = 0,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
["9"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.02,
["scale_upY"] = 1.02,
["scale_downX"] = 0.97,
["scale_downY"] = 0.97,
["duration"] = 0.10000000745058,
["cooldown"] = 0.75,
["enabled"] = true,
},
["8"] = {
["scaleY"] = -1,
["fade_out"] = 0.11,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["enabled"] = true,
["amplitude"] = 2.5,
["fade_in"] = 0,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
["14"] = {
["scaleY"] = -1,
["fade_out"] = 0.11,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["enabled"] = true,
["amplitude"] = 2.5,
["fade_in"] = 0,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
["13"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.02,
["scale_upY"] = 1.02,
["scale_downX"] = 0.97,
["scale_downY"] = 0.97,
["duration"] = 0.10000000745058,
["cooldown"] = 0.75,
["enabled"] = true,
},
["12"] = {
["scaleY"] = -1,
["fade_out"] = 0.11,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["enabled"] = true,
["amplitude"] = 2.5,
["fade_in"] = 0,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
["11"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.02,
["scale_upY"] = 1.02,
["scale_downX"] = 0.97,
["scale_downY"] = 0.97,
["duration"] = 0.10000000745058,
["cooldown"] = 0.75,
["enabled"] = true,
},
["10"] = {
["scaleY"] = -1,
["fade_out"] = 0.11,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["enabled"] = true,
["amplitude"] = 2.5,
["fade_in"] = 0,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
},
[49998] = {
["1"] = {
["scaleY"] = 1,
["fade_out"] = 0.019999999552965,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["enabled"] = true,
["amplitude"] = 1.0330086946487,
["fade_in"] = 0.01,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["3"] = {
["scaleY"] = 1,
["fade_out"] = 0.019999999552965,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["enabled"] = true,
["amplitude"] = 1.0330086946487,
["fade_in"] = 0.01,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["2"] = {
["scaleY"] = 1,
["fade_out"] = 0.019999999552965,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["enabled"] = true,
["amplitude"] = 1.0330086946487,
["fade_in"] = 0.01,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["5"] = {
["scaleY"] = 1,
["fade_out"] = 0.019999999552965,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["enabled"] = true,
["amplitude"] = 1.0330086946487,
["fade_in"] = 0.01,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["4"] = {
["scaleY"] = 1,
["fade_out"] = 0.019999999552965,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["enabled"] = true,
["amplitude"] = 1.0330086946487,
["fade_in"] = 0.01,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["6"] = {
["scaleY"] = 1,
["fade_out"] = 0.019999999552965,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["enabled"] = true,
["amplitude"] = 1.0330086946487,
["fade_in"] = 0.01,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 25,
},
},
[7268] = {
["1"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0,
["frequency"] = 200,
},
["3"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0,
["frequency"] = 200,
},
["2"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0,
["frequency"] = 200,
},
["5"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0,
["frequency"] = 200,
},
["4"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0,
["frequency"] = 200,
},
["7"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0,
["frequency"] = 200,
},
["6"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0,
["frequency"] = 200,
},
},
[206930] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0199999809265,
["scale_upY"] = 1,
["scale_downX"] = 0.97999995946884,
["scale_downY"] = 1,
["duration"] = 0.050000000745058,
["cooldown"] = 0.75,
["enabled"] = true,
},
["3"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0199999809265,
["scale_upY"] = 1,
["scale_downX"] = 0.97999995946884,
["scale_downY"] = 1,
["duration"] = 0.050000000745058,
["cooldown"] = 0.75,
["enabled"] = true,
},
["2"] = {
["scaleY"] = -1,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["enabled"] = true,
["amplitude"] = 5.6999998092651,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
["5"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0199999809265,
["scale_upY"] = 1,
["scale_downX"] = 0.97999995946884,
["scale_downY"] = 1,
["duration"] = 0.050000000745058,
["cooldown"] = 0.75,
["enabled"] = true,
},
["4"] = {
["scaleY"] = -1,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["enabled"] = true,
["amplitude"] = 5.6999998092651,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
["7"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0199999809265,
["scale_upY"] = 1,
["scale_downX"] = 0.97999995946884,
["scale_downY"] = 1,
["duration"] = 0.050000000745058,
["cooldown"] = 0.75,
["enabled"] = true,
},
["6"] = {
["scaleY"] = -1,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["enabled"] = true,
["amplitude"] = 5.6999998092651,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
["9"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0199999809265,
["scale_upY"] = 1,
["scale_downX"] = 0.97999995946884,
["scale_downY"] = 1,
["duration"] = 0.050000000745058,
["cooldown"] = 0.75,
["enabled"] = true,
},
["8"] = {
["scaleY"] = -1,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["enabled"] = true,
["amplitude"] = 5.6999998092651,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
["14"] = {
["scaleY"] = -1,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["enabled"] = true,
["amplitude"] = 5.6999998092651,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
["13"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0199999809265,
["scale_upY"] = 1,
["scale_downX"] = 0.97999995946884,
["scale_downY"] = 1,
["duration"] = 0.050000000745058,
["cooldown"] = 0.75,
["enabled"] = true,
},
["12"] = {
["scaleY"] = -1,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["enabled"] = true,
["amplitude"] = 5.6999998092651,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
["11"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0199999809265,
["scale_upY"] = 1,
["scale_downX"] = 0.97999995946884,
["scale_downY"] = 1,
["duration"] = 0.050000000745058,
["cooldown"] = 0.75,
["enabled"] = true,
},
["10"] = {
["scaleY"] = -1,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["enabled"] = true,
["amplitude"] = 5.6999998092651,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
},
[196278] = {
["1"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.05,
["cooldown"] = 0,
["frequency"] = 200,
},
["3"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.05,
["cooldown"] = 0,
["frequency"] = 200,
},
["2"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.05,
["cooldown"] = 0,
["frequency"] = 200,
},
["5"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.05,
["cooldown"] = 0,
["frequency"] = 200,
},
["4"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.05,
["cooldown"] = 0,
["frequency"] = 200,
},
["7"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.05,
["cooldown"] = 0,
["frequency"] = 200,
},
["6"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.05,
["cooldown"] = 0,
["frequency"] = 200,
},
},
[162243] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 1,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.099999994039535,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["3"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 1,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.099999994039535,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 1,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.099999994039535,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["5"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 1,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.099999994039535,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["4"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 1,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.099999994039535,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["7"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 1,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.099999994039535,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["6"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 1,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.099999994039535,
["cooldown"] = 0.5,
["frequency"] = 1,
},
},
[196819] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.1999999284744,
["scale_upY"] = 1.2999999523163,
["scale_downX"] = 0.89999997615814,
["scale_downY"] = 0.89999997615814,
["duration"] = 0.04,
["cooldown"] = 0.75,
["enabled"] = true,
},
["3"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.1999999284744,
["scale_upY"] = 1.2999999523163,
["scale_downX"] = 0.89999997615814,
["scale_downY"] = 0.89999997615814,
["duration"] = 0.04,
["cooldown"] = 0.75,
["enabled"] = true,
},
["2"] = {
["scaleY"] = 1,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["enabled"] = true,
["amplitude"] = 5,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.21999999880791,
["cooldown"] = 0.5,
["frequency"] = 3.3099999427795,
},
["5"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.1999999284744,
["scale_upY"] = 1.2999999523163,
["scale_downX"] = 0.89999997615814,
["scale_downY"] = 0.89999997615814,
["duration"] = 0.04,
["cooldown"] = 0.75,
["enabled"] = true,
},
["4"] = {
["scaleY"] = 1,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["enabled"] = true,
["amplitude"] = 5,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.21999999880791,
["cooldown"] = 0.5,
["frequency"] = 3.3099999427795,
},
["7"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.1999999284744,
["scale_upY"] = 1.2999999523163,
["scale_downX"] = 0.89999997615814,
["scale_downY"] = 0.89999997615814,
["duration"] = 0.04,
["cooldown"] = 0.75,
["enabled"] = true,
},
["6"] = {
["scaleY"] = 1,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["enabled"] = true,
["amplitude"] = 5,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.21999999880791,
["cooldown"] = 0.5,
["frequency"] = 3.3099999427795,
},
["9"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.1999999284744,
["scale_upY"] = 1.2999999523163,
["scale_downX"] = 0.89999997615814,
["scale_downY"] = 0.89999997615814,
["duration"] = 0.04,
["cooldown"] = 0.75,
["enabled"] = true,
},
["8"] = {
["scaleY"] = 1,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["enabled"] = true,
["amplitude"] = 5,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.21999999880791,
["cooldown"] = 0.5,
["frequency"] = 3.3099999427795,
},
["14"] = {
["scaleY"] = 1,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["enabled"] = true,
["amplitude"] = 5,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.21999999880791,
["cooldown"] = 0.5,
["frequency"] = 3.3099999427795,
},
["13"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.1999999284744,
["scale_upY"] = 1.2999999523163,
["scale_downX"] = 0.89999997615814,
["scale_downY"] = 0.89999997615814,
["duration"] = 0.04,
["cooldown"] = 0.75,
["enabled"] = true,
},
["12"] = {
["scaleY"] = 1,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["enabled"] = true,
["amplitude"] = 5,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.21999999880791,
["cooldown"] = 0.5,
["frequency"] = 3.3099999427795,
},
["11"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.1999999284744,
["scale_upY"] = 1.2999999523163,
["scale_downX"] = 0.89999997615814,
["scale_downY"] = 0.89999997615814,
["duration"] = 0.04,
["cooldown"] = 0.75,
["enabled"] = true,
},
["10"] = {
["scaleY"] = 1,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["enabled"] = true,
["amplitude"] = 5,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.21999999880791,
["cooldown"] = 0.5,
["frequency"] = 3.3099999427795,
},
},
[264178] = {
["1"] = {
["scaleY"] = 1,
["fade_out"] = 0.08,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 2.5,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.25,
["frequency"] = 20,
},
["3"] = {
["scaleY"] = 1,
["fade_out"] = 0.08,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 2.5,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.25,
["frequency"] = 20,
},
["2"] = {
["scaleY"] = 1,
["fade_out"] = 0.08,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 2.5,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.25,
["frequency"] = 20,
},
["5"] = {
["scaleY"] = 1,
["fade_out"] = 0.08,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 2.5,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.25,
["frequency"] = 20,
},
["4"] = {
["scaleY"] = 1,
["fade_out"] = 0.08,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 2.5,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.25,
["frequency"] = 20,
},
["7"] = {
["scaleY"] = 1,
["fade_out"] = 0.08,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 2.5,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.25,
["frequency"] = 20,
},
["6"] = {
["scaleY"] = 1,
["fade_out"] = 0.08,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 2.5,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.25,
["frequency"] = 20,
},
},
[199804] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 0.88999938964844,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1.05,
["amplitude"] = 1.1699999570847,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.19999998807907,
["cooldown"] = 0.5,
["frequency"] = 23.525676727295,
},
["3"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 0.88999938964844,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1.05,
["amplitude"] = 1.1699999570847,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.19999998807907,
["cooldown"] = 0.5,
["frequency"] = 23.525676727295,
},
["2"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0499999523163,
["scale_upY"] = 1.0499999523163,
["scale_downX"] = 1,
["scale_downY"] = 1,
["duration"] = 0.050000000745058,
["cooldown"] = 0.75,
["enabled"] = true,
},
["5"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 0.88999938964844,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1.05,
["amplitude"] = 1.1699999570847,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.19999998807907,
["cooldown"] = 0.5,
["frequency"] = 23.525676727295,
},
["4"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0499999523163,
["scale_upY"] = 1.0499999523163,
["scale_downX"] = 1,
["scale_downY"] = 1,
["duration"] = 0.050000000745058,
["cooldown"] = 0.75,
["enabled"] = true,
},
["7"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 0.88999938964844,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1.05,
["amplitude"] = 1.1699999570847,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.19999998807907,
["cooldown"] = 0.5,
["frequency"] = 23.525676727295,
},
["6"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0499999523163,
["scale_upY"] = 1.0499999523163,
["scale_downX"] = 1,
["scale_downY"] = 1,
["duration"] = 0.050000000745058,
["cooldown"] = 0.75,
["enabled"] = true,
},
["9"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 0.88999938964844,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1.05,
["amplitude"] = 1.1699999570847,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.19999998807907,
["cooldown"] = 0.5,
["frequency"] = 23.525676727295,
},
["8"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0499999523163,
["scale_upY"] = 1.0499999523163,
["scale_downX"] = 1,
["scale_downY"] = 1,
["duration"] = 0.050000000745058,
["cooldown"] = 0.75,
["enabled"] = true,
},
["12"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0499999523163,
["scale_upY"] = 1.0499999523163,
["scale_downX"] = 1,
["scale_downY"] = 1,
["duration"] = 0.050000000745058,
["cooldown"] = 0.75,
["enabled"] = true,
},
["11"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 0.88999938964844,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1.05,
["amplitude"] = 1.1699999570847,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.19999998807907,
["cooldown"] = 0.5,
["frequency"] = 23.525676727295,
},
["10"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0499999523163,
["scale_upY"] = 1.0499999523163,
["scale_downX"] = 1,
["scale_downY"] = 1,
["duration"] = 0.050000000745058,
["cooldown"] = 0.75,
["enabled"] = true,
},
},
[187708] = {
["1"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
["3"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
["2"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
["5"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
["4"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
["7"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
["6"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
},
[185438] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.19999998807907,
["absolute_sineX"] = false,
["scaleY"] = -1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 6.460000038147,
["fade_in"] = 0,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["3"] = {
["enabled"] = true,
["fade_out"] = 0.19999998807907,
["absolute_sineX"] = false,
["scaleY"] = -1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 6.460000038147,
["fade_in"] = 0,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["2"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0299999713898,
["scale_upY"] = 1.0299999713898,
["scale_downX"] = 0.96999996900559,
["scale_downY"] = 0.96999996900559,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["5"] = {
["enabled"] = true,
["fade_out"] = 0.19999998807907,
["absolute_sineX"] = false,
["scaleY"] = -1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 6.460000038147,
["fade_in"] = 0,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["4"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0299999713898,
["scale_upY"] = 1.0299999713898,
["scale_downX"] = 0.96999996900559,
["scale_downY"] = 0.96999996900559,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["7"] = {
["enabled"] = true,
["fade_out"] = 0.19999998807907,
["absolute_sineX"] = false,
["scaleY"] = -1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 6.460000038147,
["fade_in"] = 0,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["6"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0299999713898,
["scale_upY"] = 1.0299999713898,
["scale_downX"] = 0.96999996900559,
["scale_downY"] = 0.96999996900559,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["9"] = {
["enabled"] = true,
["fade_out"] = 0.19999998807907,
["absolute_sineX"] = false,
["scaleY"] = -1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 6.460000038147,
["fade_in"] = 0,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["8"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0299999713898,
["scale_upY"] = 1.0299999713898,
["scale_downX"] = 0.96999996900559,
["scale_downY"] = 0.96999996900559,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["14"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0299999713898,
["scale_upY"] = 1.0299999713898,
["scale_downX"] = 0.96999996900559,
["scale_downY"] = 0.96999996900559,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["13"] = {
["enabled"] = true,
["fade_out"] = 0.19999998807907,
["absolute_sineX"] = false,
["scaleY"] = -1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 6.460000038147,
["fade_in"] = 0,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["12"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0299999713898,
["scale_upY"] = 1.0299999713898,
["scale_downX"] = 0.96999996900559,
["scale_downY"] = 0.96999996900559,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["11"] = {
["enabled"] = true,
["fade_out"] = 0.19999998807907,
["absolute_sineX"] = false,
["scaleY"] = -1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 6.460000038147,
["fade_in"] = 0,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["10"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0299999713898,
["scale_upY"] = 1.0299999713898,
["scale_downX"] = 0.96999996900559,
["scale_downY"] = 0.96999996900559,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
},
[86040] = {
["1"] = {
["scaleY"] = 1,
["fade_out"] = 0.1,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 2,
["fade_in"] = 0.05,
["duration"] = 0.15,
["cooldown"] = 0.25,
["frequency"] = 20,
},
["3"] = {
["scaleY"] = 1,
["fade_out"] = 0.1,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 2,
["fade_in"] = 0.05,
["duration"] = 0.15,
["cooldown"] = 0.25,
["frequency"] = 20,
},
["2"] = {
["scaleY"] = 1,
["fade_out"] = 0.1,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 2,
["fade_in"] = 0.05,
["duration"] = 0.15,
["cooldown"] = 0.25,
["frequency"] = 20,
},
["5"] = {
["scaleY"] = 1,
["fade_out"] = 0.1,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 2,
["fade_in"] = 0.05,
["duration"] = 0.15,
["cooldown"] = 0.25,
["frequency"] = 20,
},
["4"] = {
["scaleY"] = 1,
["fade_out"] = 0.1,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 2,
["fade_in"] = 0.05,
["duration"] = 0.15,
["cooldown"] = 0.25,
["frequency"] = 20,
},
["7"] = {
["scaleY"] = 1,
["fade_out"] = 0.1,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 2,
["fade_in"] = 0.05,
["duration"] = 0.15,
["cooldown"] = 0.25,
["frequency"] = 20,
},
["6"] = {
["scaleY"] = 1,
["fade_out"] = 0.1,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 2,
["fade_in"] = 0.05,
["duration"] = 0.15,
["cooldown"] = 0.25,
["frequency"] = 20,
},
},
[52174] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.15,
["scale_upY"] = 1.15,
["scale_downX"] = 0.8,
["scale_downY"] = 0.8,
["duration"] = 0.075,
["cooldown"] = 0.75,
["enabled"] = true,
},
["3"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.15,
["scale_upY"] = 1.15,
["scale_downX"] = 0.8,
["scale_downY"] = 0.8,
["duration"] = 0.075,
["cooldown"] = 0.75,
["enabled"] = true,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.2,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.15,
["critical_scale"] = 1,
["amplitude"] = 6,
["fade_in"] = 0.01,
["duration"] = 0.3,
["cooldown"] = 0.5,
["frequency"] = 50,
},
["5"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.15,
["scale_upY"] = 1.15,
["scale_downX"] = 0.8,
["scale_downY"] = 0.8,
["duration"] = 0.075,
["cooldown"] = 0.75,
["enabled"] = true,
},
["4"] = {
["enabled"] = true,
["fade_out"] = 0.2,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.15,
["critical_scale"] = 1,
["amplitude"] = 6,
["fade_in"] = 0.01,
["duration"] = 0.3,
["cooldown"] = 0.5,
["frequency"] = 50,
},
["7"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.15,
["scale_upY"] = 1.15,
["scale_downX"] = 0.8,
["scale_downY"] = 0.8,
["duration"] = 0.075,
["cooldown"] = 0.75,
["enabled"] = true,
},
["6"] = {
["enabled"] = true,
["fade_out"] = 0.2,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.15,
["critical_scale"] = 1,
["amplitude"] = 6,
["fade_in"] = 0.01,
["duration"] = 0.3,
["cooldown"] = 0.5,
["frequency"] = 50,
},
["9"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.15,
["scale_upY"] = 1.15,
["scale_downX"] = 0.8,
["scale_downY"] = 0.8,
["duration"] = 0.075,
["cooldown"] = 0.75,
["enabled"] = true,
},
["8"] = {
["enabled"] = true,
["fade_out"] = 0.2,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.15,
["critical_scale"] = 1,
["amplitude"] = 6,
["fade_in"] = 0.01,
["duration"] = 0.3,
["cooldown"] = 0.5,
["frequency"] = 50,
},
["14"] = {
["enabled"] = true,
["fade_out"] = 0.2,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.15,
["critical_scale"] = 1,
["amplitude"] = 6,
["fade_in"] = 0.01,
["duration"] = 0.3,
["cooldown"] = 0.5,
["frequency"] = 50,
},
["13"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.15,
["scale_upY"] = 1.15,
["scale_downX"] = 0.8,
["scale_downY"] = 0.8,
["duration"] = 0.075,
["cooldown"] = 0.75,
["enabled"] = true,
},
["12"] = {
["enabled"] = true,
["fade_out"] = 0.2,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.15,
["critical_scale"] = 1,
["amplitude"] = 6,
["fade_in"] = 0.01,
["duration"] = 0.3,
["cooldown"] = 0.5,
["frequency"] = 50,
},
["11"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.15,
["scale_upY"] = 1.15,
["scale_downX"] = 0.8,
["scale_downY"] = 0.8,
["duration"] = 0.075,
["cooldown"] = 0.75,
["enabled"] = true,
},
["10"] = {
["enabled"] = true,
["fade_out"] = 0.2,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.15,
["critical_scale"] = 1,
["amplitude"] = 6,
["fade_in"] = 0.01,
["duration"] = 0.3,
["cooldown"] = 0.5,
["frequency"] = 50,
},
},
[2643] = {
["1"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
["3"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
["2"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
["5"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
["4"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
["7"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
["6"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
},
[324540] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 2,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 0.89999997615814,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1499999910593,
["cooldown"] = 0.5,
["frequency"] = 25.650197982788,
},
["3"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 2,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 0.89999997615814,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1499999910593,
["cooldown"] = 0.5,
["frequency"] = 25.650197982788,
},
["2"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0299999713898,
["scale_upY"] = 1.0299999713898,
["scale_downX"] = 0.96999996900558,
["scale_downY"] = 0.96999996900558,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["5"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 2,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 0.89999997615814,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1499999910593,
["cooldown"] = 0.5,
["frequency"] = 25.650197982788,
},
["4"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0299999713898,
["scale_upY"] = 1.0299999713898,
["scale_downX"] = 0.96999996900558,
["scale_downY"] = 0.96999996900558,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["7"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 2,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 0.89999997615814,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1499999910593,
["cooldown"] = 0.5,
["frequency"] = 25.650197982788,
},
["6"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0299999713898,
["scale_upY"] = 1.0299999713898,
["scale_downX"] = 0.96999996900558,
["scale_downY"] = 0.96999996900558,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["9"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 2,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 0.89999997615814,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1499999910593,
["cooldown"] = 0.5,
["frequency"] = 25.650197982788,
},
["8"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0299999713898,
["scale_upY"] = 1.0299999713898,
["scale_downX"] = 0.96999996900558,
["scale_downY"] = 0.96999996900558,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["14"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0299999713898,
["scale_upY"] = 1.0299999713898,
["scale_downX"] = 0.96999996900558,
["scale_downY"] = 0.96999996900558,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["13"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 2,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 0.89999997615814,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1499999910593,
["cooldown"] = 0.5,
["frequency"] = 25.650197982788,
},
["12"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0299999713898,
["scale_upY"] = 1.0299999713898,
["scale_downX"] = 0.96999996900558,
["scale_downY"] = 0.96999996900558,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["11"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 2,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 0.89999997615814,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1499999910593,
["cooldown"] = 0.5,
["frequency"] = 25.650197982788,
},
["10"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0299999713898,
["scale_upY"] = 1.0299999713898,
["scale_downX"] = 0.96999996900558,
["scale_downY"] = 0.96999996900558,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
},
[53595] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.03,
["scale_upY"] = 1.03,
["scale_downX"] = 0.97,
["scale_downY"] = 0.97,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["3"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.03,
["scale_upY"] = 1.03,
["scale_downX"] = 0.97,
["scale_downY"] = 0.97,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["critical_scale"] = 1,
["amplitude"] = 3,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["5"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.03,
["scale_upY"] = 1.03,
["scale_downX"] = 0.97,
["scale_downY"] = 0.97,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["4"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["critical_scale"] = 1,
["amplitude"] = 3,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["7"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.03,
["scale_upY"] = 1.03,
["scale_downX"] = 0.97,
["scale_downY"] = 0.97,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["6"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["critical_scale"] = 1,
["amplitude"] = 3,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["9"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.03,
["scale_upY"] = 1.03,
["scale_downX"] = 0.97,
["scale_downY"] = 0.97,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["8"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["critical_scale"] = 1,
["amplitude"] = 3,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["12"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["critical_scale"] = 1,
["amplitude"] = 3,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["11"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.03,
["scale_upY"] = 1.03,
["scale_downX"] = 0.97,
["scale_downY"] = 0.97,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["10"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["critical_scale"] = 1,
["amplitude"] = 3,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
},
[108853] = {
["1"] = {
["scaleY"] = 1,
["fade_out"] = 0.02,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["3"] = {
["scaleY"] = 1,
["fade_out"] = 0.02,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["2"] = {
["scaleY"] = 1,
["fade_out"] = 0.02,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["5"] = {
["scaleY"] = 1,
["fade_out"] = 0.02,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["4"] = {
["scaleY"] = 1,
["fade_out"] = 0.02,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["7"] = {
["scaleY"] = 1,
["fade_out"] = 0.02,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["6"] = {
["scaleY"] = 1,
["fade_out"] = 0.02,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.5,
["frequency"] = 25,
},
},
[204157] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1.05,
["amplitude"] = 6,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["3"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1.05,
["amplitude"] = 6,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["2"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.03,
["scale_upY"] = 1.03,
["scale_downX"] = 0.97,
["scale_downY"] = 0.97,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["5"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1.05,
["amplitude"] = 6,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["4"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.03,
["scale_upY"] = 1.03,
["scale_downX"] = 0.97,
["scale_downY"] = 0.97,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["7"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1.05,
["amplitude"] = 6,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["6"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.03,
["scale_upY"] = 1.03,
["scale_downX"] = 0.97,
["scale_downY"] = 0.97,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["9"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1.05,
["amplitude"] = 6,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["8"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.03,
["scale_upY"] = 1.03,
["scale_downX"] = 0.97,
["scale_downY"] = 0.97,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["14"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.03,
["scale_upY"] = 1.03,
["scale_downX"] = 0.97,
["scale_downY"] = 0.97,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["13"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1.05,
["amplitude"] = 6,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["12"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.03,
["scale_upY"] = 1.03,
["scale_downX"] = 0.97,
["scale_downY"] = 0.97,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["11"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1.05,
["amplitude"] = 6,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["10"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.03,
["scale_upY"] = 1.03,
["scale_downX"] = 0.97,
["scale_downY"] = 0.97,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
},
[228478] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.099999994039536,
["absolute_sineX"] = true,
["scaleY"] = 0.79999923706055,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.20000076293945,
["critical_scale"] = 1.05,
["amplitude"] = 2.5,
["fade_in"] = 0,
["duration"] = 0.099999994039535,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["3"] = {
["enabled"] = true,
["fade_out"] = 0.099999994039536,
["absolute_sineX"] = true,
["scaleY"] = 0.79999923706055,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.20000076293945,
["critical_scale"] = 1.05,
["amplitude"] = 2.5,
["fade_in"] = 0,
["duration"] = 0.099999994039535,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["2"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0299999713898,
["scale_upY"] = 1.0299999713898,
["scale_downX"] = 0.96999996900559,
["scale_downY"] = 0.96999996900559,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["5"] = {
["enabled"] = true,
["fade_out"] = 0.099999994039536,
["absolute_sineX"] = true,
["scaleY"] = 0.79999923706055,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.20000076293945,
["critical_scale"] = 1.05,
["amplitude"] = 2.5,
["fade_in"] = 0,
["duration"] = 0.099999994039535,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["4"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0299999713898,
["scale_upY"] = 1.0299999713898,
["scale_downX"] = 0.96999996900559,
["scale_downY"] = 0.96999996900559,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["7"] = {
["enabled"] = true,
["fade_out"] = 0.099999994039536,
["absolute_sineX"] = true,
["scaleY"] = 0.79999923706055,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.20000076293945,
["critical_scale"] = 1.05,
["amplitude"] = 2.5,
["fade_in"] = 0,
["duration"] = 0.099999994039535,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["6"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0299999713898,
["scale_upY"] = 1.0299999713898,
["scale_downX"] = 0.96999996900559,
["scale_downY"] = 0.96999996900559,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["9"] = {
["enabled"] = true,
["fade_out"] = 0.099999994039536,
["absolute_sineX"] = true,
["scaleY"] = 0.79999923706055,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.20000076293945,
["critical_scale"] = 1.05,
["amplitude"] = 2.5,
["fade_in"] = 0,
["duration"] = 0.099999994039535,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["8"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0299999713898,
["scale_upY"] = 1.0299999713898,
["scale_downX"] = 0.96999996900559,
["scale_downY"] = 0.96999996900559,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["14"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0299999713898,
["scale_upY"] = 1.0299999713898,
["scale_downX"] = 0.96999996900559,
["scale_downY"] = 0.96999996900559,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["13"] = {
["enabled"] = true,
["fade_out"] = 0.099999994039536,
["absolute_sineX"] = true,
["scaleY"] = 0.79999923706055,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.20000076293945,
["critical_scale"] = 1.05,
["amplitude"] = 2.5,
["fade_in"] = 0,
["duration"] = 0.099999994039535,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["12"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0299999713898,
["scale_upY"] = 1.0299999713898,
["scale_downX"] = 0.96999996900559,
["scale_downY"] = 0.96999996900559,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["11"] = {
["enabled"] = true,
["fade_out"] = 0.099999994039536,
["absolute_sineX"] = true,
["scaleY"] = 0.79999923706055,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.20000076293945,
["critical_scale"] = 1.05,
["amplitude"] = 2.5,
["fade_in"] = 0,
["duration"] = 0.099999994039535,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["10"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0299999713898,
["scale_upY"] = 1.0299999713898,
["scale_downX"] = 0.96999996900559,
["scale_downY"] = 0.96999996900559,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
},
[148135] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1.05,
["amplitude"] = 1.75,
["fade_in"] = 0.01,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 60.874122619629,
},
["3"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1.05,
["amplitude"] = 1.75,
["fade_in"] = 0.01,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 60.874122619629,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1.05,
["amplitude"] = 1.75,
["fade_in"] = 0.01,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 60.874122619629,
},
["5"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1.05,
["amplitude"] = 1.75,
["fade_in"] = 0.01,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 60.874122619629,
},
["4"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1.05,
["amplitude"] = 1.75,
["fade_in"] = 0.01,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 60.874122619629,
},
["7"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1.05,
["amplitude"] = 1.75,
["fade_in"] = 0.01,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 60.874122619629,
},
["6"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1.05,
["amplitude"] = 1.75,
["fade_in"] = 0.01,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 60.874122619629,
},
},
[199547] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.59999847412109,
["critical_scale"] = 1.05,
["amplitude"] = 3,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["3"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.59999847412109,
["critical_scale"] = 1.05,
["amplitude"] = 3,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["2"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.039999961853,
["scale_upY"] = 1.039999961853,
["scale_downX"] = 0.96999996900558,
["scale_downY"] = 0.96999996900558,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["5"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.59999847412109,
["critical_scale"] = 1.05,
["amplitude"] = 3,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["4"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.039999961853,
["scale_upY"] = 1.039999961853,
["scale_downX"] = 0.96999996900558,
["scale_downY"] = 0.96999996900558,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["7"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.59999847412109,
["critical_scale"] = 1.05,
["amplitude"] = 3,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["6"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.039999961853,
["scale_upY"] = 1.039999961853,
["scale_downX"] = 0.96999996900558,
["scale_downY"] = 0.96999996900558,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["9"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.59999847412109,
["critical_scale"] = 1.05,
["amplitude"] = 3,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["8"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.039999961853,
["scale_upY"] = 1.039999961853,
["scale_downX"] = 0.96999996900558,
["scale_downY"] = 0.96999996900558,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["14"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.039999961853,
["scale_upY"] = 1.039999961853,
["scale_downX"] = 0.96999996900558,
["scale_downY"] = 0.96999996900558,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["13"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.59999847412109,
["critical_scale"] = 1.05,
["amplitude"] = 3,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["12"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.039999961853,
["scale_upY"] = 1.039999961853,
["scale_downX"] = 0.96999996900558,
["scale_downY"] = 0.96999996900558,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["11"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.59999847412109,
["critical_scale"] = 1.05,
["amplitude"] = 3,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["10"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.039999961853,
["scale_upY"] = 1.039999961853,
["scale_downX"] = 0.96999996900558,
["scale_downY"] = 0.96999996900558,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
},
[117418] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.1499999910593,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 0.1499999910593,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1799999922514,
["cooldown"] = 0.5,
["frequency"] = 116.00999450684,
},
["3"] = {
["enabled"] = true,
["fade_out"] = 0.1499999910593,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 0.1499999910593,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1799999922514,
["cooldown"] = 0.5,
["frequency"] = 116.00999450684,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.1499999910593,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 0.1499999910593,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1799999922514,
["cooldown"] = 0.5,
["frequency"] = 116.00999450684,
},
["5"] = {
["enabled"] = true,
["fade_out"] = 0.1499999910593,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 0.1499999910593,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1799999922514,
["cooldown"] = 0.5,
["frequency"] = 116.00999450684,
},
["4"] = {
["enabled"] = true,
["fade_out"] = 0.1499999910593,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 0.1499999910593,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1799999922514,
["cooldown"] = 0.5,
["frequency"] = 116.00999450684,
},
["7"] = {
["enabled"] = true,
["fade_out"] = 0.1499999910593,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 0.1499999910593,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1799999922514,
["cooldown"] = 0.5,
["frequency"] = 116.00999450684,
},
["6"] = {
["enabled"] = true,
["fade_out"] = 0.1499999910593,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 0.1499999910593,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1799999922514,
["cooldown"] = 0.5,
["frequency"] = 116.00999450684,
},
},
[222024] = {
["1"] = {
["enabled"] = true,
["scale_upX"] = 1,
["duration"] = 0.050000000745058,
["scale_downX"] = 1,
["animation_type"] = "scale",
["critical_scale"] = 1,
["scale_upY"] = 1.1000000238419,
["cooldown"] = 0.75,
["scale_downY"] = 0.89999997615814,
},
["3"] = {
["enabled"] = true,
["scale_upX"] = 1,
["duration"] = 0.050000000745058,
["scale_downX"] = 1,
["animation_type"] = "scale",
["critical_scale"] = 1,
["scale_upY"] = 1.1000000238419,
["cooldown"] = 0.75,
["scale_downY"] = 0.89999997615814,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.019999999552965,
["absolute_sineX"] = true,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["critical_scale"] = 1,
["amplitude"] = 1.7999999523163,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 11.14999961853,
},
["5"] = {
["enabled"] = true,
["scale_upX"] = 1,
["duration"] = 0.050000000745058,
["scale_downX"] = 1,
["animation_type"] = "scale",
["critical_scale"] = 1,
["scale_upY"] = 1.1000000238419,
["cooldown"] = 0.75,
["scale_downY"] = 0.89999997615814,
},
["4"] = {
["enabled"] = true,
["fade_out"] = 0.019999999552965,
["absolute_sineX"] = true,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["critical_scale"] = 1,
["amplitude"] = 1.7999999523163,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 11.14999961853,
},
["7"] = {
["enabled"] = true,
["scale_upX"] = 1,
["duration"] = 0.050000000745058,
["scale_downX"] = 1,
["animation_type"] = "scale",
["critical_scale"] = 1,
["scale_upY"] = 1.1000000238419,
["cooldown"] = 0.75,
["scale_downY"] = 0.89999997615814,
},
["6"] = {
["enabled"] = true,
["fade_out"] = 0.019999999552965,
["absolute_sineX"] = true,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["critical_scale"] = 1,
["amplitude"] = 1.7999999523163,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 11.14999961853,
},
["9"] = {
["enabled"] = true,
["scale_upX"] = 1,
["duration"] = 0.050000000745058,
["scale_downX"] = 1,
["animation_type"] = "scale",
["critical_scale"] = 1,
["scale_upY"] = 1.1000000238419,
["cooldown"] = 0.75,
["scale_downY"] = 0.89999997615814,
},
["8"] = {
["enabled"] = true,
["fade_out"] = 0.019999999552965,
["absolute_sineX"] = true,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["critical_scale"] = 1,
["amplitude"] = 1.7999999523163,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 11.14999961853,
},
["14"] = {
["enabled"] = true,
["fade_out"] = 0.019999999552965,
["absolute_sineX"] = true,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["critical_scale"] = 1,
["amplitude"] = 1.7999999523163,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 11.14999961853,
},
["13"] = {
["enabled"] = true,
["scale_upX"] = 1,
["duration"] = 0.050000000745058,
["scale_downX"] = 1,
["animation_type"] = "scale",
["critical_scale"] = 1,
["scale_upY"] = 1.1000000238419,
["cooldown"] = 0.75,
["scale_downY"] = 0.89999997615814,
},
["12"] = {
["enabled"] = true,
["fade_out"] = 0.019999999552965,
["absolute_sineX"] = true,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["critical_scale"] = 1,
["amplitude"] = 1.7999999523163,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 11.14999961853,
},
["11"] = {
["enabled"] = true,
["scale_upX"] = 1,
["duration"] = 0.050000000745058,
["scale_downX"] = 1,
["animation_type"] = "scale",
["critical_scale"] = 1,
["scale_upY"] = 1.1000000238419,
["cooldown"] = 0.75,
["scale_downY"] = 0.89999997615814,
},
["10"] = {
["enabled"] = true,
["fade_out"] = 0.019999999552965,
["absolute_sineX"] = true,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["critical_scale"] = 1,
["amplitude"] = 1.7999999523163,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 11.14999961853,
},
},
[155166] = {
["1"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
["3"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
["2"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
["5"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
["4"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
["7"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
["6"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
},
[8042] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.05,
["scale_upY"] = 1.05,
["scale_downX"] = 0.95,
["scale_downY"] = 0.95,
["duration"] = 0.060000000745058,
["cooldown"] = 0.75,
["enabled"] = true,
},
["3"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.05,
["scale_upY"] = 1.05,
["scale_downX"] = 0.95,
["scale_downY"] = 0.95,
["duration"] = 0.060000000745058,
["cooldown"] = 0.75,
["enabled"] = true,
},
["2"] = {
["scaleY"] = -1,
["fade_out"] = 0.05,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["enabled"] = true,
["amplitude"] = 7.5,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.06,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
["5"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.05,
["scale_upY"] = 1.05,
["scale_downX"] = 0.95,
["scale_downY"] = 0.95,
["duration"] = 0.060000000745058,
["cooldown"] = 0.75,
["enabled"] = true,
},
["4"] = {
["scaleY"] = -1,
["fade_out"] = 0.05,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["enabled"] = true,
["amplitude"] = 7.5,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.06,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
["7"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.05,
["scale_upY"] = 1.05,
["scale_downX"] = 0.95,
["scale_downY"] = 0.95,
["duration"] = 0.060000000745058,
["cooldown"] = 0.75,
["enabled"] = true,
},
["6"] = {
["scaleY"] = -1,
["fade_out"] = 0.05,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["enabled"] = true,
["amplitude"] = 7.5,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.06,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
["9"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.05,
["scale_upY"] = 1.05,
["scale_downX"] = 0.95,
["scale_downY"] = 0.95,
["duration"] = 0.060000000745058,
["cooldown"] = 0.75,
["enabled"] = true,
},
["8"] = {
["scaleY"] = -1,
["fade_out"] = 0.05,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["enabled"] = true,
["amplitude"] = 7.5,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.06,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
["14"] = {
["scaleY"] = -1,
["fade_out"] = 0.05,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["enabled"] = true,
["amplitude"] = 7.5,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.06,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
["13"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.05,
["scale_upY"] = 1.05,
["scale_downX"] = 0.95,
["scale_downY"] = 0.95,
["duration"] = 0.060000000745058,
["cooldown"] = 0.75,
["enabled"] = true,
},
["12"] = {
["scaleY"] = -1,
["fade_out"] = 0.05,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["enabled"] = true,
["amplitude"] = 7.5,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.06,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
["11"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.05,
["scale_upY"] = 1.05,
["scale_downX"] = 0.95,
["scale_downY"] = 0.95,
["duration"] = 0.060000000745058,
["cooldown"] = 0.75,
["enabled"] = true,
},
["10"] = {
["scaleY"] = -1,
["fade_out"] = 0.05,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["enabled"] = true,
["amplitude"] = 7.5,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.06,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
},
},
["indicator_scale"] = 0.99999994039536,
["border_color"] = {
nil,
nil,
nil,
1,
},
["focus_color"] = {
nil,
nil,
nil,
0.50234389305115,
},
["npc_colors"] = {
[99358] = {
true,
false,
"fuchsia",
},
[198716] = {
true,
false,
"blue",
},
[196798] = {
true,
false,
"deepskyblue",
},
[186696] = {
true,
false,
"fuchsia",
},
[194241] = {
true,
false,
"blue",
},
[164702] = {
true,
false,
"fuchsia",
},
[231325] = {
true,
false,
"mediumpurple",
},
[196671] = {
true,
false,
"mediumpurple",
},
[211121] = {
true,
false,
"mediumpurple",
},
[115407] = {
true,
false,
"blue",
},
[221863] = {
true,
false,
"deepskyblue",
},
[184140] = {
true,
false,
"fuchsia",
},
[99359] = {
true,
false,
"mediumpurple",
},
[168156] = {
true,
false,
"fuchsia",
},
[165471] = {
true,
false,
"blue",
},
[95779] = {
true,
false,
"mediumpurple",
},
[129602] = {
true,
false,
"mediumpurple",
},
[228514] = {
true,
false,
"deepskyblue",
},
[98081] = {
true,
false,
"fuchsia",
},
[120651] = {
true,
false,
"gold",
},
[212786] = {
true,
false,
"mediumpurple",
},
[197697] = {
true,
false,
"fuchsia",
},
[212403] = {
true,
false,
"blue",
},
[164578] = {
true,
false,
"mediumpurple",
},
[197698] = {
true,
false,
"fuchsia",
},
[131587] = {
true,
false,
"mediumpurple",
},
[208440] = {
true,
false,
"mediumpurple",
},
[164707] = {
true,
false,
"mediumpurple",
},
[196548] = {
true,
false,
"deepskyblue",
},
[135552] = {
true,
false,
"blue",
},
[218671] = {
true,
false,
"blue",
},
[130435] = {
true,
false,
"mediumpurple",
},
[186191] = {
true,
false,
"blue",
},
[135169] = {
true,
false,
"fuchsia",
},
[206140] = {
true,
false,
"fuchsia",
},
[83761] = {
true,
false,
"mediumpurple",
},
[98275] = {
true,
false,
"blue",
},
[221102] = {
true,
false,
"deepskyblue",
},
[127111] = {
true,
false,
"blue",
},
[40634] = {
true,
false,
"deepskyblue",
},
[200387] = {
true,
false,
"mediumpurple",
},
[221103] = {
true,
false,
"mediumpurple",
},
[199748] = {
true,
false,
"deepskyblue",
},
[165222] = {
true,
false,
"blue",
},
[198214] = {
true,
false,
"fuchsia",
},
[184020] = {
true,
false,
"mediumpurple",
},
[220976] = {
true,
false,
"fuchsia",
},
[223150] = {
true,
false,
"deepskyblue",
},
[199749] = {
true,
false,
"mediumpurple",
},
[168420] = {
true,
false,
"blue",
},
[165479] = {
true,
false,
"mediumpurple",
},
[212793] = {
true,
false,
"fuchsia",
},
[178139] = {
true,
false,
"blue",
},
[83763] = {
true,
false,
"deepskyblue",
},
[184022] = {
true,
false,
"deepskyblue",
},
[220978] = {
true,
false,
"fuchsia",
},
[75899] = {
true,
false,
"fuchsia",
},
[210109] = {
true,
false,
"mediumpurple",
},
[212411] = {
true,
false,
"mediumpurple",
},
[184023] = {
true,
false,
"blue",
},
[178141] = {
true,
false,
"fuchsia",
},
[211261] = {
true,
false,
"fuchsia",
},
[196044] = {
true,
false,
"fuchsia",
},
[231977] = {
true,
false,
"blue",
},
[160495] = {
true,
false,
"deepskyblue",
},
[188244] = {
true,
false,
"mediumpurple",
},
[178142] = {
true,
false,
"deepskyblue",
},
[157810] = {
true,
false,
"deepskyblue",
},
[208193] = {
true,
false,
"blue",
},
[196045] = {
true,
false,
"deepskyblue",
},
[201288] = {
true,
false,
"fuchsia",
},
[211263] = {
true,
false,
"fuchsia",
},
[168425] = {
true,
false,
"fuchsia",
},
[208450] = {
true,
false,
"mediumpurple",
},
[83893] = {
true,
false,
"blue",
},
[128969] = {
true,
false,
"fuchsia",
},
[99366] = {
true,
false,
"blue",
},
[227632] = {
true,
false,
"fuchsia",
},
[220599] = {
true,
false,
"deepskyblue",
},
[217658] = {
true,
false,
"fuchsia",
},
[177889] = {
true,
false,
"fuchsia",
},
[187224] = {
true,
false,
"blue",
},
[211904] = {
true,
false,
"fuchsia",
},
[134284] = {
true,
false,
"deepskyblue",
},
[194897] = {
true,
false,
"fuchsia",
},
[217531] = {
true,
false,
"fuchsia",
},
[167532] = {
true,
false,
"mediumpurple",
},
[83894] = {
true,
false,
"mediumpurple",
},
[98280] = {
true,
false,
"deepskyblue",
},
[205384] = {
true,
false,
"deepskyblue",
},
[177891] = {
true,
false,
"mediumpurple",
},
[172265] = {
true,
false,
"deepskyblue",
},
[227635] = {
true,
false,
"deepskyblue",
},
[217533] = {
true,
false,
"fuchsia",
},
[220730] = {
true,
false,
"mediumpurple",
},
[177892] = {
true,
false,
"blue",
},
[220986] = {
true,
false,
"fuchsia",
},
[165872] = {
true,
false,
"fuchsia",
},
[214209] = {
true,
false,
"deepskyblue",
},
[131858] = {
true,
false,
"mediumpurple",
},
[168942] = {
true,
false,
"blue",
},
[180323] = {
true,
false,
"fuchsia",
},
[207177] = {
true,
false,
"mediumpurple",
},
[127757] = {
true,
false,
"mediumpurple",
},
[40925] = {
true,
false,
"mediumpurple",
},
[220988] = {
true,
false,
"fuchsia",
},
[190426] = {
true,
false,
"fuchsia",
},
[189531] = {
true,
false,
"blue",
},
[162038] = {
true,
false,
"mediumpurple",
},
[98538] = {
true,
false,
"fuchsia",
},
[150146] = {
true,
false,
"fuchsia",
},
[137103] = {
true,
false,
"fuchsia",
},
[130635] = {
true,
false,
"deepskyblue",
},
[162039] = {
true,
false,
"deepskyblue",
},
[97068] = {
true,
false,
"mediumpurple",
},
[167538] = {
true,
false,
"mediumpurple",
},
[75713] = {
true,
false,
"deepskyblue",
},
[186208] = {
true,
false,
"mediumpurple",
},
[162040] = {
true,
false,
"fuchsia",
},
[195927] = {
true,
false,
"mediumpurple",
},
[199124] = {
true,
false,
"deepskyblue",
},
[208459] = {
true,
false,
"deepskyblue",
},
[52019] = {
true,
false,
"fuchsia",
},
[83578] = {
true,
false,
"mediumpurple",
},
[198869] = {
true,
false,
"deepskyblue",
},
[171376] = {
true,
false,
"blue",
},
[97197] = {
true,
false,
"deepskyblue",
},
[203857] = {
true,
false,
"deepskyblue",
},
[190686] = {
true,
false,
"blue",
},
[195929] = {
true,
false,
"mediumpurple",
},
[221760] = {
true,
false,
"blue",
},
[231223] = {
true,
false,
"deepskyblue",
},
[75459] = {
true,
false,
"deepskyblue",
},
[195930] = {
true,
false,
"mediumpurple",
},
[170483] = {
true,
false,
"fuchsia",
},
[39392] = {
true,
false,
"mediumpurple",
},
[193373] = {
true,
false,
"fuchsia",
},
[190688] = {
true,
false,
"mediumpurple",
},
[168310] = {
true,
false,
"fuchsia",
},
[133912] = {
true,
false,
"blue",
},
[228540] = {
true,
false,
"deepskyblue",
},
[208208] = {
true,
false,
"mediumpurple",
},
[75652] = {
true,
false,
"fuchsia",
},
[197595] = {
true,
false,
"mediumpurple",
},
[203861] = {
true,
false,
"mediumpurple",
},
[190690] = {
true,
false,
"mediumpurple",
},
[179821] = {
true,
false,
"fuchsia",
},
[83389] = {
true,
false,
"mediumpurple",
},
[157571] = {
true,
false,
"deepskyblue",
},
[129552] = {
true,
false,
"mediumpurple",
},
[154758] = {
true,
false,
"fuchsia",
},
[162047] = {
true,
false,
"mediumpurple",
},
[118491] = {
true,
false,
"deepskyblue",
},
[115486] = {
true,
false,
"mediumpurple",
},
[220742] = {
true,
false,
"fuchsia",
},
[224962] = {
true,
false,
"deepskyblue",
},
[157572] = {
true,
false,
"deepskyblue",
},
[164861] = {
true,
false,
"blue",
},
[114783] = {
true,
false,
"deepskyblue",
},
[105704] = {
true,
false,
"blue",
},
[166396] = {
true,
false,
"blue",
},
[166524] = {
true,
false,
"deepskyblue",
},
[83390] = {
true,
false,
"deepskyblue",
},
[187240] = {
true,
false,
"mediumpurple",
},
[129553] = {
true,
false,
"fuchsia",
},
[174197] = {
true,
false,
"deepskyblue",
},
[202969] = {
true,
false,
"fuchsia",
},
[214350] = {
true,
false,
"deepskyblue",
},
[220616] = {
true,
false,
"mediumpurple",
},
[77700] = {
true,
false,
"deepskyblue",
},
[84989] = {
true,
false,
"deepskyblue",
},
[196576] = {
true,
false,
"blue",
},
[180336] = {
true,
false,
"deepskyblue",
},
[170234] = {
true,
false,
"fuchsia",
},
[170490] = {
true,
false,
"deepskyblue",
},
[168572] = {
true,
false,
"blue",
},
[175861] = {
true,
false,
"fuchsia",
},
[184301] = {
true,
false,
"deepskyblue",
},
[202971] = {
true,
false,
"deepskyblue",
},
[225605] = {
true,
false,
"deepskyblue",
},
[115488] = {
true,
false,
"blue",
},
[91000] = {
true,
false,
"mediumpurple",
},
[173655] = {
true,
false,
"mediumpurple",
},
[84990] = {
true,
false,
"blue",
},
[81985] = {
true,
false,
"deepskyblue",
},
[234557] = {
true,
false,
"fuchsia",
},
[100527] = {
true,
false,
"deepskyblue",
},
[197985] = {
true,
false,
"deepskyblue",
},
[80816] = {
true,
false,
"deepskyblue",
},
[150160] = {
true,
false,
"mediumpurple",
},
[246285] = {
true,
false,
"mediumpurple",
},
[199368] = {
true,
false,
"fuchsia",
},
[178165] = {
true,
false,
"mediumpurple",
},
[150253] = {
true,
false,
"mediumpurple",
},
[225479] = {
true,
false,
"blue",
},
[240952] = {
true,
false,
"yellow",
},
[44404] = {
true,
false,
"deepskyblue",
},
[197219] = {
true,
false,
"mediumpurple",
},
[151657] = {
true,
false,
"deepskyblue",
},
[175992] = {
true,
false,
"fuchsia",
},
[213932] = {
true,
false,
"mediumpurple",
},
[122970] = {
true,
false,
"fuchsia",
},
[205623] = {
true,
false,
"mediumpurple",
},
[131492] = {
true,
false,
"blue",
},
[203230] = {
true,
false,
"blue",
},
[185032] = {
true,
false,
"mediumpurple",
},
[205622] = {
true,
false,
"mediumpurple",
},
[165763] = {
true,
false,
"deepskyblue",
},
[207796] = {
true,
false,
"fuchsia",
},
[135329] = {
true,
false,
"fuchsia",
},
[81603] = {
true,
false,
"mediumpurple",
},
[166275] = {
true,
false,
"deepskyblue",
},
[95842] = {
true,
false,
"deepskyblue",
},
[196198] = {
true,
false,
"blue",
},
[174843] = {
true,
false,
"mediumpurple",
},
[198500] = {
true,
false,
"deepskyblue",
},
[183497] = {
true,
false,
"blue",
},
[122971] = {
true,
false,
"mediumpurple",
},
[170850] = {
true,
false,
"fuchsia",
},
[166276] = {
true,
false,
"mediumpurple",
},
[122969] = {
true,
false,
"deepskyblue",
},
[168578] = {
true,
false,
"deepskyblue",
},
[150292] = {
true,
false,
"fuchsia",
},
[218961] = {
true,
false,
"fuchsia",
},
[216621] = {
true,
false,
"fuchsia",
},
[45917] = {
true,
false,
"mediumpurple",
},
[162057] = {
true,
false,
"mediumpurple",
},
[211289] = {
true,
false,
"fuchsia",
},
[198501] = {
true,
false,
"deepskyblue",
},
[150165] = {
true,
false,
"deepskyblue",
},
[205363] = {
true,
false,
"deepskyblue",
},
[198502] = {
true,
false,
"deepskyblue",
},
[190174] = {
true,
false,
"fuchsia",
},
[122972] = {
true,
false,
"deepskyblue",
},
[205152] = {
true,
false,
"mediumpurple",
},
[207198] = {
true,
false,
"deepskyblue",
},
[164461] = {
true,
false,
"deepskyblue",
},
[223822] = {
true,
false,
"fuchsia",
},
[99891] = {
true,
false,
"mediumpurple",
},
[198503] = {
true,
false,
"deepskyblue",
},
[178171] = {
true,
false,
"fuchsia",
},
[189265] = {
true,
false,
"blue",
},
[218324] = {
true,
false,
"fuchsia",
},
[211291] = {
true,
false,
"fuchsia",
},
[205618] = {
true,
false,
"mediumpurple",
},
[196202] = {
true,
false,
"blue",
},
[231496] = {
true,
false,
"blue",
},
[212826] = {
true,
false,
"fuchsia",
},
[164873] = {
true,
false,
"fuchsia",
},
[122973] = {
true,
false,
"blue",
},
[180474] = {
true,
false,
"fuchsia",
},
[183671] = {
true,
false,
"fuchsia",
},
[236995] = {
true,
false,
"mediumpurple",
},
[150168] = {
true,
false,
"fuchsia",
},
[173016] = {
true,
false,
"deepskyblue",
},
[212827] = {
true,
false,
"fuchsia",
},
[129559] = {
true,
false,
"fuchsia",
},
[214066] = {
true,
false,
"blue",
},
[164451] = {
true,
false,
"mediumpurple",
},
[186741] = {
true,
false,
"deepskyblue",
},
[164363] = {
true,
false,
"blue",
},
[150169] = {
true,
false,
"blue",
},
[183033] = {
true,
false,
"mediumpurple",
},
[175576] = {
true,
false,
"yellow",
},
[154744] = {
true,
false,
"fuchsia",
},
[174210] = {
true,
false,
"deepskyblue",
},
[100532] = {
true,
false,
"fuchsia",
},
[207202] = {
true,
false,
"deepskyblue",
},
[182778] = {
true,
false,
"fuchsia",
},
[179837] = {
true,
false,
"mediumpurple",
},
[229069] = {
true,
false,
"deepskyblue",
},
[126918] = {
true,
false,
"blue",
},
[212673] = {
true,
false,
"fuchsia",
},
[237981] = {
true,
false,
"deepskyblue",
},
[163086] = {
true,
false,
"mediumpurple",
},
[227513] = {
true,
false,
"deepskyblue",
},
[126919] = {
true,
false,
"deepskyblue",
},
[91006] = {
true,
false,
"deepskyblue",
},
[178392] = {
true,
false,
"fuchsia",
},
[180473] = {
true,
false,
"blue",
},
[163458] = {
true,
false,
"deepskyblue",
},
[173189] = {
true,
false,
"deepskyblue",
},
[101991] = {
true,
false,
"blue",
},
[205158] = {
true,
false,
"fuchsia",
},
[191847] = {
true,
false,
"deepskyblue",
},
[129369] = {
true,
false,
"fuchsia",
},
[97720] = {
true,
false,
"fuchsia",
},
[212831] = {
true,
false,
"fuchsia",
},
[229537] = {
true,
false,
"yellow",
},
[173190] = {
true,
false,
"deepskyblue",
},
[115020] = {
true,
false,
"mediumpurple",
},
[213343] = {
true,
false,
"mediumpurple",
},
[196203] = {
true,
false,
"deepskyblue",
},
[164737] = {
true,
false,
"fuchsia",
},
[231978] = {
true,
false,
"deepskyblue",
},
[187897] = {
true,
false,
"fuchsia",
},
[222167] = {
true,
false,
"deepskyblue",
},
[129370] = {
true,
false,
"deepskyblue",
},
[153882] = {
true,
false,
"deepskyblue",
},
[102232] = {
true,
false,
"blue",
},
[234955] = {
true,
false,
"fuchsia",
},
[179841] = {
true,
false,
"deepskyblue",
},
[151325] = {
true,
false,
"fuchsia",
},
[198326] = {
true,
false,
"mediumpurple",
},
[223773] = {
true,
false,
"blue",
},
[223774] = {
true,
false,
"blue",
},
[213217] = {
true,
false,
"deepskyblue",
},
[40357] = {
true,
false,
"fuchsia",
},
[179842] = {
true,
false,
"fuchsia",
},
[188026] = {
true,
false,
"fuchsia",
},
[168717] = {
true,
false,
"deepskyblue",
},
[144293] = {
true,
false,
"mediumpurple",
},
[241803] = {
true,
false,
"deepskyblue",
},
[183423] = {
true,
false,
"deepskyblue",
},
[165137] = {
true,
false,
"mediumpurple",
},
[187771] = {
true,
false,
"blue",
},
[234957] = {
true,
false,
"deepskyblue",
},
[245255] = {
true,
false,
"mediumpurple",
},
[168718] = {
true,
false,
"blue",
},
[144294] = {
true,
false,
"deepskyblue",
},
[184319] = {
true,
false,
"blue",
},
[165010] = {
true,
false,
"mediumpurple",
},
[200943] = {
true,
false,
"mediumpurple",
},
[129372] = {
true,
false,
"blue",
},
[212775] = {
true,
false,
"deepskyblue",
},
[168658] = {
true,
false,
"fuchsia",
},
[191225] = {
true,
false,
"mediumpurple",
},
[144295] = {
true,
false,
"blue",
},
[242631] = {
true,
false,
"fuchsia",
},
[183425] = {
true,
false,
"blue",
},
[115019] = {
true,
false,
"deepskyblue",
},
[105715] = {
true,
false,
"blue",
},
[212453] = {
true,
false,
"deepskyblue",
},
[40166] = {
true,
false,
"mediumpurple",
},
[200137] = {
true,
false,
"deepskyblue",
},
[144296] = {
true,
false,
"mediumpurple",
},
[205804] = {
true,
false,
"mediumpurple",
},
[179334] = {
true,
false,
"fuchsia",
},
[194895] = {
true,
false,
"deepskyblue",
},
[176521] = {
true,
false,
"blue",
},
[150297] = {
true,
false,
"blue",
},
[228015] = {
true,
false,
"mediumpurple",
},
[83892] = {
true,
false,
"deepskyblue",
},
[215756] = {
true,
false,
"fuchsia",
},
[224219] = {
true,
false,
"deepskyblue",
},
[190588] = {
true,
false,
"mediumpurple",
},
[191739] = {
true,
false,
"mediumpurple",
},
[144298] = {
true,
false,
"fuchsia",
},
[224731] = {
true,
false,
"mediumpurple",
},
[179847] = {
true,
false,
"fuchsia",
},
[152033] = {
true,
false,
"fuchsia",
},
[211816] = {
true,
false,
"fuchsia",
},
[129788] = {
true,
false,
"deepskyblue",
},
[133685] = {
true,
false,
"fuchsia",
},
[176395] = {
true,
false,
"blue",
},
[176523] = {
true,
false,
"mediumpurple",
},
[234962] = {
true,
false,
"blue",
},
[133430] = {
true,
false,
"mediumpurple",
},
[190206] = {
true,
false,
"blue",
},
[180104] = {
true,
false,
"deepskyblue",
},
[224221] = {
true,
false,
"mediumpurple",
},
[114796] = {
true,
false,
"blue",
},
[184580] = {
true,
false,
"deepskyblue",
},
[191230] = {
true,
false,
"fuchsia",
},
[96574] = {
true,
false,
"mediumpurple",
},
[129374] = {
true,
false,
"mediumpurple",
},
[92610] = {
true,
false,
"fuchsia",
},
[169875] = {
true,
false,
"blue",
},
[194487] = {
true,
false,
"blue",
},
[163459] = {
true,
false,
"blue",
},
[188673] = {
true,
false,
"mediumpurple",
},
[210269] = {
true,
false,
"mediumpurple",
},
[104247] = {
true,
false,
"deepskyblue",
},
[130909] = {
true,
false,
"fuchsia",
},
[212389] = {
true,
false,
"blue",
},
[206704] = {
true,
false,
"mediumpurple",
},
[178630] = {
true,
false,
"deepskyblue",
},
[167534] = {
true,
false,
"mediumpurple",
},
[85194] = {
true,
false,
"fuchsia",
},
[154020] = {
true,
false,
"deepskyblue",
},
[173714] = {
true,
false,
"mediumpurple",
},
[164506] = {
true,
false,
"fuchsia",
},
[191232] = {
true,
false,
"blue",
},
[98813] = {
true,
false,
"deepskyblue",
},
[165913] = {
true,
false,
"fuchsia",
},
[45922] = {
true,
false,
"deepskyblue",
},
[206066] = {
true,
false,
"deepskyblue",
},
[179852] = {
true,
false,
"blue",
},
[221667] = {
true,
false,
"deepskyblue",
},
[114542] = {
true,
false,
"blue",
},
[214762] = {
true,
false,
"fuchsia",
},
[186246] = {
true,
false,
"deepskyblue",
},
[115757] = {
true,
false,
"mediumpurple",
},
[155812] = {
true,
false,
"blue",
},
[168443] = {
true,
false,
"blue",
},
[224609] = {
true,
false,
"fuchsia",
},
[189816] = {
true,
false,
"deepskyblue",
},
[178008] = {
true,
false,
"yellow",
},
[196856] = {
true,
false,
"mediumpurple",
},
[214608] = {
true,
false,
"deepskyblue",
},
[214761] = {
true,
false,
"mediumpurple",
},
[168318] = {
true,
false,
"mediumpurple",
},
[230748] = {
true,
false,
"fuchsia",
},
[166299] = {
true,
false,
"blue",
},
[220060] = {
true,
false,
"deepskyblue",
},
[177808] = {
true,
false,
"mediumpurple",
},
[229686] = {
true,
false,
"deepskyblue",
},
[190340] = {
true,
false,
"blue",
},
[198868] = {
true,
false,
"deepskyblue",
},
[204918] = {
true,
false,
"blue",
},
[180335] = {
true,
false,
"blue",
},
[165483] = {
true,
false,
"fuchsia",
},
[157017] = {
true,
false,
"blue",
},
[130400] = {
true,
false,
"mediumpurple",
},
[171799] = {
true,
false,
"fuchsia",
},
[165762] = {
true,
false,
"fuchsia",
},
[184331] = {
true,
false,
"mediumpurple",
},
[206696] = {
true,
false,
"mediumpurple",
},
[180495] = {
true,
false,
"mediumpurple",
},
[166301] = {
true,
false,
"fuchsia",
},
[80938] = {
true,
false,
"mediumpurple",
},
[114544] = {
true,
false,
"fuchsia",
},
[86526] = {
true,
false,
"blue",
},
[190342] = {
true,
false,
"fuchsia",
},
[98368] = {
true,
false,
"mediumpurple",
},
[122984] = {
true,
false,
"fuchsia",
},
[41096] = {
true,
false,
"blue",
},
[166302] = {
true,
false,
"deepskyblue",
},
[210264] = {
true,
false,
"blue",
},
[219983] = {
true,
false,
"mediumpurple",
},
[228424] = {
true,
false,
"deepskyblue",
},
[165919] = {
true,
false,
"mediumpurple",
},
[168988] = {
true,
false,
"fuchsia",
},
[198870] = {
true,
false,
"blue",
},
[195842] = {
true,
false,
"blue",
},
[173044] = {
true,
false,
"deepskyblue",
},
[104251] = {
true,
false,
"fuchsia",
},
[173720] = {
true,
false,
"mediumpurple",
},
[163618] = {
true,
false,
"blue",
},
[216364] = {
true,
false,
"fuchsia",
},
[227300] = {
true,
false,
"mediumpurple",
},
[207199] = {
true,
false,
"blue",
},
[198263] = {
true,
false,
"mediumpurple",
},
[199037] = {
true,
false,
"deepskyblue",
},
[191206] = {
true,
false,
"deepskyblue",
},
[90998] = {
true,
false,
"blue",
},
[186125] = {
true,
false,
"deepskyblue",
},
[206074] = {
true,
false,
"deepskyblue",
},
[167967] = {
true,
false,
"blue",
},
[239833] = {
true,
false,
"fuchsia",
},
[189706] = {
true,
false,
"yellow",
},
[129367] = {
true,
false,
"blue",
},
[220141] = {
true,
false,
"deepskyblue",
},
[205435] = {
true,
false,
"mediumpurple",
},
[163620] = {
true,
false,
"mediumpurple",
},
[205691] = {
true,
false,
"blue",
},
[83025] = {
true,
false,
"blue",
},
[132126] = {
true,
false,
"blue",
},
[239834] = {
true,
false,
"fuchsia",
},
[76104] = {
true,
false,
"blue",
},
[179733] = {
true,
false,
"yellow",
},
[171805] = {
true,
false,
"blue",
},
[163621] = {
true,
false,
"mediumpurple",
},
[167964] = {
true,
false,
"fuchsia",
},
[168992] = {
true,
false,
"deepskyblue",
},
[167116] = {
true,
false,
"fuchsia",
},
[223253] = {
true,
false,
"deepskyblue",
},
[217039] = {
true,
false,
"mediumpurple",
},
[196102] = {
true,
false,
"deepskyblue",
},
[177816] = {
true,
false,
"deepskyblue",
},
[98243] = {
true,
false,
"mediumpurple",
},
[188302] = {
true,
false,
"yellow",
},
[83026] = {
true,
false,
"mediumpurple",
},
[114803] = {
true,
false,
"deepskyblue",
},
[239836] = {
true,
false,
"fuchsia",
},
[130404] = {
true,
false,
"mediumpurple",
},
[223724] = {
true,
false,
"yellow",
},
[177817] = {
true,
false,
"blue",
},
[180348] = {
true,
false,
"mediumpurple",
},
[199549] = {
true,
false,
"fuchsia",
},
[40936] = {
true,
false,
"mediumpurple",
},
[82579] = {
true,
false,
"deepskyblue",
},
[213751] = {
true,
false,
"yellow",
},
[155824] = {
true,
false,
"blue",
},
[165414] = {
true,
false,
"deepskyblue",
},
[114804] = {
true,
false,
"blue",
},
[193291] = {
true,
false,
"fuchsia",
},
[151476] = {
true,
false,
"mediumpurple",
},
[199595] = {
true,
false,
"mediumpurple",
},
[200836] = {
true,
false,
"mediumpurple",
},
[220401] = {
true,
false,
"fuchsia",
},
[136643] = {
true,
false,
"mediumpurple",
},
[164557] = {
true,
false,
"mediumpurple",
},
[59873] = {
true,
false,
"mediumpurple",
},
[194315] = {
true,
false,
"mediumpurple",
},
[116549] = {
true,
false,
"deepskyblue",
},
[170480] = {
true,
false,
"mediumpurple",
},
[130661] = {
true,
false,
"blue",
},
[45919] = {
true,
false,
"mediumpurple",
},
[100531] = {
true,
false,
"mediumpurple",
},
[208244] = {
true,
false,
"deepskyblue",
},
[156244] = {
true,
false,
"mediumpurple",
},
[187155] = {
true,
false,
"blue",
},
[210812] = {
true,
false,
"deepskyblue",
},
[163882] = {
true,
false,
"mediumpurple",
},
[84499] = {
true,
false,
"fuchsia",
},
[59553] = {
true,
false,
"mediumpurple",
},
[155221] = {
true,
false,
"deepskyblue",
},
[201222] = {
true,
false,
"mediumpurple",
},
[173729] = {
true,
false,
"fuchsia",
},
[194317] = {
true,
false,
"mediumpurple",
},
[169893] = {
true,
false,
"fuchsia",
},
[41139] = {
true,
false,
"blue",
},
[194316] = {
true,
false,
"mediumpurple",
},
[167113] = {
true,
false,
"blue",
},
[75979] = {
true,
false,
"fuchsia",
},
[201223] = {
true,
false,
"blue",
},
[223844] = {
true,
false,
"deepskyblue",
},
[176959] = {
true,
false,
"deepskyblue",
},
[234443] = {
true,
false,
"fuchsia",
},
[115765] = {
true,
false,
"fuchsia",
},
[200840] = {
true,
false,
"mediumpurple",
},
[101438] = {
true,
false,
"blue",
},
[213338] = {
true,
false,
"deepskyblue",
},
[156212] = {
true,
false,
"deepskyblue",
},
[214012] = {
true,
false,
"mediumpurple",
},
[82597] = {
true,
false,
"fuchsia",
},
[168007] = {
true,
false,
"blue",
},
[135241] = {
true,
false,
"deepskyblue",
},
[214140] = {
true,
false,
"mediumpurple",
},
[180864] = {
true,
false,
"fuchsia",
},
[100485] = {
true,
false,
"mediumpurple",
},
[165805] = {
true,
false,
"mediumpurple",
},
[133835] = {
true,
false,
"blue",
},
[222964] = {
true,
false,
"blue",
},
[213885] = {
true,
false,
"fuchsia",
},
[162763] = {
true,
false,
"mediumpurple",
},
[155830] = {
true,
false,
"deepskyblue",
},
[210818] = {
true,
false,
"blue",
},
[183707] = {
true,
false,
"deepskyblue",
},
[211228] = {
true,
false,
"blue",
},
[163121] = {
true,
false,
"blue",
},
[187160] = {
true,
false,
"blue",
},
[81432] = {
true,
false,
"deepskyblue",
},
[224271] = {
true,
false,
"deepskyblue",
},
[155831] = {
true,
false,
"fuchsia",
},
[169924] = {
true,
false,
"mediumpurple",
},
[206214] = {
true,
false,
"mediumpurple",
},
[114629] = {
true,
false,
"blue",
},
[187033] = {
true,
false,
"mediumpurple",
},
[168747] = {
true,
false,
"fuchsia",
},
[136139] = {
true,
false,
"fuchsia",
},
[101637] = {
true,
false,
"mediumpurple",
},
[100486] = {
true,
false,
"deepskyblue",
},
[192788] = {
true,
false,
"fuchsia",
},
[180640] = {
true,
false,
"fuchsia",
},
[176573] = {
true,
false,
"fuchsia",
},
[102788] = {
true,
false,
"blue",
},
[175550] = {
true,
false,
"fuchsia",
},
[189464] = {
true,
false,
"blue",
},
[135245] = {
true,
false,
"mediumpurple",
},
[76446] = {
true,
false,
"blue",
},
[162099] = {
true,
false,
"fuchsia",
},
[180091] = {
true,
false,
"fuchsia",
},
[200126] = {
true,
false,
"blue",
},
[221945] = {
true,
false,
"fuchsia",
},
[115640] = {
true,
false,
"fuchsia",
},
[138187] = {
true,
false,
"fuchsia",
},
[87252] = {
true,
false,
"mediumpurple",
},
[170690] = {
true,
false,
"blue",
},
[197905] = {
true,
false,
"blue",
},
[196115] = {
true,
false,
"fuchsia",
},
[96587] = {
true,
false,
"deepskyblue",
},
[227573] = {
true,
false,
"mediumpurple",
},
[212739] = {
true,
false,
"mediumpurple",
},
[229619] = {
true,
false,
"fuchsia",
},
[189466] = {
true,
false,
"mediumpurple",
},
[45928] = {
true,
false,
"mediumpurple",
},
[192791] = {
true,
false,
"fuchsia",
},
[245092] = {
true,
false,
"mediumpurple",
},
[171384] = {
true,
false,
"blue",
},
[144071] = {
true,
false,
"deepskyblue",
},
[197671] = {
true,
false,
"blue",
},
[190362] = {
true,
false,
"blue",
},
[224249] = {
true,
false,
"fuchsia",
},
[205727] = {
true,
false,
"blue",
},
[134012] = {
true,
false,
"mediumpurple",
},
[59547] = {
true,
false,
"mediumpurple",
},
[196117] = {
true,
false,
"mediumpurple",
},
[168153] = {
true,
false,
"fuchsia",
},
[223994] = {
true,
false,
"deepskyblue",
},
[213892] = {
true,
false,
"deepskyblue",
},
[163126] = {
true,
false,
"deepskyblue",
},
[81819] = {
true,
false,
"blue",
},
[227575] = {
true,
false,
"blue",
},
[193944] = {
true,
false,
"blue",
},
[245222] = {
true,
false,
"mediumpurple",
},
[165556] = {
true,
false,
"fuchsia",
},
[115642] = {
true,
false,
"blue",
},
[209801] = {
true,
false,
"fuchsia",
},
[163894] = {
true,
false,
"blue",
},
[216340] = {
true,
false,
"fuchsia",
},
[208698] = {
true,
false,
"fuchsia",
},
[220974] = {
true,
false,
"fuchsia",
},
[168882] = {
true,
false,
"fuchsia",
},
[188703] = {
true,
false,
"yellow",
},
[220815] = {
true,
false,
"blue",
},
[162744] = {
true,
false,
"mediumpurple",
},
[189470] = {
true,
false,
"deepskyblue",
},
[171184] = {
true,
false,
"mediumpurple",
},
[163128] = {
true,
false,
"deepskyblue",
},
[98370] = {
true,
false,
"deepskyblue",
},
[230740] = {
true,
false,
"fuchsia",
},
[168627] = {
true,
false,
"deepskyblue",
},
[204560] = {
true,
false,
"yellow",
},
[94224] = {
true,
false,
"fuchsia",
},
[169905] = {
true,
false,
"blue",
},
[227578] = {
true,
false,
"deepskyblue",
},
[186658] = {
true,
false,
"deepskyblue",
},
[81820] = {
true,
false,
"deepskyblue",
},
[206351] = {
true,
false,
"deepskyblue",
},
[228463] = {
true,
false,
"deepskyblue",
},
[187768] = {
true,
false,
"deepskyblue",
},
[198308] = {
true,
false,
"mediumpurple",
},
[133463] = {
true,
false,
"mediumpurple",
},
[218884] = {
true,
false,
"fuchsia",
},
[115388] = {
true,
false,
"fuchsia",
},
[216338] = {
true,
false,
"mediumpurple",
},
[197145] = {
true,
false,
"mediumpurple",
},
[164921] = {
true,
false,
"deepskyblue",
},
[198424] = {
true,
false,
"blue",
},
[190368] = {
true,
false,
"fuchsia",
},
[199703] = {
true,
false,
"fuchsia",
},
[192796] = {
true,
false,
"blue",
},
[224732] = {
true,
false,
"deepskyblue",
},
[188067] = {
true,
false,
"deepskyblue",
},
[156226] = {
true,
false,
"deepskyblue",
},
[167607] = {
true,
false,
"fuchsia",
},
[98706] = {
true,
false,
"mediumpurple",
},
[168886] = {
true,
false,
"deepskyblue",
},
[134232] = {
true,
false,
"blue",
},
[45930] = {
true,
false,
"fuchsia",
},
[216328] = {
true,
false,
"fuchsia",
},
[211341] = {
true,
false,
"mediumpurple",
},
[192333] = {
true,
false,
"mediumpurple",
},
[40943] = {
true,
false,
"deepskyblue",
},
[168384] = {
true,
false,
"blue",
},
[157634] = {
true,
false,
"blue",
},
[166969] = {
true,
false,
"deepskyblue",
},
[40167] = {
true,
false,
"blue",
},
[192800] = {
true,
false,
"deepskyblue",
},
[190207] = {
true,
false,
"deepskyblue",
},
[238068] = {
true,
false,
"fuchsia",
},
[206064] = {
true,
false,
"blue",
},
[220946] = {
true,
false,
"mediumpurple",
},
[114626] = {
true,
false,
"fuchsia",
},
[166970] = {
true,
false,
"blue",
},
[82590] = {
true,
false,
"blue",
},
[165529] = {
true,
false,
"blue",
},
[206697] = {
true,
false,
"deepskyblue",
},
[197149] = {
true,
false,
"deepskyblue",
},
[227581] = {
true,
false,
"deepskyblue",
},
[206698] = {
true,
false,
"blue",
},
[172981] = {
true,
false,
"mediumpurple",
},
[166971] = {
true,
false,
"fuchsia",
},
[150143] = {
true,
false,
"blue",
},
[152905] = {
true,
false,
"fuchsia",
},
[197406] = {
true,
false,
"fuchsia",
},
[164414] = {
true,
false,
"deepskyblue",
},
[190377] = {
true,
false,
"blue",
},
[128434] = {
true,
false,
"blue",
},
[190373] = {
true,
false,
"deepskyblue",
},
[164926] = {
true,
false,
"fuchsia",
},
[180399] = {
true,
false,
"fuchsia",
},
[113537] = {
true,
false,
"mediumpurple",
},
[206230] = {
true,
false,
"fuchsia",
},
[199325] = {
true,
false,
"deepskyblue",
},
[166589] = {
true,
false,
"fuchsia",
},
[84957] = {
true,
false,
"fuchsia",
},
[197535] = {
true,
false,
"fuchsia",
},
[98810] = {
true,
false,
"mediumpurple",
},
[184107] = {
true,
false,
"mediumpurple",
},
[214287] = {
true,
false,
"yellow",
},
[198047] = {
true,
false,
"blue",
},
[163862] = {
true,
false,
"blue",
},
[135474] = {
true,
false,
"blue",
},
[167998] = {
true,
false,
"mediumpurple",
},
[187154] = {
true,
false,
"fuchsia",
},
[205337] = {
true,
false,
"fuchsia",
},
[86684] = {
true,
false,
"deepskyblue",
},
[76518] = {
true,
false,
"fuchsia",
},
[176565] = {
true,
false,
"deepskyblue",
},
[177716] = {
true,
false,
"deepskyblue",
},
[216293] = {
true,
false,
"blue",
},
[101326] = {
true,
false,
"fuchsia",
},
[165824] = {
true,
false,
"fuchsia",
},
[164929] = {
true,
false,
"blue",
},
[167612] = {
true,
false,
"mediumpurple",
},
[114624] = {
true,
false,
"mediumpurple",
},
[192934] = {
true,
false,
"blue",
},
[153285] = {
false,
false,
"yellow",
},
[214673] = {
true,
false,
"blue",
},
[163520] = {
true,
false,
"mediumpurple",
},
[229251] = {
true,
false,
"mediumpurple",
},
[133432] = {
true,
false,
"deepskyblue",
},
[231531] = {
true,
false,
"fuchsia",
},
[195876] = {
true,
false,
"deepskyblue",
},
[84767] = {
true,
false,
"fuchsia",
},
[131677] = {
true,
false,
"fuchsia",
},
[163524] = {
true,
false,
"fuchsia",
},
[189227] = {
true,
false,
"fuchsia",
},
[229252] = {
true,
false,
"blue",
},
[210966] = {
true,
false,
"blue",
},
[192767] = {
true,
false,
"mediumpurple",
},
[195877] = {
true,
false,
"fuchsia",
},
[205212] = {
true,
false,
"fuchsia",
},
[190370] = {
true,
false,
"mediumpurple",
},
[131812] = {
true,
false,
"fuchsia",
},
[197146] = {
true,
false,
"mediumpurple",
},
[242209] = {
true,
false,
"deepskyblue",
},
[168594] = {
true,
false,
"mediumpurple",
},
[101008] = {
true,
false,
"fuchsia",
},
[102095] = {
true,
false,
"blue",
},
[216326] = {
true,
false,
"deepskyblue",
},
[131685] = {
true,
false,
"deepskyblue",
},
[102287] = {
true,
false,
"mediumpurple",
},
[114627] = {
true,
false,
"blue",
},
[167963] = {
true,
false,
"blue",
},
[233474] = {
true,
false,
"deepskyblue",
},
[195696] = {
true,
false,
"fuchsia",
},
[216339] = {
true,
false,
"blue",
},
[214421] = {
true,
false,
"mediumpurple",
},
[194894] = {
true,
false,
"blue",
},
[196263] = {
true,
false,
"deepskyblue",
},
[152898] = {
true,
false,
"fuchsia",
},
[190381] = {
true,
false,
"fuchsia",
},
[167536] = {
true,
false,
"mediumpurple",
},
[56792] = {
true,
false,
"fuchsia",
},
[115395] = {
true,
false,
"mediumpurple",
},
[213893] = {
true,
false,
"deepskyblue",
},
[104270] = {
true,
false,
"mediumpurple",
},
[80805] = {
true,
false,
"mediumpurple",
},
[81984] = {
true,
false,
"mediumpurple",
},
[167876] = {
true,
false,
"fuchsia",
},
[199717] = {
true,
false,
"mediumpurple",
},
[197799] = {
true,
false,
"deepskyblue",
},
[176551] = {
true,
false,
"deepskyblue",
},
[59552] = {
true,
false,
"blue",
},
[131666] = {
true,
false,
"blue",
},
[198311] = {
true,
false,
"mediumpurple",
},
[130485] = {
true,
false,
"fuchsia",
},
[45704] = {
true,
false,
"dimgray",
},
[199547] = {
true,
false,
"fuchsia",
},
[186229] = {
true,
false,
"mediumpurple",
},
[168109] = {
true,
false,
"deepskyblue",
},
[155090] = {
true,
false,
"deepskyblue",
},
[104300] = {
true,
false,
"deepskyblue",
},
[59546] = {
true,
false,
"blue",
},
[231176] = {
true,
false,
"yellow",
},
[213913] = {
true,
false,
"deepskyblue",
},
[186420] = {
true,
false,
"deepskyblue",
},
[167111] = {
true,
false,
"deepskyblue",
},
[136549] = {
true,
false,
"fuchsia",
},
[102404] = {
true,
false,
"mediumpurple",
},
[151127] = {
true,
false,
"fuchsia",
},
[182045] = {
true,
false,
"fuchsia",
},
[189234] = {
true,
false,
"fuchsia",
},
[129527] = {
true,
false,
"blue",
},
[203812] = {
true,
false,
"fuchsia",
},
[179388] = {
true,
false,
"deepskyblue",
},
[101075] = {
true,
false,
"fuchsia",
},
[176575] = {
true,
false,
"deepskyblue",
},
[184335] = {
true,
false,
"deepskyblue",
},
[131819] = {
true,
false,
"deepskyblue",
},
[189235] = {
true,
false,
"mediumpurple",
},
[80935] = {
true,
false,
"deepskyblue",
},
[170882] = {
true,
false,
"blue",
},
[169159] = {
true,
false,
"gold",
},
[131436] = {
true,
false,
"mediumpurple",
},
[194990] = {
true,
false,
"deepskyblue",
},
[137830] = {
true,
false,
"blue",
},
[96664] = {
true,
false,
"blue",
},
[212765] = {
true,
false,
"mediumpurple",
},
[95769] = {
true,
false,
"deepskyblue",
},
[92538] = {
true,
false,
"fuchsia",
},
[185528] = {
true,
false,
"deepskyblue",
},
[185656] = {
true,
false,
"deepskyblue",
},
[135365] = {
true,
false,
"fuchsia",
},
[156245] = {
true,
false,
"mediumpurple",
},
[131821] = {
true,
false,
"blue",
},
[180431] = {
true,
false,
"deepskyblue",
},
[80936] = {
true,
false,
"blue",
},
[175517] = {
true,
false,
"blue",
},
[185529] = {
true,
false,
"fuchsia",
},
[165197] = {
true,
false,
"fuchsia",
},
[186226] = {
true,
false,
"fuchsia",
},
[114584] = {
true,
false,
"mediumpurple",
},
[167965] = {
true,
false,
"blue",
},
[81236] = {
true,
false,
"deepskyblue",
},
[129529] = {
true,
false,
"fuchsia",
},
[95834] = {
true,
false,
"fuchsia",
},
[45935] = {
true,
false,
"deepskyblue",
},
[220368] = {
true,
false,
"yellow",
},
[189878] = {
true,
false,
"yellow",
},
[184300] = {
true,
false,
"mediumpurple",
},
[237192] = {
true,
false,
"fuchsia",
},
[114632] = {
true,
false,
"deepskyblue",
},
[205735] = {
true,
false,
"blue",
},
[198702] = {
true,
false,
"mediumpurple",
},
[231197] = {
true,
false,
"mediumpurple",
},
[208165] = {
true,
false,
"deepskyblue",
},
[168396] = {
true,
false,
"mediumpurple",
},
[86372] = {
true,
false,
"mediumpurple",
},
[133870] = {
true,
false,
"deepskyblue",
},
[179010] = {
true,
false,
"deepskyblue",
},
[95771] = {
true,
false,
"blue",
},
[114334] = {
true,
false,
"mediumpurple",
},
[155908] = {
true,
false,
"fuchsia",
},
[213954] = {
true,
false,
"mediumpurple",
},
[186220] = {
true,
false,
"deepskyblue",
},
[213806] = {
true,
false,
"deepskyblue",
},
[210539] = {
true,
false,
"mediumpurple",
},
[114633] = {
true,
false,
"mediumpurple",
},
[231312] = {
true,
false,
"deepskyblue",
},
[88163] = {
true,
false,
"fuchsia",
},
[241798] = {
true,
false,
"deepskyblue",
},
[98521] = {
true,
false,
"fuchsia",
},
[164510] = {
true,
false,
"blue",
},
[170572] = {
true,
false,
"blue",
},
[164562] = {
true,
false,
"blue",
},
[81212] = {
true,
false,
"mediumpurple",
},
[198577] = {
true,
false,
"blue",
},
[40577] = {
true,
false,
"mediumpurple",
},
[180070] = {
true,
false,
"fuchsia",
},
[162133] = {
true,
false,
"fuchsia",
},
[180433] = {
true,
false,
"fuchsia",
},
[150142] = {
true,
false,
"deepskyblue",
},
[114266] = {
true,
false,
"deepskyblue",
},
[221979] = {
true,
false,
"fuchsia",
},
[45915] = {
true,
false,
"mediumpurple",
},
[179269] = {
true,
false,
"fuchsia",
},
[241800] = {
true,
false,
"mediumpurple",
},
[171341] = {
true,
false,
"deepskyblue",
},
[59555] = {
true,
false,
"fuchsia",
},
[223770] = {
true,
false,
"blue",
},
[235151] = {
true,
false,
"blue",
},
[226200] = {
true,
false,
"blue",
},
[84520] = {
true,
false,
"mediumpurple",
},
[167533] = {
true,
false,
"mediumpurple",
},
[165076] = {
true,
false,
"blue",
},
[215755] = {
true,
false,
"fuchsia",
},
[204206] = {
true,
false,
"blue",
},
[136470] = {
true,
false,
"deepskyblue",
},
[212412] = {
true,
false,
"fuchsia",
},
[231380] = {
true,
false,
"deepskyblue",
},
[118489] = {
true,
false,
"fuchsia",
},
[228539] = {
true,
false,
"deepskyblue",
},
[185537] = {
true,
false,
"blue",
},
[171343] = {
true,
false,
"fuchsia",
},
[169861] = {
true,
false,
"blue",
},
[223772] = {
true,
false,
"blue",
},
[191164] = {
true,
false,
"fuchsia",
},
[184131] = {
true,
false,
"fuchsia",
},
[154014] = {
true,
false,
"deepskyblue",
},
[198709] = {
true,
false,
"mediumpurple",
},
[114316] = {
true,
false,
"deepskyblue",
},
[75506] = {
true,
false,
"deepskyblue",
},
[237967] = {
true,
false,
"yellow",
},
[104278] = {
true,
false,
"fuchsia",
},
[164567] = {
true,
false,
"deepskyblue",
},
[184132] = {
true,
false,
"blue",
},
[45912] = {
true,
false,
"deepskyblue",
},
[195265] = {
true,
false,
"mediumpurple",
},
[195928] = {
true,
false,
"mediumpurple",
},
[189555] = {
true,
false,
"deepskyblue",
},
[214439] = {
true,
false,
"deepskyblue",
},
[187969] = {
true,
false,
"blue",
},
[156157] = {
true,
false,
"blue",
},
[208456] = {
true,
false,
"blue",
},
[231839] = {
true,
false,
"deepskyblue",
},
[180429] = {
true,
false,
"mediumpurple",
},
[114317] = {
true,
false,
"deepskyblue",
},
[168418] = {
true,
false,
"deepskyblue",
},
[65317] = {
true,
false,
"mediumpurple",
},
[223775] = {
true,
false,
"blue",
},
[248589] = {
true,
false,
"fuchsia",
},
[211290] = {
true,
false,
"fuchsia",
},
[211262] = {
true,
false,
"fuchsia",
},
[220195] = {
true,
false,
"deepskyblue",
},
[183495] = {
true,
false,
"mediumpurple",
},
[190034] = {
true,
false,
"mediumpurple",
},
[214441] = {
true,
false,
"fuchsia",
},
[223776] = {
true,
false,
"blue",
},
[214697] = {
true,
false,
"fuchsia",
},
[176974] = {
true,
false,
"fuchsia",
},
[84400] = {
true,
false,
"mediumpurple",
},
[220196] = {
true,
false,
"fuchsia",
},
[233623] = {
true,
false,
"fuchsia",
},
[227514] = {
true,
false,
"fuchsia",
},
[193760] = {
true,
false,
"mediumpurple",
},
[223777] = {
true,
false,
"blue",
},
[199233] = {
true,
false,
"mediumpurple",
},
[205619] = {
true,
false,
"mediumpurple",
},
[219046] = {
true,
false,
"deepskyblue",
},
[220197] = {
true,
false,
"mediumpurple",
},
[127106] = {
true,
false,
"fuchsia",
},
[176598] = {
true,
false,
"blue",
},
[131586] = {
true,
false,
"mediumpurple",
},
[208438] = {
true,
false,
"mediumpurple",
},
[150250] = {
true,
false,
"deepskyblue",
},
[205620] = {
true,
false,
"mediumpurple",
},
[190403] = {
true,
false,
"mediumpurple",
},
[129600] = {
true,
false,
"deepskyblue",
},
[114319] = {
true,
false,
"blue",
},
[115406] = {
true,
false,
"deepskyblue",
},
[168934] = {
true,
false,
"fuchsia",
},
[195135] = {
true,
false,
"fuchsia",
},
[150251] = {
true,
false,
"blue",
},
[223423] = {
true,
false,
"mediumpurple",
},
},
["extra_icon_show_enrage_border"] = {
0.85098039215686,
0,
0.074509803921569,
},
["auto_inside_raid_dungeon"] = {
["hide_enemy_player_pets"] = true,
["hide_enemy_player_totems"] = true,
},
["hook_data"] = {
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Initialization"] = "function (modTable)\n    \n    --ATTENTION: after enabling this mod, you may have to adjust the anchor point at the Buff Settings tab\n    \n    local sortByTime = false\n    local invertSort = false\n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    local priority = {\n        --Priest\n        [\"Vampiric Touch\"] = 21,\n        [\"Shadow Word: Pain\"] = 22,\n        [\"Mind Flay\"] = 25,\n        \n        --Rogue\n        [\"Deathstalker's Mark\"] = 102,\n        [\"Marked for Death\"] = 101,\n        [\"Ghostly Strike\"] = 100,\n        [\"Vendetta\"] = 98,\n        [\"Shiv\"] = 97,\n        [\"Flagellation\"] = 96,\n        [\"Garrote\"] = 95,\n        [\"Rupture\"] = 94,\n        [\"Caustic Spatter\"] = 92,\n        [\"Find Weakness\"] = 93,\n        [\"Crimson Tempest\"] = 85,\n        [\"Between the Eyes\"] = 83,\n        [\"Pistol Shot\"] = 82,\n        -- [\"Se\"] =\n        [\"Serrated Bone Spike\"] = 0,\n        \n        --Druid\n        [\"Sunfire\"] = 100,\n        [\"Moonfire\"] = 99,\n        \n        --Monk\n        [\"Mark of the Crane\"] = 59,\n        \n        --Dungeon Debuffs\n        [\"Droman's Wrath\"] = 1001,\n        \n        --Dungeon Buffs\n        [\"Bolstering\"] = 2001,\n        [\"Slime Coated\"] = 2002,\n    }\n    \n    -- Sort function - do not touch\n    Plater.db.profile.aura_sort = true\n    \n    \n    function Plater.AuraIconsSortFunction (aura1, aura2)\n        local p1 = priority[aura1.SpellId] or priority[aura1.SpellName] or 1\n        local p2 = priority[aura2.SpellId] or priority[aura2.SpellName] or 1\n        \n        if sortByTime and p1 == p2 then\n            if invertSort then\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) > (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            else\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) < (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            end\n        else\n            if invertSort then\n                return p1 < p2\n            else\n                return p1 > p2\n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1754694621,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_reorder",
["Enabled"] = true,
["Revision"] = 587,
["semver"] = "",
["Author"] = "Ditador-Azralon",
["Desc"] = "Reorder buffs and debuffs following the settings set in the constructor.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Aura Reorder - Jundies",
["LastHookEdited"] = "",
["Options"] = {
},
},
{
["OptionsValues"] = {
["SPglowfreq"] = 0.59999990463257,
["SPglowxoff"] = 0.5,
["doNotPurge"] = {
},
["SPglowyoff"] = 0.5,
["SPglowcolor"] = {
1,
1,
0.45490199327469,
1,
},
["SPglowparticle"] = 5,
},
["HooksTemp"] = {
},
["Hooks"] = {
["Initialization"] = "function (modTable)\n    local options1 = {\n        glowType = \"button\",\n        frequency = modTable.config.SPglowfreq\n    }\n    \n    local options2 = {\n        glowType = \"pixel\",\n        N = modTable.config.SPglowparticle,\n        frequency = modTable.config.SPglowfreq,\n        length = modTable.config.SPpixellength,\n        th = modTable.config.SPpixelth,\n        xOffset = modTable.config.SPglowxoff,\n        yOffset = modTable.config.SPglowyoff,\n        border = modTable.config.SPpixelborder\n    }\n    \n    local options3 = {\n        glowType = \"ants\",\n        N = modTable.config.SPglowparticle,\n        frequency = modTable.config.SPglowfreq,\n        scale = modTable.config.SPantsscale,\n        xOffset = modTable.config.SPglowxoff,\n        yOffset = modTable.config.SPglowyoff\n    }\n    \n    modTable.options =\n    (modTable.config.SPglownum == 1 and options1) or (modTable.config.SPglownum == 2 and options2) or\n    (modTable.config.SPglownum == 3 and options3)\n    \n    local doNotPurgeList = {\n        [385063] = true, -- Burning Ambition, Ruby Life Pools\n        [392454] = true, -- Burning Veins, Ruby Life Pools\n        [396020] = true, -- Golden Barrier, Temple of the Jade Serpent\n        [383161] = true -- Decay Infusion, Brackenhide Hollow\n    }\n    \n    for _, id in pairs(modTable.config.doNotPurge) do\n        doNotPurgeList[tonumber(id)] = true\n    end\n    \n    modTable.doNotPurge = function(id)\n        return doNotPurgeList[id] ~= nil\n    end\nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if not unitFrame.healthBar:IsShown() then\n        return\n    end\n    \n    local buffSpecialGlow = true\n    local color = modTable.config.SPglowcolor\n    \n    -- functions --\n    local auraContainers = {unitFrame.BuffFrame.PlaterBuffList}\n    \n    if (Plater.db.profile.buffs_on_aura2) then\n        auraContainers[2] = unitFrame.BuffFrame2.PlaterBuffList\n    end\n    \n    for containerID = 1, #auraContainers do\n        local auraContainer = auraContainers[containerID]\n        \n        for _, auraIcon in ipairs(auraContainer) do\n            if (auraIcon:IsShown() and auraIcon.CanStealOrPurge and not modTable.doNotPurge(auraIcon.SpellId)) then\n                Plater.StartGlow(auraIcon, nil, modTable.options)\n            else\n                Plater.StopGlow(auraIcon, modTable.options.glowType, modTable.options.key)\n            end\n        end\n    end\n    \n    if buffSpecialGlow then\n        for _, auraIcon in ipairs(unitFrame.ExtraIconFrame.IconPool) do\n            if auraIcon:IsShown() then\n                if (auraIcon.canStealOrPurge and not modTable.doNotPurge(auraIcon.SpellId)) then\n                    Plater.StartGlow(auraIcon, nil, modTable.options)\n                else\n                    Plater.StopGlow(auraIcon, modTable.options.glowType, modTable.options.key)\n                end\n            end\n        end\n    end\nend",
},
["Time"] = 1754170160,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 132096,
["Enabled"] = true,
["Revision"] = 1087,
["semver"] = "",
["Author"] = "Viashi-Antonidas",
["Desc"] = "Adds a glow to the aura if you can steal or purge the buff.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Steal/Purge Aura Glow",
["LastHookEdited"] = "",
["Options"] = {
{
["Type"] = 5,
["Key"] = "",
["Value"] = "Common Options",
["Name"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "1(Button) / 2(Pixel) / 3(Ants) ",
["Min"] = 1,
["Key"] = "SPglownum",
["Value"] = 2,
["Name"] = "Glow Type",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 2,
["Desc"] = "Set to negative to inverse direction of rotation",
["Min"] = -2,
["Key"] = "SPglowfreq",
["Value"] = 0.5,
["Name"] = "Glow Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Key"] = "SPglowcolor",
["Value"] = {
1,
1,
0.45490196078431,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Set glow color",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "Blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "",
["Value"] = "Options for Pixel & Ants Glow",
["Name"] = "Options for Pixel & Ants Glow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 16,
["Desc"] = "Set number of lines",
["Min"] = 1,
["Key"] = "SPglowparticle",
["Value"] = 6,
["Name"] = "Number of Particles",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Offset of glow relative to region border",
["Min"] = -10,
["Key"] = "SPglowxoff",
["Value"] = 1.2,
["Name"] = "X-Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Offset of glow relative to region border",
["Min"] = -10,
["Key"] = "SPglowyoff",
["Value"] = 1.2,
["Name"] = "Y-Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "Blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "",
["Value"] = "Options for Pixel Glow",
["Name"] = "Options for Pixel Glow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "SPpixelborder",
["Value"] = false,
["Name"] = "Pixel Add Border",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Enable to true to create border under lines",
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "Set pixel line length",
["Min"] = 0.01,
["Key"] = "SPpixellength",
["Value"] = 6,
["Name"] = "Pixel Line Length",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Set pixel line thickness",
["Min"] = 0.01,
["Key"] = "SPpixelth",
["Value"] = 2,
["Name"] = "Pixel Line Thickness",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "Blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "",
["Value"] = "Options for Ants Glow",
["Name"] = "Options for Ants Glow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 2.5,
["Desc"] = "Set ants glow scale",
["Min"] = 0.01,
["Key"] = "SPantsscale",
["Value"] = 0.8,
["Name"] = "Ants Glow Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 7,
["Key"] = "doNotPurge",
["Value"] = {
},
["Name"] = "Do Not Purge",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "List of spells you may not want to purge for whichever reason",
},
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CheckAggro (unitFrame)\nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CheckAggro (unitFrame)\nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    function envTable.CheckAggro (unitFrame)\n        --if the player isn't in combat, ignore this check\n        if (not Plater.IsInCombat()) then\n            return\n        end\n        \n        --if this unit is a player, ignore\n        if (UnitPlayerControlled(unitFrame.unit)) then\n            return\n        end\n        \n        --if this unit isn't in combat, ignore\n        if (not unitFrame.InCombat) then\n            return \n        end\n        \n        --player is a tank?\n        if (Plater.PlayerIsTank) then\n            --player isn't tanking this unit?\n            if (not unitFrame.namePlateThreatIsTanking) then\n                --check if a second tank is tanking it\n                if (Plater.ZoneInstanceType == \"raid\") then\n                    --return a list with the name of tanks in the raid\n                    local tankPlayersInTheRaid = Plater.GetTanks()\n                    \n                    --get the target name of this unit\n                    local unitTargetName = UnitName (unitFrame.targetUnitID)\n                    \n                    --check if the unit isn't targeting another tank in the raid and paint the color\n                    if (not tankPlayersInTheRaid [unitTargetName]) then\n                        Plater.SetNameplateColor (unitFrame, Plater.db.profile.tank.colors.noaggro)\n                    else\n                        --another tank is tanking this unit\n                        --do nothing\n                    end\n                    \n                else\n                    Plater.SetNameplateColor (unitFrame, Plater.db.profile.tank.colors.noaggro)\n                end\n            end\n            \n        else\n            --player is a dps or healer\n            if (unitFrame.namePlateThreatIsTanking) then\n                Plater.SetNameplateColor (unitFrame, Plater.db.profile.dps.colors.aggro)\n            end\n            \n        end        \n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1754170164,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\media\\checked_64",
["Enabled"] = true,
["Revision"] = 135,
["semver"] = "",
["Author"] = "Kastfall-Azralon",
["Desc"] = "When a mob is attacking you, force show the threat color. For tanks, force threat color if the mob is not attacking you.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Force Threat Color NPC",
["LastHookEdited"] = "",
["Options"] = {
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    unitFrame.healthBar.ttdTextFrame:SetText(\"\")\nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.updateUnit(unitId, unitFrame.namePlateNpcId)\nend",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.updateUnit(unitId)\nend",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    -- Credit to Aethys for the algorithm: https://github.com/herotc/hero-lib\n    \n    --general settings:\n    envTable.onlyShowOnBoss = false\n    envTable.includeShields = true\n    \n    --custom health% for specific units:\n    envTable.customPercent = {\n        --Dawnbreaker \n        [213937] = 59.5, --Rasha'nan\n        --Darkflame Cleft\n        [208747] = 55, --The Darkness\n        -- City of Threads\n        [219984] = 50, -- Xeph'itik\n        ----- Shadowlands\n        -- Sanguine Depths\n        [162099] = 50, -- General Kaal\n        --- De Other Side\n        [166608] = 10, --Mueh'Zala\n        --- Mists of Tirna Scithe\n        [164929] = 20, -- Tirnenn Villager\n        [164804] = 20, -- Droman Oulfarran\n        ----- Draenor\n        --- Shadowmoon Burial Ground\n        [76057] = 20.5, -- Carrion Worm\n        ----- Legion\n        -- Halls of Valor\n        [95674] = 60, -- Fenryr P1\n        [95676] = 80, -- Odyn\n        [94960] = 10, -- Hymdall\n        -- Court of Stars\n        [104215] = 20, -- Patrol Captain Gerdo\n        ----- Mists of Pandaria\n        -- Temple of the Jade Serpent\n        [56732] = 30, -- Liu Flameheart,\n        ----- Dragonflight\n        -- Brackenhide Hollow\n        [186121] = 4, -- Decatriarch Wratheye\n        -- Uldaman\n        [184580] = 10, -- Olaf\n        [184581] = 10, -- Baelog\n        [184582] = 10, -- Eric \"The Swift\"\n        [184125] = 1, -- Chrono-Lord Deios,\n        -- Doti lower\n        [198933] = 90, -- Iridikron, technically 85 but you care only until 90\n        [207638] = 80, -- Blight of Galakrond\n        [201792] = 60, -- Ahnzon\n        -----Cata\n        --Grim Batol \n        [40320] = 50.0, -- Valiona\n    }\n    \n    -- text settings:\n    local textColor = \"white\"\n    local textSize = 12\n    local textFont = \"2002\"\n    local textOutline = \"NONE\" --\"OUTLINE\"\n    --local textShadowColor = \"green\"\n    \n    -- positioning\n    local anchor = {\n        side = 3, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = 2, --x offset\n        y = -3, --y offset\n    }\n    \n    -- TTD calculation config\n    envTable.config = {\n        historyCount = 100,\n        historyTime = 10,\n        duration = 600,\n        pctHP = 0,\n    }\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    --frames:\n    \n    --create the text frame that will show the TTD\n    if not unitFrame.healthBar.ttdTextFrame then\n        envTable.ttdTextFrame = Plater:CreateLabel(unitFrame.healthBar, \"\", textSize, textColor)\n        unitFrame.healthBar.ttdTextFrame = envTable.ttdTextFrame\n        envTable.ttdTextFrame:SetText(\"\")\n    end\n    \n    Plater.SetAnchor(unitFrame.healthBar.ttdTextFrame, anchor)\n    \n    if textFont then\n        DetailsFramework:SetFontFace(unitFrame.healthBar.ttdTextFrame, textFont)\n    end\n    if textSize then\n        DetailsFramework:SetFontSize(unitFrame.healthBar.ttdTextFrame, textSize)\n    end\n    if textOutline then\n        DetailsFramework:SetFontOutline(unitFrame.healthBar.ttdTextFrame, textOutline)\n    end\n    if textColor then\n        local r, g, b, a = DetailsFramework:ParseColors(textColor)\n        unitFrame.healthBar.ttdTextFrame:SetTextColor(r, g, b, a)\n    end\n    if textShadowColor then\n        local r, g, b, a = DetailsFramework:ParseColors(textShadowColor)\n        DetailsFramework:SetFontShadow(unitFrame.healthBar.ttdTextFrame, r, g, b, a, 1, -1)\n    end\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    --functions\n    \n    envTable.cache = {}\n    envTable.units = {}\n    \n    function envTable.TTDRefresh(unit)\n        local currentTime = GetTime()\n        local historyCount = envTable.config.historyCount\n        local historyTime = envTable.config.historyTime\n        \n        if not UnitExists(unit) then\n            return\n        end\n        \n        local GUID = UnitGUID(unit)\n        \n        if not GUID then\n            return\n        end\n        \n        local health = UnitHealth(unit)\n        local maxHealth = UnitHealthMax(unit)\n        local absorbsPercent = 0\n        \n        if UnitGetTotalAbsorbs and envTable.includeShields then\n            local absorbs = UnitGetTotalAbsorbs(unit)\n            health = health + absorbs\n            absorbsPercent = absorbs ~= -1 and maxHealth ~= -1 and absorbs / maxHealth * 100 or 0\n        end\n        \n        local healthPercentage = health ~= -1 and maxHealth ~= -1 and health / maxHealth * 100\n        -- Check if it's a valid unit\n        if UnitCanAttack(\"player\", unit) and healthPercentage < (100 + absorbsPercent) then\n            local unitTable = envTable.units[GUID]\n            -- Check if we have seen one time this unit, if we don't then initialize it.\n            if not unitTable or healthPercentage > unitTable[1][1][2] then\n                unitTable = { {}, currentTime }\n                envTable.units[GUID] = unitTable\n            end\n            \n            local values = unitTable[1]\n            local time = currentTime - unitTable[2]\n            -- Check if the % HP changed since the last check (or if there were none)\n            if #values == 0 or healthPercentage ~= values[1][2] then\n                local value\n                local lastIndex = #envTable.cache\n                -- Check if we can re-use a table from the cache -- Buds: i have doubt on the value of reusing table, with the high cost of tinsert on 1st index\n                if lastIndex == 0 then\n                    value = { time, healthPercentage }\n                else\n                    value = envTable.cache[lastIndex]\n                    envTable.cache[lastIndex] = nil\n                    value[1] = time\n                    value[2] = healthPercentage\n                end\n                table.insert(values, 1, value)\n                local n = #values\n                -- Delete values that are no longer valid\n                while (n > historyCount) or (time - values[n][1] > historyTime) do\n                    envTable.cache[#envTable.cache + 1] = values[n]\n                    values[n] = nil\n                    n = n - 1\n                end\n            end\n        end\n    end\n    \n    function envTable.TimeToX(guid, percentage, minSamples)\n        local seconds = 8888\n        local unitTable = envTable.units[guid]\n        -- Simple linear regression\n        -- ( E(x^2)  E(x) )  ( a )  ( E(xy) )\n        -- ( E(x)     n  )  ( b ) = ( E(y)  )\n        -- Format of the above: ( 2x2 Matrix ) * ( 2x1 Vector ) = ( 2x1 Vector )\n        -- Solve to find a and b, satisfying y = a + bx\n        -- Matrix arithmetic has been expanded and solved to make the following operation as fast as possible\n        if unitTable then\n            local values = unitTable[1]\n            local n = #values\n            if n > minSamples then\n                local a, b = 0, 0\n                local Ex2, Ex, Exy, Ey = 0, 0, 0, 0\n                \n                local value, x, y\n                for i = 1, n do\n                    value = values[i]\n                    x, y = value[1], value[2]\n                    \n                    Ex2 = Ex2 + x * x\n                    Ex = Ex + x\n                    Exy = Exy + x * y\n                    Ey = Ey + y\n                end\n                -- invariant to find matrix inverse\n                local invariant = 1 / (Ex2 * n - Ex * Ex)\n                -- Solve for a and b\n                a = (-Ex * Exy * invariant) + (Ex2 * Ey * invariant)\n                b = (n * Exy * invariant) - (Ex * Ey * invariant)\n                if b ~= 0 then\n                    -- Use best fit line to calculate estimated time to reach target health\n                    seconds = (percentage - a) / b\n                    -- Subtract current time to obtain \"time remaining\"\n                    seconds = math.min(7777, seconds - (GetTime() - unitTable[2]))\n                    if seconds < 0 then\n                        seconds = 9999\n                    end\n                end\n            end\n        end\n        \n        return seconds\n    end\n    \n    function envTable.updateUnit(unitId, npcId)\n        if UnitExists(unitId) and (not envTable.onlyShowOnBoss or UnitLevel(unitId) == -1) then\n            envTable.TTDRefresh(unitId)\n            local GUID = UnitGUID(unitId)\n            local customPercent = envTable.customPercent[npcId] or nil\n            envTable.TTD = envTable.TimeToX(GUID, customPercent or envTable.config.pctHP, 3)\n            if envTable.TTD < 7777 and envTable.TTD < envTable.config.duration then\n                envTable.show = true\n                envTable.updateText()\n            end\n        end\n    end\n    \n    function envTable.updateText()\n        ---@type string|number\n        local ret = \"\"\n        \n        local number = envTable.TTD\n        \n        if not number or number == 0 or not envTable.show then\n            unitFrame.healthBar.ttdTextFrame:SetText(\"\")\n            return\n        end\n        \n        local H = floor(number / 3600)\n        local M = floor((number - (floor(number / 3600) * 3600)) / 60)\n        local S = number - math.floor(number / 60) * 60\n        if H > 0 then\n            ret = (\"%02d:%02d:%02d\"):format(H, M, S)\n        elseif M > 0 then\n            ret = (\"%02d:%02d\"):format(M, S)\n        else\n            ret = floor(S)\n        end\n        \n        unitFrame.healthBar.ttdTextFrame:SetText(ret)\n    end\nend",
},
["Time"] = 1739453229,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 2125377,
["Enabled"] = false,
["Revision"] = 238,
["semver"] = "",
["Author"] = "Viash-Thrall",
["Desc"] = "",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Time to Die (TTD)",
["LastHookEdited"] = "",
["Options"] = {
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Initialization"] = "function (modTable)\n    function Plater.UpdateLifePercentText(healthBar, unitId, showHealthAmount, showPercentAmount, showDecimals) -- ~health\n        --get the cached health amount for performance\n        local currentHealth, maxHealth = healthBar.CurrentHealth, healthBar.CurrentHealthMax\n        \n        if showHealthAmount and showPercentAmount then\n            local percent = maxHealth == 0 and 100 or (currentHealth / maxHealth * 100)\n            \n            if showDecimals then\n                if percent < 10 then\n                    healthBar.lifePercent:SetText(Plater.FormatNumber(currentHealth) .. format(\" %.2f%%\", percent))\n                elseif percent < 99.9 then\n                    healthBar.lifePercent:SetText(Plater.FormatNumber(currentHealth) .. format(\" %.1f%%\", percent))\n                else\n                    healthBar.lifePercent:SetText(Plater.FormatNumber(currentHealth) .. \" 100%\")\n                end\n            else\n                healthBar.lifePercent:SetText(Plater.FormatNumber(currentHealth) .. format(\" %d%%\", percent))\n            end\n        elseif showHealthAmount then\n            healthBar.lifePercent:SetText(Plater.FormatNumber(currentHealth))\n        elseif showPercentAmount then\n            local percent = maxHealth == 0 and 100 or (currentHealth / maxHealth * 100)\n            \n            if showDecimals then\n                if percent < 10 then\n                    healthBar.lifePercent:SetText(format(\"%.2f%%\", percent))\n                elseif percent < 99.9 then\n                    healthBar.lifePercent:SetText(format(\"%.1f%%\", percent))\n                else\n                    healthBar.lifePercent:SetText(\"100%\")\n                end\n            else\n                healthBar.lifePercent:SetText(format(\"%d%%\", percent))\n            end\n        else\n            healthBar.lifePercent:SetText(\"\")\n        end\n    end\nend\n\n\n\n\n",
},
["Time"] = 1754170164,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 237031,
["Enabled"] = true,
["Revision"] = 183,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Desc"] = "Removes parenthesis when show health amount and percent are both enabled.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Health Formatting",
["LastHookEdited"] = "",
["Options"] = {
},
},
{
["OptionsValues"] = {
["nameColor"] = {
0,
1,
0.01176470704376698,
1,
},
["useNameplateColor"] = false,
["useNameColor"] = true,
["borderColor"] = {
0,
1,
0.01176470704376698,
1,
},
},
["HooksTemp"] = {
},
["UID"] = "0x669ff67a1d2afb0",
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.maybeUpdateColor(unitFrame)\nend",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.maybeUpdateColor(unitFrame)\nend",
["Initialization"] = "function (modTable)\n    -- Populated with root immune npcIds from MDT.\n    local immuneMap = {\n        -- not stun immune in MDT\n        [205408] = true, -- Infinite Timeslicer\n    }\n    \n    local hasMDT = false\n    \n    if MDT and MDT.dungeonEnemies then\n        hasMDT = true\n        \n        for _, dungeon in pairs(MDT.dungeonEnemies) do\n            for _, npc in pairs(dungeon) do\n                if npc.characteristics and npc.characteristics and not npc.characteristics[\"Stun\"] then\n                    immuneMap[npc.id] = true\n                end\n            end\n        end\n    end\n    \n    function modTable.maybeUpdateColor(unitFrame)\n        if not hasMDT then\n            return\n        end\n        \n        if immuneMap[unitFrame.namePlateNpcId] == nil then\n            return\n        end\n        \n        if modTable.config.useNameplateColor then\n            Plater.SetNameplateColor(unitFrame, modTable.config.healthBarColor)\n            Plater.DenyColorChange(unitFrame, true)\n        end\n        \n        if modTable.config.useBorderColor then\n            Plater.SetBorderColor(unitFrame, modTable.config.borderColor)\n            Plater.DenyColorChange(unitFrame, true)\n        end\n        \n        if modTable.config.useNameColor then\n            Plater:SetFontColor(unitFrame.unitName, modTable.config.nameColor)\n            Plater.DenyColorChange(unitFrame, true)\n        end\n    end\nend",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.maybeUpdateColor(unitFrame)\nend",
},
["Time"] = 1747524926,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
["Enabled"] = true,
["64"] = true,
},
},
["url"] = "",
["Icon"] = 135848,
["Enabled"] = false,
["Revision"] = 624,
["semver"] = "",
["Author"] = "Aparratchic-Ragnaros",
["Desc"] = "",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["LastHookEdited"] = "",
["Options"] = {
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = true,
["Name"] = "Activate Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
0,
0.34117648005486,
1,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useBorderColor",
["Value"] = false,
["Name"] = "Activate Border Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "borderColor",
["Value"] = {
0,
1,
0.011764707043767,
1,
},
["Name"] = "Border Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useNameColor",
["Value"] = false,
["Name"] = "Activate Name Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "nameColor",
["Value"] = {
0,
1,
0.26666668057442,
1,
},
["Name"] = "Name Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["Name"] = "Freeze Immune NPC's [MDT]",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    if unitFrame.healthBar.questProgressTextFrame then\n        unitFrame.healthBar.questProgressTextFrame:SetText(\"\")\n    end\nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.updateText(unitFrame)\nend",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.updateText(unitFrame)\nend",
["Constructor"] = "function(self, unitId, unitFrame, envTable)\n    local textColor = \"orange\"\n    local textSize = 12\n    \n    -- positioning\n    local anchor = {\n        side = 2, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = -15, --x offset\n        y = 0, --y offset\n    }\n    \n    function envTable.updateText(unitFrame)\n        if not unitFrame or not unitFrame.namePlateIsQuestObjective or not unitFrame.QuestAmountCurrent then\n            if unitFrame.healthBar.questProgressTextFrame and unitFrame.healthBar.questProgressTextFrame:IsShown() then\n                unitFrame.healthBar.questProgressTextFrame:Hide()\n            end\n            \n            return\n        end\n        \n        local text = unitFrame.QuestAmountTotal and unitFrame.QuestAmountTotal - unitFrame.QuestAmountCurrent\n        or unitFrame.QuestAmountCurrent .. \"%\"\n        \n        local currentText = unitFrame.healthBar.questProgressTextFrame\n        and unitFrame.healthBar.questProgressTextFrame:GetText()\n        or nil\n        \n        if currentText == text then\n            return\n        end\n        \n        --create the text frame that will show the quest progress\n        if not unitFrame.healthBar.questProgressTextFrame then\n            envTable.questProgressTextFrame = Plater:CreateLabel(unitFrame.healthBar, \"\", textSize, textColor)\n            Plater.SetAnchor(envTable.questProgressTextFrame, anchor)\n            unitFrame.healthBar.questProgressTextFrame = envTable.questProgressTextFrame\n        end\n        \n        if not unitFrame.healthBar.questProgressTextFrame:IsVisible() then\n            unitFrame.healthBar.questProgressTextFrame:Show()\n        end\n        \n        unitFrame.healthBar.questProgressTextFrame:SetText(text)\n    end\nend",
},
["Time"] = 1754170162,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
["Enabled"] = true,
["party"] = true,
["scenario"] = true,
["none"] = true,
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = "236671",
["Enabled"] = true,
["Revision"] = 381,
["semver"] = "",
["Author"] = "Viashi-Antonidas",
["Desc"] = "Adds a text indicator for quest progress to show how many times the objective has to be completed.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "QuestProgress",
["LastHookEdited"] = "",
["Options"] = {
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["UID"] = "0x669565071fdad90",
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.updateBorderColor(unitFrame)\nend",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.updateBorderColor(unitFrame)\nend",
["Target Changed"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.updateBorderColor(unitFrame)\nend",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local function holdsSameColor(frame, nextColor)\n        local currentR, currentG, currentB, currentA =\n        unpack(frame.customBorderColor and frame.customBorderColor or Plater.db.profile.border_color)\n        local nextR, nextG, nextB, nextA = unpack(nextColor or Plater.db.profile.border_color)\n        \n        return currentR == nextR and currentG == nextG and currentB == nextB and currentA == nextA\n    end\n    \n    function envTable.updateBorderColor(frame)\n        local color = nil\n        \n        if UnitIsUnit(\"target\", unitFrame.unit) then\n            color = modTable.config.targetColor\n        elseif UnitIsUnit(\"focus\", unitFrame.unit) then\n            color = modTable.config.focusColor\n        end\n        \n        if not holdsSameColor(frame, color) then\n            Plater.SetBorderColor(frame, color)\n        end\n    end\nend",
},
["Time"] = 1754170160,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = "132212",
["Enabled"] = true,
["Revision"] = 475,
["semver"] = "",
["Author"] = "Xephunt-These Go To Eleven",
["Desc"] = "",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["LastHookEdited"] = "",
["Options"] = {
{
["Type"] = 1,
["Key"] = "targetColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Target Border Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Changes target border color",
},
{
["Type"] = 1,
["Key"] = "focusColor",
["Value"] = {
0,
1,
0.94117653369904,
1,
},
["Name"] = "Focus Border Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Changes Focus border color",
},
},
["Name"] = "Target Border Color",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["UID"] = "0x62f9521d664ad",
["Hooks"] = {
["Initialization"] = "function (modTable)\n    if not Plater.AddPerformanceUnits or not Plater.PERF_UNIT_OVERRIDES_BIT then\n        return\n    end\n    \n    local castDisabled = 2 -- Plater.PERF_UNIT_OVERRIDES_BIT.CAST\n    local auraDisabled = 4 -- Plater.PERF_UNIT_OVERRIDES_BIT.AURA\n    local threatDisabled = 1 --Plater.PERF_UNIT_OVERRIDES_BIT.THREAT\n    local allDisabled = 0\n    local castAndAuraDisabled = bit.bor(castDisabled, auraDisabled)\n    \n    -- local castAndAuraDisabled = bit.bor(castDisabled, auraDisabled)\n    \n    local units = {\n        -- Raids\n        [189706] = { enabled = true, flag = 0 }, -- Chaotic Essence\n        [189707] = { enabled = true, flag = 0 }, -- Chaotic mote\n        [176920] = { enabled = true, flag = 0 }, -- Domination Arrow -- Sylv\n        [196679] = { enabled = true, flag = 0 }, -- Frozen Shroud -- Broodkeeper\n        [194999] = { enabled = true, flag = 0 }, -- Volatile Spark -- Raszageth\n        [191714] = { enabled = true, flag = 0 }, -- Seeking Stormling -- Raszageth\n        [210231] = { enabled = true, flag = 0 }, -- Tainted Lasher -- Gnarlroot\n        [211306] = { enabled = true, flag = 0 }, -- Fiery vines -- Tindral\n        [219746] = { enabled = true, flag = 0 }, -- Tomb - Ansurek\n        \n        -- Dungeons\n        [196642] = { enabled = true, flag = 0 }, -- Hungry Lasher (Boss add)\n        [197398] = { enabled = true, flag = 0 }, -- Hungry Lasher\n        [208994] = { enabled = true, flag = 0 }, -- Infected Lasher\n        [189363] = { enabled = true, flag = 0 }, -- Infected Lasher\n        [96247] = { enabled = true, flag = 0 }, -- Vileshard Crawler\n        [100529] = { enabled = true, flag = 0 }, -- Hatespawn Slime\n        [84401] = { enabled = true, flag = 0 }, -- Swift Sproutling (boss add)\n        [217126] = { enabled = true, flag = bit.bor(castDisabled, auraDisabled) }, -- Over-Indulged Patron\n        \n        --Testing\n        [198594] = { enabled = false, flag = 0 }, -- Testing target dummy\n        [87329] = { enabled = false, flag = 0 }, -- testing\n    }\n    \n    for unit, meta in pairs(units) do\n        if meta.enabled and modTable.config.performance then\n            Plater.AddPerformanceUnits(unit, meta.flag)\n        else\n            Plater.RemovePerformanceUnits(unit)\n        end\n        \n        if meta.enabled and modTable.config.forceBlizz then\n            Plater.AddForceBlizzardNameplateUnits(unit)\n        else\n            Plater.RemoveForceBlizzardNameplateUnits(unit)\n        end\n    end\nend\n\n\n\n\n\n",
},
["Time"] = 1754251314,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
["Enabled"] = true,
["party"] = true,
["raid"] = true,
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
["Enabled"] = true,
["TANK"] = true,
["HEALER"] = true,
["DAMAGER"] = true,
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 458228,
["Enabled"] = true,
["Revision"] = 497,
["semver"] = "",
["Author"] = "Viashi-Argent Dawn",
["Desc"] = "",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["LastHookEdited"] = "Initialization",
["Options"] = {
{
["Type"] = 4,
["Key"] = "performance",
["Value"] = true,
["Name"] = "Performance",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "forceBlizz",
["Value"] = false,
["Name"] = "Force Blizzard",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
},
["Name"] = "Performance Units - Jundies",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["UID"] = "0x67e07ff810c0ec",
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.renamer(unitFrame, unitId)\nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.renamer(unitFrame, unitId)\nend",
["Initialization"] = "function (modTable)\n    -- used for nameColouring\n    -- AARRGGBB\n    local markerToHex = {\n        [1] = \"FFEAEA0D\", -- Yellow 5 Point Star\n        [2] = \"FFEAB10D\", -- Orange Circle\n        [3] = \"FFCD00FF\", -- Purple Diamond\n        [4] = \"FF06D425\", -- Green Triangle\n        [5] = \"FFB3E3D8\", -- Light Blue Moon\n        [6] = \"FF0CD2EA\", -- Blue Square\n        [7] = \"FFD6210B\", -- Red Cross\n        [8] = \"FFFFFFFF\", -- White Skull\n    }\n    \n    local isFrenchLocale = ((GAME_LOCALE or GetLocale()) == \"frFR\")\n    \n    -- Makes it so you take their first name e.g Jessie Howlis -> Jessie\n    local nameBlacklist = isFrenchLocale\n    and {\n        [\"d'entraînement\"] = true,        \n        [\"le\"] = true,\n        [\"la\"] = true,\n        [\"les\"] = true,\n        [\"un\"] = true,\n        [\"une\"] = true,\n        [\"des\"] = true,\n        [\"d'\"] = true,\n        [\"de\"] = true,\n        [\"du\"] = true,\n        [\"et\"] = true,\n        [\"en\"] = true,\n        [\"terreur\"] = true,\n    }\n    or {\n        [\"the\"] = true,\n        [\"of\"] = true,\n        [\"Tentacle\"] = true,\n        [\"Apprentice\"] = true,\n        [\"Denizen\"] = true,\n        [\"Emissary\"] = true,\n        [\"Howlis\"] = true,\n        [\"Terror\"] = true,\n        [\"Totem\"] = true,\n        [\"Waycrest\"] = true,\n        [\"Aspect\"] = true,\n    }\n    \n    local function RemoveTrailingPunctuation(word)\n        return word and word:gsub(\"[%p]+$\", \"\") or word\n    end\n    \n    local function GetSanitizedParts(name)\n        local a, b, c, d, e, f = strsplit(\" \", name, 5)\n        \n        if not isFrenchLocale then\n            return a, b, c, d, e, f\n        end\n        \n        return RemoveTrailingPunctuation(a),\n        RemoveTrailingPunctuation(b),\n        RemoveTrailingPunctuation(c),\n        RemoveTrailingPunctuation(d),\n        RemoveTrailingPunctuation(e),\n        RemoveTrailingPunctuation(f)\n    end\n    \n    local function Capitalize(str)\n        return str and str:gsub(\"^%l\", string.upper) or str\n    end\n    \n    ---@type table<number, string>\n    local specialTreatmentCache = {}\n    \n    ---@type table<number, fun(name: string): string>\n    local specialTreatmentNpcIdMap = {\n        [228463] = function(name)\n            local locales = {\n                \"Reel Assistant\", -- en\n                \"Walzenassistent\", -- de\n                \"Assistant des bobines\", --fr\n                \"Технический ассистент\", -- ru\n                \"转轮助理\", -- cn\n                \"Ayudante de palanca\", -- es\n                \"Assistente al Rullo\", -- it\n                \"Assistente de Cilindro\", -- pt\n                \"굴림판 도우미\", -- ko\n            }\n            \n            for _, locale in ipairs(locales) do\n                if name ~= locale and name:find(locale) then\n                    return name:gsub(locale, \"\"):match(\"^%s*(.-)%s*$\")\n                end\n            end\n            \n            return name\n        end,\n        -- for testing purposes, replace -1 with the npc id\n        [-1] = function(name)\n            return \"lmao\"\n        end,\n    }\n    \n    -- @unitId unitID for mob e.g nameplate1\n    function modTable.renamer(unitFrame, unitId)\n        if not (unitId and unitFrame) then\n            return\n        end\n        \n        local name = unitFrame.namePlateUnitName or UnitName(unitId) or \"\"\n        \n        if modTable.config.short_names and not unitFrame.unitName.isRenamed then\n            if unitFrame.namePlateNpcId and specialTreatmentNpcIdMap[unitFrame.namePlateNpcId] then\n                name = specialTreatmentNpcIdMap[unitFrame.namePlateNpcId](name)\n            else\n                local a, b, c, d, e, f = GetSanitizedParts(name)\n                \n                local unitName\n                \n                if isFrenchLocale then\n                    if a and nameBlacklist[a:lower()] then\n                        unitName = Capitalize(f or e or d or c or b or a)\n                    else\n                        unitName = a\n                    end\n                else\n                    if nameBlacklist[b] then\n                        unitName = a or b or c or d or e or f\n                    else\n                        unitName = f or e or d or c or b or a\n                    end\n                end\n                name = unitName or name\n            end\n        end\n        \n        if modTable.config.colour_names then\n            local marker = GetRaidTargetIndex(unitId)\n            if marker then\n                local color = markerToHex[marker or 8]\n                name = WrapTextInColorCode(name, color)\n            end\n        end\n        \n        unitFrame.healthBar.unitName:SetText(name)\n    end\nend",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.renamer(unitFrame, unitId)\nend\n\n\n\n",
},
["Time"] = 1754249860,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["Icon"] = "INTERFACE\\ICONS\\Ability_Monk_Ascension",
["Enabled"] = true,
["Revision"] = 412,
["Options"] = {
{
["Type"] = 4,
["Key"] = "short_names",
["Value"] = true,
["Name"] = "Shorten Names",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Shortens NPC Names. eg.: \"Murkbrine Fishmancer\" -> \"Fishmancer\"",
},
{
["Type"] = 4,
["Key"] = "colour_names",
["Value"] = false,
["Name"] = "Colour by Raidmark",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Colours the Name by the assigned Raidmark. eg.: Triangle --> Green Name",
},
},
["Author"] = "Rhk-Tarren Mill",
["Desc"] = "Aimed at making calls in dungeons simpler by using the last name of a mob or first name of certains ones i.e Jessie Howlis -> Jessie",
["Prio"] = 98,
["Name"] = "Short Names - Jundies",
["PlaterCore"] = 1,
["LastHookEdited"] = "Nameplate Created",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.UpdateBorder (unitFrame, false)\nend\n\n\n\n\n",
["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    envTable.UpdateBorder (unitFrame, true)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    --self.ThrottleUpdate = -1\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings:\n    --show cast icon\n    envTable.ShowIcon = Plater.db.profile.castbar_icon_show --true\n    --anchor icon on what side\n    envTable.IconAnchor = \"left\" --accept 'left' 'right'\n    --fine tune the size of the icon\n    envTable.IconSizeOffset = 0\n    envTable.moveCastIcon = not Plater.db.profile.castbar_icon_customization_enabled --false\n    \n    --shield for non interruptible casts\n    envTable.ShowShield = true\n    envTable.ShieldTexture = [[Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON]]\n    envTable.ShieldDesaturated = true\n    envTable.ShieldColor = {1, 1, 1 ,1}\n    envTable.ShieldSize = {10, 12}\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        if not envTable.moveCastIcon then return end\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local shield = castBar.BorderShield\n        \n        if (envTable.ShowIcon) then\n            icon:ClearAllPoints()\n            \n            if (envTable.IconAnchor == \"left\") then\n                icon:ClearAllPoints()\n                icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", 0, envTable.IconSizeOffset)\n                icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", 0, 0)    \n                \n            elseif (envTable.IconAnchor == \"right\") then\n                icon:ClearAllPoints()\n                icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", 0, envTable.IconSizeOffset)\n                icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", 0, 0)\n                \n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n            \n        else\n            icon:Hide()\n            \n        end\n        \n        if (envTable.ShowShield and not castBar.canInterrupt) then\n            shield:Show()\n            shield:SetAlpha (1)\n            shield:SetTexCoord (0, 1, 0, 1)\n            shield:SetVertexColor (1, 1, 1, 1)\n            \n            shield:SetTexture (envTable.ShieldTexture)\n            shield:SetDesaturated (envTable.ShieldDesaturated)\n            \n            if (not envTable.ShieldDesaturated) then\n                shield:SetVertexColor (DetailsFramework:ParseColors (envTable.ShieldColor))\n            end\n            \n            shield:SetSize (unpack (envTable.ShieldSize))\n            \n            shield:ClearAllPoints()\n            shield:SetPoint (\"center\", castBar, \"left\", 0, 0)\n            \n        else\n            shield:Hide()\n            \n        end\n        \n    end\n    \n    function envTable.UpdateBorder (unitFrame, casting)\n        local healthBar = unitFrame.healthBar\n        local castBar = unitFrame.castBar\n        --casting = not casting == false or  ((castBar.casting or castBar.channeling) and not (castBar.interrupted or castBar.failed))\n        \n        if not envTable.ShowShield then\n            castBar.BorderShield:Hide()\n        end\n        \n        if casting then\n            if envTable.ShowIcon and castBar.Icon:IsShown() then\n                if envTable.IconAnchor == \"left\" then\n                    healthBar.border:ClearAllPoints()\n                    PixelUtil.SetPoint(healthBar.border, \"TOPLEFT\", castBar.Icon, \"TOPLEFT\", 0, 0)\n                    PixelUtil.SetPoint(healthBar.border, \"BOTTOMRIGHT\", castBar, \"BOTTOMRIGHT\", 0, 0)\n                elseif envTable.IconAnchor == \"right\" then\n                    healthBar.border:ClearAllPoints()\n                    PixelUtil.SetPoint(healthBar.border, \"TOPRIGHT\", castBar.Icon, \"TOPRIGHT\", 0, 0)\n                    PixelUtil.SetPoint(healthBar.border, \"BOTTOMLEFT\", castBar, \"BOTTOMLEFT\", 0, 0) \n                end\n            else\n                if envTable.IconAnchor == \"left\" then\n                    healthBar.border:ClearAllPoints()\n                    PixelUtil.SetPoint(healthBar.border, \"TOPLEFT\", healthBar, \"TOPLEFT\", 0, 0)\n                    PixelUtil.SetPoint(healthBar.border, \"BOTTOMRIGHT\", castBar, \"BOTTOMRIGHT\", 0, 0)\n                elseif envTable.IconAnchor == \"right\" then\n                    healthBar.border:ClearAllPoints()\n                    PixelUtil.SetPoint(healthBar.border, \"TOPRIGHT\", healthBar, \"TOPRIGHT\", 0, 0)\n                    PixelUtil.SetPoint(healthBar.border, \"BOTTOMLEFT\", castBar, \"BOTTOMLEFT\", 0, 0) \n                end\n            end\n        else\n            if envTable.IconAnchor == \"left\" then\n                healthBar.border:ClearAllPoints()\n                PixelUtil.SetPoint(healthBar.border, \"TOPLEFT\", healthBar, \"TOPLEFT\", 0, 0)\n                PixelUtil.SetPoint(healthBar.border, \"BOTTOMRIGHT\", healthBar, \"BOTTOMRIGHT\", 0, 0)\n            elseif envTable.IconAnchor == \"right\" then\n                healthBar.border:ClearAllPoints()\n                PixelUtil.SetPoint(healthBar.border, \"TOPRIGHT\", healthBar, \"TOPRIGHT\", 0, 0)\n                PixelUtil.SetPoint(healthBar.border, \"BOTTOMLEFT\", healthBar, \"BOTTOMLEFT\", 0, 0) \n            end\n        end\n    end\n    \n    if not unitFrame.castBar.borderChangeHooked then\n        hooksecurefunc(unitFrame.castBar, \"Hide\", function() envTable.UpdateBorder(unitFrame, false) end)\n        unitFrame.castBar.borderChangeHooked = true\n    end\n    \nend",
},
["Time"] = 1754694890,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/mEN8Q6zUa/14",
["Icon"] = "Interface\\Buttons\\UI-Quickslot2",
["Enabled"] = true,
["Revision"] = 486,
["semver"] = "1.0.13",
["Author"] = "Viash-Thrall",
["Desc"] = "Move the icon of the spell cast to the left or right side of the nameplate and extend the border around icon + cast bar.",
["Prio"] = 99,
["version"] = 14,
["PlaterCore"] = 1,
["Name"] = "Cast Icon Anchor + Border",
["LastHookEdited"] = "Constructor",
["Options"] = {
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    envTable.addHook(unitFrame)\nend",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.addHook(unitFrame)\nend\n\n\n",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    unitFrame.healthBar.customShieldHookNeedsUpdate = true\nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    if unitFrame.healthBar.customShieldHookNeedsUpdate and unitFrame.healthBar.displayedUnit then\n        unitFrame.healthBar:UNIT_MAXHEALTH()\n        unitFrame.healthBar.customShieldHookNeedsUpdate = false\n    end\nend",
["Initialization"] = "function (modTable)\n    modTable.LibSharedMedia = LibStub:GetLibrary (\"LibSharedMedia-3.0\")\nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    --Disable for classic\n    if WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE then\n        function envTable.addHook(unitFrame) end\n        return\n    end\n    \n    --settings: (changing this requires a /reload)\n    local shieldTexture = \"\"\n    --local shieldTexture = \"Details Flat\"\n    local useHalfBar = false --use a \"half bar\" overlay if the health+absorb is > 100% of the health\n    \n    --init\n    local healthBar = unitFrame.healthBar\n    if shieldTexture and shieldTexture ~= \"\" then\n        local texture = modTable.LibSharedMedia:Fetch(\"statusbar\", shieldTexture)\n        healthBar.Settings.ShieldIndicatorTexture = texture or [[Interface\\RaidFrame\\Shield-Fill]]\n        healthBar.shieldAbsorbIndicator:SetTexture(healthBar.Settings.ShieldIndicatorTexture, true, true)\n    else\n        healthBar.Settings.ShieldIndicatorTexture = [[Interface\\RaidFrame\\Shield-Fill]]\n        healthBar.shieldAbsorbIndicator:SetTexture(healthBar.Settings.ShieldIndicatorTexture, true, true)\n    end\n    \n    -- ensure settings are up to date... workardound till fix in Plater core.\n    unitFrame.healthBar.Settings.ShowShields = Plater.db.profile.show_shield_prediction\n    \n    -- overwrite UpdateHealPrediction on the healthBar\n    function envTable.addHook(unitFrame)\n        if WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE then\n            return\n        end\n        \n        local healthBar = unitFrame.healthBar\n        \n        if healthBar.isCustomShieldHook then\n            return\n        end\n        \n        healthBar.isCustomShieldHook = true\n        \n        --health and absorbs prediction from Plater core, reworked to integrate shields into the health bar\n        healthBar.UpdateHealPrediction = function(self)\n            local currentHealth = self.currentHealth\n            local currentHealthMax = self.currentHealthMax\n            \n            if not currentHealthMax or currentHealthMax <= 0 then\n                return\n            end\n            \n            healthBar.shieldAbsorbIndicator:Hide()\n            healthBar.shieldAbsorbGlow:Hide()\n            \n            if not self.displayedUnit then\n                return\n            end\n            \n            --order is: the health of the unit > damage absorb > heal absorb > incoming heal\n            local width = self:GetWidth()\n            local healthPercent = currentHealth / currentHealthMax\n            \n            if self.Settings.ShowHealingPrediction then\n                --incoming heal on the unit from all sources\n                local unitHealIncoming = UnitGetIncomingHeals(self.displayedUnit) or 0\n                --heal absorbs\n                local unitHealAbsorb = UnitGetTotalHealAbsorbs(self.displayedUnit) or 0\n                \n                if unitHealIncoming > 0 then\n                    --calculate what is the percent of health incoming based on the max health the player has\n                    local incomingPercent = unitHealIncoming / currentHealthMax\n                    self.incomingHealIndicator:Show()\n                    self.incomingHealIndicator:SetWidth(\n                        max(1, min(width * incomingPercent, abs(healthPercent - 1) * width))\n                    )\n                    self.incomingHealIndicator:SetPoint(\"topleft\", self, \"topleft\", width * healthPercent, 0)\n                    self.incomingHealIndicator:SetPoint(\"bottomleft\", self, \"bottomleft\", width * healthPercent, 0)\n                else\n                    self.incomingHealIndicator:Hide()\n                end\n                \n                if unitHealAbsorb > 0 then\n                    local healAbsorbPercent = unitHealAbsorb / currentHealthMax\n                    self.healAbsorbIndicator:Show()\n                    self.healAbsorbIndicator:SetWidth(\n                        max(1, min(width * healAbsorbPercent, abs(healthPercent - 1) * width))\n                    )\n                    self.healAbsorbIndicator:SetPoint(\"topleft\", self, \"topleft\", width * healthPercent, 0)\n                    self.healAbsorbIndicator:SetPoint(\"bottomleft\", self, \"bottomleft\", width * healthPercent, 0)\n                else\n                    self.healAbsorbIndicator:Hide()\n                end\n            end\n            \n            if self.Settings.ShowShields then\n                --damage absorbs\n                local unitDamageAbsorb = UnitGetTotalAbsorbs(self.displayedUnit) or 0\n                self.currentAbsorb = unitDamageAbsorb\n                \n                if unitDamageAbsorb > 0 then\n                    local curHealthTotal = unitDamageAbsorb + currentHealth\n                    local damageAbsorbPercent\n                    local healthPercentAbsorb\n                    local isHalfBar = false\n                    if curHealthTotal > currentHealthMax then\n                        if useHalfBar then\n                            damageAbsorbPercent = unitDamageAbsorb / currentHealthMax\n                            if damageAbsorbPercent > 1 then\n                                damageAbsorbPercent = 1 -- just limit it to the healthbar width...\n                            end\n                            healthPercentAbsorb = 1 - damageAbsorbPercent\n                            self:SetMinMaxValues(0, currentHealthMax)\n                            \n                            isHalfBar = true\n                        else\n                            damageAbsorbPercent = unitDamageAbsorb / curHealthTotal\n                            healthPercentAbsorb = currentHealth / curHealthTotal\n                            self:SetMinMaxValues(0, curHealthTotal)\n                        end\n                    else\n                        damageAbsorbPercent = unitDamageAbsorb / currentHealthMax\n                        healthPercentAbsorb = currentHealth / currentHealthMax\n                        self:SetMinMaxValues(0, currentHealthMax)\n                    end\n                    --print(healthPercentAbsorb, currentHealth, unitDamageAbsorb, damageAbsorbPercent)\n                    \n                    self.shieldAbsorbIndicator:SetWidth(width * damageAbsorbPercent)\n                    self.shieldAbsorbIndicator:SetPoint(\n                        \"topleft\",\n                        self,\n                        \"topleft\",\n                        width * healthPercentAbsorb,\n                        (isHalfBar and (-self:GetHeight() / 2)) or 0\n                    )\n                    self.shieldAbsorbIndicator:SetPoint(\n                        \"bottomleft\",\n                        self,\n                        \"bottomleft\",\n                        width * healthPercentAbsorb,\n                        0\n                    )\n                    \n                    self.shieldAbsorbIndicator:Show()\n                else\n                    self.shieldAbsorbIndicator:Hide()\n                end\n            end\n        end\n        \n        if healthBar.displayedUnit then\n            healthBar.shieldAbsorbIndicator:Hide()\n            healthBar.shieldAbsorbGlow:Hide()\n            healthBar:UNIT_MAXHEALTH()\n        else\n            healthBar.customShieldHookNeedsUpdate = true\n        end\n    end\nend",
},
["Time"] = 1754694621,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 135940,
["Enabled"] = true,
["Revision"] = 1300,
["semver"] = "",
["Author"] = "Elaiana-Proudmoore",
["Desc"] = "Adds absorbs to the health bar as full health value.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Absorb Shields in Healthbar",
["LastHookEdited"] = "",
["Options"] = {
{
["Type"] = 5,
["Key"] = "",
["Value"] = "Options For @scriptname",
["Name"] = "Options Intro",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = "",
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    envTable.color = \"#5d00ff\"\n    \n    envTable.npcs = {\n        [61056] = \"Greater Earth Elemental\",\n        [61146] = \"Black Ox Statue\",\n        [95072] = \"Earth Elemental\",\n        [103822] = \"Treant\"\n    }\n    \n    envTable.rules = {\n        [\"Pet\"] = true,\n        [\"Creature\"] = function(npcID)\n            return (envTable.npcs[npcID] ~= nil)\n        end\n    }\n    \n    envTable.getTypeAndID = function(guid)\n        local unitType, _, _, _, _, npcID = strsplit(\"-\", guid)\n        return unitType, tonumber(npcID or \"0\") or 0\n    end\n    \n    envTable.shallHighlight = function(guid)\n        local unitType, npcID = envTable.getTypeAndID(guid)\n        \n        if not unitType then\n            return false\n        end\n        \n        local value = envTable.rules[unitType]\n        \n        if value == nil then\n            return false\n        end\n        \n        \n        if type(value) == \"boolean\" then\n            return value\n        end\n        \n        if type(value) == \"function\" then\n            return value(npcID)\n        end\n        \n        return false\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    if\n    not self.InCombat\n    or self.namePlateThreatIsTanking\n    or not self.targetUnitID\n    or UnitIsTapDenied(unitId)\n    or not UnitExists(self.targetUnitID)\n    or UnitGroupRolesAssigned(self.targetUnitID) == \"TANK\"\n    or UnitIsPlayer(self.targetUnitID)\n    then\n        return\n    end\n    \n    local guid = UnitGUID(self.targetUnitID)\n    \n    if not guid then\n        return\n    end\n    \n    if envTable.shallHighlight(guid) then\n        Plater.SetNameplateColor(unitFrame, envTable.color)\n    end\nend",
},
["Time"] = 1754249790,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
["Enabled"] = true,
["party"] = true,
["scenario"] = true,
["none"] = true,
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
["Enabled"] = true,
["TANK"] = true,
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 627607,
["Enabled"] = true,
["Revision"] = 187,
["semver"] = "",
["Author"] = "Brewdux-Tarren Mill",
["Desc"] = "Recolors the nameplate, if you the unit is tanked by a pet.",
["Prio"] = 97,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Pet Threat Highlighter",
["LastHookEdited"] = "",
["Options"] = {
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["UID"] = "0x6366dbeb1fda6285",
["Hooks"] = {
["Leave Combat"] = "function (_, unitId, unitFrame, _, modTable)\n    -- when updating this, also update Init and Nameplate Updated\n    \n    if not modTable.isActive then\n        return\n    end\n    \n    local npcID = unitFrame.namePlateNpcId or modTable.parseGUID(unitId)\n    \n    if not npcID or not modTable.isSpitefulLike(npcID) then\n        return\n    end\n    \n    local specialScale = modTable.getSpitefulLikeScale(npcID)\n    \n    Plater.SetNameplateScale(unitFrame, modTable.targetsPlayer(unitId) and specialScale.self or specialScale.others)\nend",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if not modTable.isActive then\n        return\n    end\n    \n    local npcID = unitFrame.namePlateNpcId or modTable.parseGUID(unitId)\n    \n    if not npcID then\n        return\n    end\n    \n    modTable.compile()\n    local scale = modTable.npcIDs[npcID]\n    \n    if scale and scale ~= unitFrame.nameplateScaleAdjust then\n        Plater.SetNameplateScale(unitFrame, scale)\n    end\nend",
["Nameplate Updated"] = "function (_, unitId, unitFrame, _, modTable)\n    -- when updating this, also update Init and Leave Combat\n    \n    if not modTable.isActive then\n        return\n    end\n    \n    local npcID = unitFrame.namePlateNpcId or modTable.parseGUID(unitId)\n    \n    if not npcID or not modTable.isSpitefulLike(npcID) then\n        return\n    end\n    \n    local specialScale = modTable.getSpitefulLikeScale(npcID)\n    local scale = modTable.targetsPlayer(unitId) and specialScale.self or specialScale.others\n    \n    if scale ~= unitFrame.nameplateScaleAdjust then\n        Plater.SetNameplateScale(unitFrame, scale)\n    end\nend",
["Initialization"] = "function (modTable)\n    modTable.isActive = modTable.config.scale and WOW_PROJECT_ID == WOW_PROJECT_MAINLINE\n    \n    local medium = modTable.config.midScale -- 0.90\n    local small = modTable.config.lowScale -- 0.80\n    local extrasmall = modTable.config.extraLowScale -- 0.70,\n    local larger = modTable.config.higherScale -- 1.1\n    \n    --[[\n    GUIDELINES\n    - use LARGER for enemies with great situational importance that need extra attention\n        ex: totems at the end of Stonevault, Spiteful targeting you\n    - use MEDIUM for enemies that do little to nothing but melee the tank and have average health\n        OR casters without mandatory kick\n        ex: Patchwerk Soldier, Necrotic Wake | Tainted Lashers, Gnarlroot\n        ex: Primalist Galesinger, Halls of Infusion\n    - use SMALL for enemies that do nothing but melee the tank and have less than average health\n        -- ex: Jagged Hound, Waycrest Manor\n    - use EXTRA SMALL for enemies that do nothing at all AND/OR there's so many on the screen, you have no choice\n        ex: Fiery Vines, Tindral | Hungry Lashers, Academy\n    ]]\n    --\n    \n    ---@class SpitefulLikeScaling\n    ---@field self number\n    ---@field others number\n    \n    ---@type table<number, SpitefulLikeScaling>\n    ---@description table of npc ids with conditional scaling based on their current target\n    local spitefulLikes = {\n        [220626] = { -- Blood Parasite, Ovinax\n            self = larger,\n            others = extrasmall,\n        },\n        [235631] = { -- Crawler Mine, Motherlode\n            self = larger,\n            others = small,\n        },\n        [133482] = { -- Crawler Mine, Motherlode\n            self = larger,\n            others = small,\n        },\n        [167898] = { -- Manifestation of Envy, HoA\n            self = medium,\n            others = small,\n        },\n        [231014] = { -- Loaderbot - Floodgate\n            self = larger,\n            others = medium,\n        },\n    }\n    \n    ---@table<number, number>\n    modTable.npcIDs = {}\n    \n    modTable.playerMetaInformation = {\n        specId = nil,\n        isRdps = false,\n        isTank = false,\n        isMdps = false,\n        isHealer = false,\n        lastQuery = 0,\n    }\n    \n    local function GetCurrentSpecId()\n        local diff = GetTime() - modTable.playerMetaInformation.lastQuery\n        \n        if diff >= 60 then\n            modTable.playerMetaInformation.lastQuery = GetTime()\n            return PlayerUtil.GetCurrentSpecID()\n        end\n        \n        return modTable.playerMetaInformation.specId\n    end\n    \n    ---@return  boolean, boolean, boolean, boolean\n    function modTable.determinePlayerMetaInformation(specId)\n        local role = select(5, GetSpecializationInfoByID(specId))\n        \n        if role == \"NONE\" then\n            role = \"DAMAGER\"\n        end\n        \n        local isTank = false\n        local isHealer = false\n        local isRdps = false\n        local isMdps = false\n        \n        if role == \"TANK\" then\n            isTank = true\n        elseif role == \"HEALER\" then\n            isHealer = true\n        elseif role == \"DAMAGER\" then\n            isRdps = specId == 102 -- balance\n            or specId == 1467 -- devastation\n            or specId == 1473 -- augmentation\n            or specId == 253 -- beast mastery\n            or specId == 254 -- marksmanship\n            or specId == 62 -- arcane\n            or specId == 63 -- fire\n            or specId == 64 -- frost\n            or specId == 258 -- shadow\n            or specId == 262 -- elemental\n            or specId == 265 -- afflictin\n            or specId == 266 -- demonology\n            or specId == 267 -- destruction\n            \n            isMdps = not isRdps\n        end\n        \n        return isRdps, isTank, isMdps, isHealer\n    end\n    \n    ---@param defaultScale number\n    ---@param condition boolean\n    ---@return number\n    local function downscaleByOneIf(defaultScale, condition)\n        if condition then\n            if defaultScale == larger then\n                return medium\n            elseif defaultScale == medium then\n                return small\n            end\n        end\n        \n        return defaultScale\n    end\n    \n    function modTable.compile(force)\n        if not modTable.isActive then\n            return\n        end\n        \n        local specId = GetCurrentSpecId()\n        \n        if not force and specId == modTable.playerMetaInformation.specId then\n            return\n        end\n        \n        modTable.playerMetaInformation.specId = specId\n        \n        local isRdps, isTank, isMdps, isHealer = modTable.determinePlayerMetaInformation(specId)\n        \n        if\n        not force\n        and isRdps == modTable.playerMetaInformation.isRdps\n        and isTank == modTable.playerMetaInformation.isTank\n        and isMdps == modTable.playerMetaInformation.isMdps\n        and isHealer == modTable.playerMetaInformation.isHealer\n        then\n            return\n        end\n        \n        modTable.playerMetaInformation.isRdps = isRdps\n        modTable.playerMetaInformation.isTank = isTank\n        modTable.playerMetaInformation.isMdps = isMdps\n        modTable.playerMetaInformation.isHealer = isHealer\n        \n        table.wipe(modTable.npcIDs)\n        \n        local test = {\n            --[87329] = extrasmall, -- test dummy\n        }\n        -- raids\n        \n        local manaforgeOmega= {\n            [245705] = medium, -- Voidwarden\n        }\n        if not isTank then\n            manaforgeOmega[244922] = medium -- Shadowguard Phaseblade\n        end\n        \n        local liberationOfUndermine = {\n            [231935] = small, -- Junkyard Hyena\n            [236280] = small, -- Tiny Torq\n            [236284] = small, -- Fun-sized Flarendo\n            [231977] = medium, -- Darkfuse Technician\n        }\n        \n        local nerubarPalace = {\n            [219739] = small, -- Infested Spawn\n            [223674] = small, --Skitterer - Ansurek\n            [219746] = small, -- Tomb - Ansurek\n            [221344] = medium, -- Gloom Hatchling - Ansurek\n        }\n        local amirdrassil = {\n            [210231] = medium, -- Tainted Lasher, Gnarlroot\n            [211306] = extrasmall, -- Fiery Vines, Tindral\n        }\n        local vault = {\n            [194991] = medium, -- Oathsworn Vanguard\n            [191714] = small, -- Seeking Stormling\n        }\n        local sepulcher = {\n            [183669] = small, -- Fiendish Soul\n        }\n        local nathria = {\n            [169925] = small, -- Begrudging Waiter\n        }\n        \n        -- War Within dungeons\n        local ecoDomeAldani = {\n            [234870] = small, -- Invading Mite\n            [234912] = medium, -- Ravaging Scavenger\n            [245411] = medium, -- Ravaging Scavenger\n            [234960] = medium, -- Tamed Ruinstalker\n            [239379] = small, -- Unbound Ethereal\n        }\n        \n        local operationFloodgate = {\n            [231497] = medium, -- Bombshell crab\n            --[231014] = medium, -- Loaderbot\n            [229252] = medium, -- Darkfuse Hyena\n            [228144] = downscaleByOneIf(medium, isRdps or isMdps), -- Darkfuse Soldier\n        }\n        if not isTank then\n            operationFloodgate[227145] = medium -- Waterworks Crocolisk\n        end\n        \n        local theRookery = {\n            [219066] = small, -- Citizen\n        }\n        \n        local prioryOfTheSacredFlame = {\n            [212838] = small, --Arathi Neophyte\n            [207943] = extrasmall, --Arathi Neophyte\n            [206705] = small, -- Arathi Footman\n            [206699] = downscaleByOneIf(medium, isMdps or isTank), -- War lynx\n            [206694] = medium, -- Fervent Sharpshooter\n            [211140] = small, -- Arathi Neophyte - Last boss\n        }\n        \n        local darkflameCleft = {\n            [210148] = small, -- Menial Laborer\n            [210810] = small, -- Menial Laborer\n            [208457] = small, -- Skittering Darkness\n            [213008] = medium, -- Wriggling Darkspawn\n        }\n        \n        local cinderbrewMeadery = {\n            [218671] = medium, -- Pyromaniac\n            [217126] = extrasmall, --Over-indulged Patron\n            [214668] = small, -- Patron\n            [214920] = small, -- Tasting room attendant\n            [218865] = small, --Bee-let\n            [210270] = small, --Brew Drop\n            [223562] = small, --Brew Drop #2\n        }\n        \n        local stoneVault = {\n            [214287] = larger, --Earth Burst Totem\n        }\n        \n        local araKara = {\n            [216336] = small, --Ravenous Crawler\n            [216341] = small, --Jabbing Flyer\n            [218325] = extrasmall, --Swarming Flyer\n            [216337] = small, --Bloodworker\n            [215968] = small, -- Black blood\n            [219221] = small, --Ravenous Crawler (Summoned 2nd mini boss)\n        }\n        \n        local cityOfThreads = {\n            [220199] = small, --Battle Scarab\n            [216363] = medium, --Reenforced drone\n            [216365] = medium, --Carrier\n            [223357] = medium, --Conscript\n            [216329] = small, --Droplet\n            [220065] = small, --Umbral Weave\n            [222700] = small, --Umbral Weave\n            [219198] = medium, --Ravenous Scarab\n            [216342] = medium, -- Skittering Assistant\n        }\n        \n        local theDawnbreaker = {\n            [224616] = small, -- Animated Shadow\n            [213894] = medium, -- Nightfall Curseblade\n            [223995] = medium, -- Nightfall Curseblade\n        }\n        if not isTank then\n            theDawnbreaker[213895] = medium -- Nightfall Shadowalker\n        end\n        \n        \n        -- DF Dungeons\n        \n        local murozondsRise = {\n            [205151] = small, -- Tyr's Vanguard\n        }\n        \n        local galakrondsFall = {\n            [204536] = extrasmall, -- Blight Chunk\n            [206065] = extrasmall, -- Interval\n        }\n        \n        local hallsOfInfusion = {\n            [190923] = small, -- Zephyrling\n        }\n        \n        local neltharus = {\n            [192781] = small, -- Ore Elemental\n            [194389] = small, -- Lava Spawn\n        }\n        \n        local uldaman = {\n            [184134] = small, -- Scavenging Leaper\n            [186696] = larger, -- Quaking Totem\n        }\n        \n        local brackenhideHollow = {\n            [189299] = small, -- Decaying Slime\n            [192481] = small, -- Decaying Slime (boss adds)\n            [194330] = small, -- Decaying Slime (from big slime split)\n            [199916] = small, -- Decaying Slime\n            [194273] = small, -- Witherling\n            [187238] = small, -- Witherling\n            [189363] = extrasmall, -- Infected Lasher\n            [208994] = extrasmall, -- Infected Lasher\n            [194373] = small, -- Witherling\n            [190381] = larger, -- Rotburst Totem\n        }\n        \n        local algetharAcademy = {\n            [196642] = extrasmall, -- Hungry Lasher\n            [197398] = extrasmall, -- Hungry Lasher\n            [192329] = small, -- Territorial Eagle\n            [196694] = medium, -- Arcane Forager\n        }\n        \n        local azureVault = {\n            [191313] = extrasmall, -- Bubbling Sapling\n            [196559] = extrasmall, -- Volatile Sapling\n            [187246] = medium, -- Nullmagic Hornswog\n            [187242] = medium, -- Tarasek Looter\n            [187159] = small, -- Whelp\n        }\n        \n        local rubyLifePools = {\n            [189893] = extrasmall, -- Infused Whelp\n            [187894] = extrasmall, -- Infused Whelp\n            [194622] = extrasmall, -- Scorchling\n            [190205] = extrasmall, -- Scorchling\n            [197509] = extrasmall, -- Primal Thundercloud\n        }\n        \n        local nokhudOffensive = {\n            [195855] = small, -- Risen Warrior\n            [195875] = small, -- Desecrated Bakar\n            [196645] = small, -- Desecrated Bakar\n        }\n        \n        -- Shadowlands Dungeons\n        \n        local tazavesh = {\n            [178163] = small, -- Murkbrine Shorerunner - Gambit\n            [178394] = medium, -- Cartel Lackey - Streets\n            [176396] = medium, -- Defective Sorter - Streets\n            [177807] = medium, -- Customs Security\n            [179386] = medium, -- Corsair Officer\n            [180432] = small, -- Devoted Accomplice\n        }\n        if not isTank then\n            tazavesh[176394] = medium -- P.O.S.T. Worker\n            tazavesh[180015] = medium -- Burly Deckhand\n        end\n        \n        local theaterOfPain = {\n            [163089] = small, -- Disgusting Refuse\n            [169875] = medium, -- Shackled Soul\n            [167994] = medium, -- Ossified Conscript\n        }\n        \n        local necroticWake = {\n            [166264] = small, -- Spare Parts\n            [166266] = small, -- Spare Parts #2\n            [171500] = extrasmall, -- Shuffling Corpse\n            [165138] = small, -- Blight bag\n            [162729] = medium, -- Patchwerk Soldier\n            [163122] = small, -- Brittlebone Warrior\n            [164427] = small, -- Reanimated Warrior\n        }\n        \n        local mistsOfTirnaScithe = {\n            [165111] = medium, -- Drust Spiteclaw\n            [167117] = small, -- Larva\n        }\n        \n        local hallsOfAtonement = {\n            [167892] = small, -- Tormented Soul\n            [167806] = small, -- Animated Sin\n            [167610] = small, -- Anklebiter\n            [165415] = small, -- Toiling Groundskeeper\n            [164363] = medium, -- Undying Stonefiend - Echelon\n        }\n        if  isRdps then\n            hallsOfAtonement[164563] = medium -- Vicious Gargon\n            hallsOfAtonement[165515] = medium -- Depraved Darkblade\n        end\n        \n        local deOtherSide = {\n            [168986] = small, -- Skeletal Raptor\n        }\n        \n        local plaguefall = {\n            [168969] = small, -- Gushing Slime\n        }\n        \n        local sanguineDepths = {\n            [171455] = small, -- Stonewall Gargon\n            [168457] = small, -- Stonewall Gargon\n            [166589] = small, -- Animate Weapon\n        }\n        \n        --BFA Dungeons\n        \n        local theMotherlode = {\n            [130436] = medium, -- Off-Duty Laborer\n            [136006] = extrasmall, -- Rowdy Reveler\n            [136005] = extrasmall, -- Rowdy Reveler\n            [130437] = medium, -- Mine Rat\n            [133963] = small, -- Test Subject\n            [130653] = small, -- Wanton Sapper\n            [134005] = small, -- Shalebiter\n            [138369] = small, -- Footbomb Hooligan\n        }\n        \n        local mechagon = {\n            [144300] = extrasmall, -- Mechagon Citizen\n            [150547] = medium, -- Scrapbone Grunter\n            [144301] = small, -- Living Waste\n        }\n        \n        local siegeOfBoralus = {\n            [133990] = medium, -- Scrimshaw Gutter\n            [138002] = medium, -- Scrimshaw Gutter\n            [135258] = medium, -- Curseblade\n        }\n        \n        local atalDazar = {\n            [128435] = extrasmall, -- saurid\n        }\n        \n        local waycrestManor = {\n            [131669] = small, -- Jagged Hound\n        }\n        \n        local underrot = {\n            [131402] = extrasmall, -- Underrot Tick\n        }\n        \n        local freehold = {\n            [130024] = small, -- Soggy Shiprat\n        }\n        \n        -- Legion Dungeons\n        \n        local hallsOfValor = {\n            [97087] = medium, -- Valajar Champion\n            [96640] = medium, -- Valajar Marksman\n            [99922] = small, -- Ebonclaw Packmate\n            [96608] = medium, -- Ebonclaw Worg\n            [96609] = medium, -- Gildedfur Stag\n        }\n        \n        local darkheartThicket = {\n            [100529] = small, -- Hatespawn Slime\n            [101074] = small, -- Hatespawn Whelpling\n            [100991] = small, -- Strangling Roots\n            [107288] = small, -- Vilethorn Sapling\n        }\n        \n        local blackRookHold = {\n            [98677] = small, -- Rook Spiderling\n            [98900] = medium, -- Wyrmtongue Trickster\n            [102781] = extrasmall, -- Fel Bat Pup\n        }\n        \n        local courtOfStars = {\n            [105703] = small, -- Mana Wyrm,\n            [104295] = small, -- Blazing Imp\n        }\n        \n        local neltharionsLair = {\n            [96247] = extrasmall, -- Vileshard Crawler\n            [102430] = small, -- Tarspitter Slug\n        }\n        \n        -- WoD Dungeons\n        \n        local everbloom = {\n            [81864] = small, -- Dreadpetal\n            [84401] = small, -- Swift Sproutling\n        }\n        \n        local shadowmoonBurialGrounds = {\n            [75451] = small, -- Defiled Spirit (non-casting)\n            [77006] = small, -- Corpse Skitterling\n            [76444] = small, -- Subjugated Soul\n        }\n        -- MoP Dungeons\n        local templeOfTheJadeSerpent = {\n            [62358] = small, -- Corrupt Droplet\n            [58319] = small, -- Lesser Sha\n            [59598] = small, -- Lesser Sha\n        }\n        \n        -- Cata Dungeons\n        \n        local throneOfTheTides = {\n            [40923] = extrasmall, -- Unstable Corruption\n        }\n        \n        local vortexPinnacle = {\n            [205326] = medium, -- Gust Soldier\n            [45477] = medium, -- Gust Soldier\n            [45704] = small, -- Lurking Tempest\n            [204337] = small, -- Lurking Tempest\n            [45924] = medium, -- Turbulent Squall\n            [45922] = medium, -- Empyrean Assassin\n            [45926] = medium, -- Servant of Asaad\n            [45932] = small, -- Skyfall Star\n        }\n        \n        local grimBatol = {\n            [224853] = small, -- Hatchling\n            [39388] = medium, -- Boss Hatchling\n        }\n        \n        local misc = {\n            -- Fodder to the Flame demons\n            [169428] = small,\n            [169430] = small,\n            [169429] = small,\n            [169426] = small,\n            [169421] = small,\n            [169425] = small,\n            [168932] = small,\n            -- Misc\n            [189707] = small, -- Chaotic Motes, SL Fated affix\n            [229537] = larger, -- Void Emissary\n            [229296] = small, -- Orb of Ascendance\n        }\n        \n        local maps = {\n            test,\n            manaforgeOmega,\n            liberationOfUndermine,\n            ecoDomeAldani,\n            operationFloodgate,\n            theMotherlode,\n            theRookery,\n            prioryOfTheSacredFlame,\n            darkflameCleft,\n            cinderbrewMeadery,\n            theDawnbreaker,\n            stoneVault,\n            amirdrassil,\n            atalDazar,\n            waycrestManor,\n            darkheartThicket,\n            everbloom,\n            blackRookHold,\n            galakrondsFall,\n            throneOfTheTides,\n            templeOfTheJadeSerpent,\n            nokhudOffensive,\n            courtOfStars,\n            shadowmoonBurialGrounds,\n            algetharAcademy,\n            azureVault,\n            hallsOfValor,\n            rubyLifePools,\n            underrot,\n            freehold,\n            neltharionsLair,\n            vortexPinnacle,\n            hallsOfInfusion,\n            neltharus,\n            uldaman,\n            brackenhideHollow,\n            murozondsRise,\n            misc,\n            vault,\n            sepulcher,\n            nathria,\n            nerubarPalace,\n            araKara,\n            cityOfThreads,\n            tazavesh,\n            theaterOfPain,\n            necroticWake,\n            mistsOfTirnaScithe,\n            hallsOfAtonement,\n            deOtherSide,\n            plaguefall,\n            sanguineDepths,\n            grimBatol,\n            siegeOfBoralus,\n            mechagon,\n        }\n        \n        for i = 1, #maps do\n            local map = maps[i]\n            \n            for id, priority in pairs(map) do\n                modTable.npcIDs[id] = priority\n            end\n        end\n    end\n    \n    ---@param unit string\n    ---@return number|nil\n    function modTable.parseGUID(unit)\n        local guid = UnitGUID(unit)\n        \n        if not guid then\n            return nil\n        end\n        \n        local id = select(6, strsplit(\"-\", guid))\n        \n        return id and tonumber(id) or nil\n    end\n    \n    ---@param id number\n    ---@return boolean\n    function modTable.isSpitefulLike(id)\n        return spitefulLikes[id] ~= nil\n    end\n    \n    function modTable.getSpitefulLikeScale(id)\n        return spitefulLikes[id]\n    end\n    \n    ---@param unitId string\n    ---@return boolean\n    function modTable.targetsPlayer(unitId)\n        local targetName = UnitName(unitId .. \"target\")\n        \n        if not targetName then\n            return false\n        end\n        \n        return UnitIsUnit(targetName, \"player\")\n    end\nend",
["Player Logon"] = "function (modTable)\n    local specId = PlayerUtil.GetCurrentSpecID()\n    local isRdps, isTank, isMdps, isHealer = modTable.determinePlayerMetaInformation(specId)\n    \n    modTable.playerMetaInformation.specId = specId\n    modTable.playerMetaInformation.isRdps = isRdps\n    modTable.playerMetaInformation.isTank = isTank\n    modTable.playerMetaInformation.isMdps = isMdps\n    modTable.playerMetaInformation.isHealer = isHealer\n    \n    modTable.compile(true)\nend",
},
["Time"] = 1755150879,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 1041231,
["Enabled"] = true,
["Revision"] = 2975,
["semver"] = "",
["Author"] = "Jundies-Mal'ganis",
["Desc"] = "Allows you to scale a creatures nameplate based on it's importance in the dungeon.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["LastHookEdited"] = "",
["Options"] = {
{
["Type"] = 4,
["Key"] = "scale",
["Value"] = true,
["Name"] = "Enable Scaling",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Allows nameplates to scale based on priority.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Set scaling value for mid priority.",
["Min"] = 0,
["Key"] = "midScale",
["Value"] = 0.9,
["Name"] = "Mid prio",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Set scaling value for low priority.",
["Min"] = 0,
["Key"] = "lowScale",
["Value"] = 0.8,
["Name"] = "Low prio",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Set scaling value for extra low scale",
["Min"] = 0,
["Key"] = "extraLowScale",
["Value"] = 0.7,
["Name"] = "Very Low Prio",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 2,
["Desc"] = "Set scaling value for higher priority",
["Min"] = 0,
["Key"] = "higherScale",
["Value"] = 1.1,
["Name"] = "Higher Priority",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
},
["Name"] = "Priority based scaling - Jundies",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["UID"] = "0x67d8756f293e1e",
["Hooks"] = {
["Cast Update"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.EnhancedCastBar(unitId, unitFrame)\nend",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable) end",
["Cast Start"] = "function (self, unitId, unitFrame, envTable, modTable)    \n    modTable.EnhancedCastBar(unitId, unitFrame)\nend",
["Initialization"] = "function  (modTable)\n    modTable.reflectableSpells = {}\n    \n    local playerClass = select(3, UnitClass(\"player\"))\n    \n    -- Checks to see if a spell is on cooldown, not counting the 1.5s cooldown from global cooldown.\n    ---@param spellID number\n    ---@return boolean\n    local function IsSpellOnCooldown_IgnoreGCD(spellID)\n        local gcdInfo = C_Spell.GetSpellCooldown(61304)\n        local GCD_expirationTime = gcdInfo.startTime + gcdInfo.duration\n        local spellInfo = C_Spell.GetSpellCooldown(spellID)\n        local spellReadyTime = spellInfo.startTime + spellInfo.duration\n        return spellReadyTime > GCD_expirationTime\n    end\n    \n    -- Create a tick if it doesn't already exist. The tick will be used to show when interrupt will be available.\n    local function MaybeCreateTickTexture(castBar)\n        if not castBar.tick then\n            castBar.tick = castBar:CreateTexture(nil, \"overlay\")\n            castBar.tick:SetDrawLayer(\"overlay\", 4)\n            castBar.tick:SetBlendMode(\"DISABLE\")\n            --castBar.tick:SetHeight(castBar:GetHeight())\n            castBar.tick:SetHeight(8)\n            castBar.tick:SetTexture(Plater.SparkTextures[8])\n            castBar.tick:SetWidth(2)\n            castBar.tick:SetVertexColor(Plater:ParseColors(modTable.config.colorTick))\n        end\n    end\n    \n    ---@param unitId string\n    ---@return boolean\n    local function UnitIsStillCasting(unitId)\n        if UnitCastingInfo(unitId) ~= nil then\n            return true\n        end\n        \n        if UnitChannelInfo(unitId) ~= nil then\n            return true\n        end\n        \n        return false\n    end\n    \n    local function CompatGetSpecialization()\n        if GetSpecialization then\n            return GetSpecialization()\n        end\n        \n        return C_SpecializationInfo.GetSpecialization()\n    end\n    \n    local function DetermineInterruptId()\n        if playerClass == 1 then -- Warrior\n            return function()\n                return 6552 -- Pummel\n            end\n        end\n        \n        if playerClass == 2 then -- Paladin\n            return function()\n                return 96231 -- Rebuke\n            end\n        end\n        \n        if playerClass == 3 then -- Hunter\n            return function()\n                local spec = CompatGetSpecialization()\n                \n                if spec == 3 then -- survival\n                    return 187707 -- muzzle\n                end\n                \n                return 147362 -- counter shot\n            end\n        end\n        \n        if playerClass == 4 then -- rogue\n            return function()\n                return 1766 -- kick\n            end\n        end\n        \n        if playerClass == 5 then -- priest\n            return function()\n                local spec = CompatGetSpecialization()\n                \n                if spec == 3 then -- shadow\n                    return 15487 -- silence\n                end\n                \n                return nil\n            end\n        end\n        \n        if playerClass == 6 then -- death knight\n            return function()\n                return 47528 -- mind freeze\n            end\n        end\n        \n        if playerClass == 7 then -- shaman\n            return function()\n                return 57994\n            end\n        end\n        \n        if playerClass == 8 then -- mage\n            return function()\n                return 2139 -- counterspell\n            end\n        end\n        \n        if playerClass == 9 then -- warlock\n            return function()\n                if IsSpellKnown(89766, true) then -- felguard: axe toss\n                    return 89766\n                end\n                \n                if IsSpellKnown(19647, true) then -- felhunter: spell lock\n                    return 19647\n                end\n                \n                if\n                C_UnitAuras.GetPlayerAuraBySpellID(196099) ~= nil and IsSpellKnownOrOverridesKnown(132409, false)\n                then -- spell lock via grimoire of sacrifice\n                    return 132409\n                end\n                \n                return nil\n            end\n        end\n        \n        if playerClass == 10 then -- monk\n            return function()\n                return 116705 -- spear hand strike\n            end\n        end\n        \n        if playerClass == 11 then -- druid\n            return function()\n                local spec = CompatGetSpecialization()\n                \n                if spec == 1 then -- balance\n                    return 78675 -- solar beam\n                end\n                \n                return 106839 -- skull bash\n            end\n        end\n        \n        if playerClass == 12 then -- demon hunter\n            return function()\n                return 183752 -- disrupt\n            end\n        end\n        \n        if playerClass == 13 then -- evoker\n            return function()\n                return 351338 -- quell\n            end\n        end\n    end\n    \n    local GetInterruptID = DetermineInterruptId()\n    local playerIsWarlock = playerClass == 9\n    local playerName = UnitName(\"player\")\n    \n    ---@param unitId string\n    ---@param unitFrame Frame\n    function modTable.EnhancedCastBar(unitId, unitFrame)\n        local castBar = unitFrame.castBar\n        \n        if castBar.tick ~= nil then\n            castBar.tick:Hide()\n        end\n        \n        if castBar.IsInterrupted or castBar.interrupted or not UnitIsStillCasting(unitId) then\n            return\n        end\n        \n        local targetUnitId = unitId .. \"target\"\n        local targetName = UnitExists(targetUnitId) and UnitName(targetUnitId) or nil\n        local isTargettingMe = targetName == playerName\n        castBar.Text:SetText(castBar.SpellName)\n        \n        -- Cast is targetting a specific unit\n        if targetName then\n            -- Nameplate flash options\n            if isTargettingMe and modTable.config.nameplateFlash then\n                -- Default value of true since it is turned on in the options\n                local showNameplateFlash = true\n                \n                if\n                modTable.config.hideNameplateFlashSolo\n                and not UnitInParty(\"player\")\n                and not UnitInRaid(\"player\")\n                then\n                    showNameplateFlash = false\n                end\n                \n                if modTable.config.hideFlashAsTank and GetSpecializationRole(GetSpecialization()) == \"TANK\" then\n                    showNameplateFlash = false\n                end\n                \n                -- Show nameplate flash if conditions met\n                if showNameplateFlash then\n                    Plater.FlashNameplateBody(unitFrame)\n                end\n            end\n            \n            -- Target name in cast bar options\n            if modTable.config.showTargetName then\n                if modTable.config.replaceName and isTargettingMe then\n                    targetName = \"Me\"\n                end\n                \n                local castBarWidth = castBar:GetWidth()\n                -- clip cast name at 60% of cast bar width always\n                DetailsFramework:TruncateText(castBar.Text, castBarWidth * 0.6)\n                \n                -- first, truncate the spell name to make space for the target name\n                local currentText = castBar.Text:GetText()\n                if currentText ~= nil and currentText ~= \"\" then\n                    local castText = currentText .. \" \" .. Plater.SetTextColorByClass(targetUnitId, targetName)\n                    \n                    if\n                    modTable.config.hideNameSolo\n                    and not UnitInParty(\"player\")\n                    and not UnitInRaid(\"player\")\n                    and isTargettingMe\n                    then\n                        castText = currentText\n                    end\n                    \n                    castBar.Text:SetText(castText)\n                    -- now truncate again to ensure the target name doesn't overlap with the cast duration\n                    DetailsFramework:TruncateText(castBar.Text, castBarWidth * 0.9)\n                end\n            end\n        end\n        \n        if not modTable.config.showInterruptColor then\n            return\n        end\n        \n        local interruptID = GetInterruptID()\n        local nextColor = modTable.config.colorProtected\n        \n        if interruptID == nil then\n            nextColor = modTable.config.colorNoInterrupt\n        else\n            -- Interrupt bar color options\n            local canInterrupt = castBar.canInterrupt\n            local castEndTime = castBar.spellEndTime\n            \n            local interruptInfo = C_Spell.GetSpellCooldown(interruptID)\n            local interruptReadyTime = interruptInfo.startTime + interruptInfo.duration\n            \n            if canInterrupt then\n                -- Check to see if the spell is known/talented\n                if IsSpellKnown(interruptID, playerIsWarlock) or IsSpellKnownOrOverridesKnown(interruptID, false) then\n                    if interruptReadyTime == 0 then\n                        nextColor = modTable.config.colorInterruptAvailable\n                    elseif\n                    modTable.config.showSecondaryInterrupts\n                    and playerClass == 2 -- paladin\n                    and IsSpellKnown(31935) -- avenger's shield\n                    and not IsSpellOnCooldown_IgnoreGCD(31935)\n                    then\n                        nextColor = modTable.config.colorSecondaryInterrupt\n                    elseif interruptReadyTime < (castEndTime - 0.25) then\n                        MaybeCreateTickTexture(castBar)\n                        castBar.tick:Show()\n                        local tickLocation = (interruptInfo.startTime + interruptInfo.duration - castBar.spellStartTime)\n                        / castBar.maxValue -- castBar.spellStartTime + 0.25\n                        if castBar.channeling then\n                            tickLocation = 1 - tickLocation\n                        end\n                        castBar.tick:SetPoint(\"center\", castBar, \"left\", tickLocation * castBar:GetWidth(), 0)\n                        \n                        nextColor = modTable.config.colorInterruptSoon\n                    elseif interruptReadyTime >= (castEndTime - 0.25) then\n                        nextColor = modTable.config.colorNoInterrupt\n                    end\n                else\n                    nextColor = modTable.config.colorNoInterrupt\n                end\n            end\n            \n            -- Spell Reflection coloring\n            if\n            modTable.config.showSecondaryInterrupts\n            and isTargettingMe\n            and playerClass == 1\n            and IsSpellKnown(23920) -- spell reflect\n            and not IsSpellOnCooldown_IgnoreGCD(23920)\n            and modTable.reflectableSpells[castBar.SpellID] == true\n            then\n                -- Color the bar if the spell is reflectable\n                nextColor = modTable.config.colorSecondaryInterrupt\n            end\n        end\n        \n        local currentR, currentG, currentB, currentA = castBar:GetColor()\n        local nextR, nextG, nextB, nextA = unpack(nextColor)\n        \n        if currentR ~= nextR or currentG ~= nextG or currentB ~= nextB or currentA ~= nextA then\n            Plater.SetCastBarColor(unitFrame, nextColor)\n        end\n    end\n    \n    if playerClass == 1 then\n        --TWW Dungeons\n        \n        local ecoDomeAldani = {\n            1221190, -- Gluttonous Miasma\n            1222815, -- Arcane Bolt\n            1229510, -- Arcing Zap\n        }\n        \n        local operationFloodgate = {\n            473112, -- Mudslide - Boss\n            --469721, -- Backwash - RIP IN PEACE BUBBLES\n            465871, -- Blood Bolt\n            1214468, -- Trickshot\n            465754, -- Flamethrower - Unsure if targetted\n            465595, -- Lightning Bolt\n            462771, -- Surveying Beam\n        }\n        \n        local araKara = {\n            436322, -- Poison bolt - atik\n            434786, -- Web bolt\n        }\n        \n        local cityOfThreads = {\n            442536, -- Grimweave Blast\n            443427, -- Web Bolt\n            439341, -- Splice - Izo\n            446717, -- Umbral Weave\n            438860, -- Umbral Weave - Izo\n        }\n        \n        local theDawnbreaker = {\n            428086, -- Shadow bolt\n            451114, -- Congealed Shadow\n            451119, -- Abyssal Blast\n            431333, -- Tormenting Beam\n            432448, -- Stygian Seed\n            451113, -- Web Bolt\n            431303, -- Night Bolt\n        }\n        \n        local theStonevault = {\n            429422, -- Stone Bolt\n            426283, -- Arcing Void\n            429110, --Alloy Bolt\n            429545, -- Censoring Gear\n            459210, -- Shadow Claw\n            430097, -- Molten Metal - Speaker Brokk\n        }\n        \n        local cinderbrewMeadery = {\n            453989, -- Boiling Flames\n            454318, -- Boiling Flames\n            454319, -- Boiling Flames\n            437721, -- Boiling Flames\n        }\n        \n        local darkflameCleft = {\n            421817, --Wicklighter Barrage\n            421910, -- Extinguishing Gust\n            423479, -- Wickligher Bolt\n            426677, -- Candleflame Bolt\n            428563, -- Flame Bolt\n        }\n        \n        local prioryOfTheSacredFlame = {\n            424421, --Fireball - Boss\n            423015, -- Castigator's Shield - Boss\n            423536, --Holy Smite - Boss\n            427357, -- Holy Smite\n            427469, -- Fireball\n            427950, -- Seal of Flame\n        }\n        \n        local theRookery = {\n            430805, -- Arcing Void\n            430179, -- Seeping Corruption\n            430109, -- Lightning Bolt\n            430238, -- Void Bolt\n        }\n        \n        --DF Dungeons\n        \n        local murozondsRise = {\n            400165, -- Epoch Bolt\n            413607, -- Corroding Volley\n            418202, -- Temporal Blast\n            417030, -- Fireball\n            411763, -- Infinite Blast\n            407121, -- Immolate\n        }\n        \n        local galakrondsFall = {\n            415435, -- Infinite Bolt\n            413590, -- Noxious Ejection\n            411958, -- Stonebolt\n        }\n        \n        local rubyLifePools = {\n            373803, -- Cold Claws boss adds\n            372683, -- Cold Claws trash\n            372808, -- Frigid Shard\n            373693, -- Living Bomb\n            371984, -- Icebolt\n            384197, -- Cinderbolt\n            384194, -- Cinderbolt\n            392576, -- Thunderbolt\n            385310, -- Lightning Bolt\n            385536, -- Flame Dance\n        }\n        \n        local azureVault = {\n            374789, -- Infused Strike\n            373932, -- Illusionary Bolt\n            384978, -- Dragon Strike\n            377503, -- Condensed Frost\n            389804, -- Heavy Tome\n            371306, -- Arcane Bolt\n        }\n        \n        local brackenhideHollow = {\n            382249, -- Earth Bolt\n            381694, -- Decayed Senses\n            378155, -- Earth Bolt (boss)\n            382474, -- Decay Surge\n        }\n        \n        local hallsOfInfusion = {\n            374020, -- Containment Beam\n            389443, -- Purifying Blast\n            374706, -- Pyretic Burst\n            375950, -- Ice Shard\n            385963, -- Frost Shock\n            395690, -- Lightning Blast\n            387504, -- Squall Buffet\n            387571, -- Focused Deluge\n        }\n        \n        local uldaman = {\n            369674, -- Stone Spike\n            369675, -- Chain Lightning\n            372718, -- Earthen Shards\n            369399, -- Stone Bolt\n            369365, -- Curse of Stone\n            377395, -- Time Sink\n        }\n        \n        local neltharus = {\n            378818, -- Magma Conflagration\n            372538, -- Melt\n            383231, -- Lava Bolt\n        }\n        \n        local nokhudOffensive = {\n            387125, -- Thunderstrike\n            387127, -- Chain Lightning\n            386012, -- Stormbolt\n            387613, -- Death Bolt\n            382670, -- Gale Arrow\n            376827, -- Conductive Strike\n            384761, -- Wind Burst\n            396206, -- Storm Shock\n            381530, -- Storm Shock\n        }\n        \n        local algetharAcademy = {\n            388862, -- Surge\n            377991, -- Storm Slash\n            387975, -- Arcane Missiles\n        }\n        \n        --Shadowlands Dungeons\n        \n        local tazavesh = {\n            354297, -- Hyperlight Bolt - Gambit\n            356843, -- Brackish Bolt - Gambit\n            355225, -- Waterbolt - Gambit\n            346006, -- Impound Contraband - Streets\n            357196, -- Hyperlight Bolt - Streets\n            355963, -- Hard Light Baton - Streets\n            353836, -- Hyperlight Bolt - Streets\n            356537, -- Empowered Glyph of Restraint - Zo'honn\n            355930, -- Spark burn - Streets\n            355641, -- Scintillate - Streets\n        }\n        \n        local hallsOfAtonement = {\n            328322, -- Villainous Bolt\n            323538, -- Anima Bolt / Bolt of Power\n            338003, -- Wicked Bolt\n            325700, -- Collect Sins\n            326829, -- Wicked Bolt - Sigar\n        }\n        \n        local theaterOfPain = {\n            1216475, -- Necrotic Bolt - Kul'Tharok\n            1217138, -- Necrotic Bolt - Sathel\n            319669, -- Spectral Reach - Boss\n            324589, -- Death Bolt - Boss add\n            341969, -- Withering Discharge\n            330697, -- Decaying Strike\n            330784, -- Necrotic Bolt\n            330810, -- Bind Soul\n            333299, -- Curse of Desolation\n            330875, -- Spirit Frost\n        }\n        \n        local mistsOfTirnaScithe = {\n            332767, --Spirit Bolt\n            323057, --Spirit Bolt - Boss\n            332557, --Soul Split\n            463217, --Anima Slash\n            325223, --Anima Injection\n            332486, --Overgrowth\n        }\n        \n        local theNecroticWake = {\n            328667, --Frostbolt Volley\n            333623, --Frostbolt Volley\n            326574, --Noxious Fog\n            320788, --Frozen Binds\n            322274, --Enfeeble\n            334748, --Drain Fluids\n            320462, --Necrotic Bolt\n            333479, --Spew Disease\n            323347, --Clinging Darkness\n            333602, --Frostbolt\n        }\n        \n        --BFA Dungeons\n        \n        local mechagonWorkshop = {\n            291878, -- Pulse Blast - 4th boss\n            294860, -- Blossom Blast - 3rd Boss\n            294195, -- Arcing Zap\n            293827, -- Giga-Wallop\n        }\n        \n        local theMotherlode = {\n            263202, -- Rock Lance\n            263628, -- Charged Shield\n            280604, -- Iced Spritzer\n            262268, -- Caustic Compound\n            268846, -- Echo Blade\n            262794, -- Mind lash\n            260318, -- Alpha Cannon -- Mogul Razdunk\n        }\n        \n        local siegeOfBoralus = {\n            272581, -- Water bolt\n            257063, -- Brackish bolt\n        }\n        \n        local waycrestManor = {\n            265372, -- Shadow Cleave\n            263943, -- Etch\n            264105, -- Runic Mark\n            260701, -- Bramble Bolt\n            260699, -- Soul Bolt\n            260700, -- Ruinous Bolt\n            266036, -- Drain Essence\n            264024, -- Soul Bolt\n            426541, -- Runic Bolt\n            264556, -- Tearing Strike\n            264153, -- Spit\n            278444, -- Infest\n            265881, -- Decaying Touch\n            265880, -- Dread Mark\n            268278, -- Wracking Chord\n            261438, -- Wasting Strike\n            261440, -- Virulent Pathogen\n        }\n        \n        local atalDazar = {\n            253562, -- Wildfire\n            254959, -- Soul Burn\n            252923, -- Venom Blast\n            252687, -- Venomfang Strike\n            250096, -- Wracking Pain\n        }\n        \n        local underrot = {\n            265084, -- Blood Bolt\n            260879, -- Blood Bolt (boss)\n            278961, -- Decaying Mind\n            266265, -- Wicked Embrace\n            272180, -- Void Spit\n        }\n        \n        local freehold = {\n            259092, -- Lightning Bolt\n            257908, -- Oiled Blade\n            281420, -- Water Bolt\n        }\n        \n        --Legion Dungeons\n        \n        local darkheartThicket = {\n            204243, -- Tormenting Eye\n            200238, -- Feed on the Weak\n            200185, -- Nightmare Bolt\n            200684, -- Nightmare Toxin\n            200642, -- Despair\n            201411, -- Firebolt\n            201837, -- Shadow Bolt\n        }\n        \n        local blackRookHold = {\n            199663, -- Soul Blast\n            200248, -- Arcane Blitz\n        }\n        \n        local neltharionsLair = {\n            186269, -- Stone Bolt\n            198496, -- Sunder\n            210150, -- Toxic Retch\n            200732, -- Molten Crash\n        }\n        \n        local hallsOfValor = {\n            198595, -- Thunderous Bolt\n            198962, -- Shattered Rune\n            198959, -- Etch\n            191976, -- Arcing Bolt\n            192288, -- Searing Light\n        }\n        \n        local courtOfStars = {\n            209036, -- Throw Torch\n            209413, -- Suppress\n            211406, -- Firebolt\n            211473, -- Shadow Slash\n            373364, -- Vampiric Claws\n        }\n        \n        --WoD Dungeons\n        \n        local everbloom = {\n            169657, -- Poisonous Claws\n            168040, -- Nature's Wrath\n            168092, -- Water Bolt\n            169840, -- Frostbolt\n            169841, -- Arcane Blast\n            169839, -- Pyroblast\n            427858, -- Fireball\n            164965, -- Choking Vines\n        }\n        \n        local shadowmoonBurialGrounds = {\n            152814, -- Shadow Bolt\n            152819, -- Shadow Word: Frailty\n            156776, -- Rending Voidlash\n            398206, -- Death Blast\n            153067, -- Void Devastation\n            153524, -- Plague Spit\n        }\n        \n        --MoP Dungeons\n        \n        local templeOfTheJadeSerpent = {\n            397888, -- Hydrolance\n            114803, -- Throw Torch\n            114571, -- Agony\n            397914, -- Defiling Mist\n            397931, -- Dark Claw\n            106823, -- Serpent Strike\n        }\n        \n        --Cata Dungeons\n        \n        local throneOfTheTides = {\n            426731, -- Water Bolt\n            428542, -- Crushing Depths\n            426768, -- Lightning Bolt\n            75992, -- Lightning Surge\n            428374, -- Focused Tempest\n            426783, -- Mind Flay\n            429048, -- Flame Shock\n            429173, -- Mind Rot\n            429176, -- Aquablast\n            428526, -- Ink Blast\n            428889, -- Foul Bolt\n        }\n        \n        local vortexPinnacle = {\n            410873, -- Rushing Wind\n            86331, -- Lightning Bolt\n            411019, -- Starlight\n            87762, -- Lightning Lash\n            87622, -- Chain Lightning\n        }\n        \n        local grimBatol = {\n            447966, --Shadowflame bolt (Boss)\n            76369, --Shadowflame bolt (adds)\n            450087, --Depth's Grasp\n            451971, --Lava Fist\n            451241, --Shadowflame Slash\n        }\n        \n        -- Raids\n        \n        local manaforgeOmega = {\n            1241100, -- Mystic Lash - Soulbinder Naazindhri\n            1224812, -- Vanquish - Nexus-King Salhadaar\n            1227529, -- Banishment - Nexus-King Salhadaar\n        }\n        \n        local liberationOfUndermine = {\n            460847, --Electric Blast - Reel Assistant - One-armed bandit\n            1219384, -- Scrap Rockets - Scrapmaster - Stix Bunkjunker\n        }\n        \n        local nerubarPalace = {\n            438807, --Vicious Bite - Broodtwister\n            441362, --Volatile Concoction - Broodtwister\n            441772, --Void Bolt - Silken Court\n            438200, --Poison Bolt - Silken Court\n        }\n        \n        local amidrassil = {\n            431302, -- Fyr'alath's Flame, Fyrakk\n            421284, -- Coiling Flames, Volcoross\n        }\n        \n        local aberrus = {\n            403203, -- Flame Slash, Amalgamation Chamber\n            403699, -- Shadow Spike\n            397386, -- Lava Bolt, trash\n            410351, -- Flaming Cudgel, Assault\n        }\n        \n        local vault = {\n            396040, -- Pyroblast, Eranog\n            372394, -- Lightning Bolt, Council\n            372315, -- Frost Spike\n            372275, -- Chain Lightning\n            385812, -- Aerial Slash, Dathea\n            375716, -- Ice Barrage, Diurna\n            385553, -- Storm Bolt\n            375653, -- Static Jolt\n        }\n        \n        local zones = {\n            manaforgeOmega, \n            liberationOfUndermine,\n            ecoDomeAldani,\n            tazavesh,\n            hallsOfAtonement,\n            operationFloodgate,\n            theaterOfPain,\n            theMotherlode,\n            mechagonWorkshop,\n            nerubarPalace,\n            araKara,\n            cityOfThreads,\n            grimBatol,\n            mistsOfTirnaScithe,\n            siegeOfBoralus,\n            theDawnbreaker,\n            theNecroticWake,\n            theStonevault,\n            cinderbrewMeadery,\n            darkflameCleft,\n            prioryOfTheSacredFlame,\n            theRookery,\n            rubyLifePools,\n            azureVault,\n            brackenhideHollow,\n            uldaman,\n            neltharus,\n            algetharAcademy,\n            nokhudOffensive,\n            hallsOfInfusion,\n            darkheartThicket,\n            everbloom,\n            throneOfTheTides,\n            waycrestManor,\n            atalDazar,\n            blackRookHold,\n            vortexPinnacle,\n            underrot,\n            freehold,\n            neltharionsLair,\n            templeOfTheJadeSerpent,\n            courtOfStars,\n            shadowmoonBurialGrounds,\n            hallsOfValor,\n            murozondsRise,\n            galakrondsFall,\n            amidrassil,\n            aberrus,\n            vault,\n        }\n        \n        for i = 1, #zones do\n            local zone = zones[i]\n            \n            for k = 1, #zone do\n                local id = zone[k]\n                modTable.reflectableSpells[id] = true\n            end\n        end\n    end\nend",
["Cast Stop"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if unitFrame.castBar.tick then\n        unitFrame.castBar.tick:Hide()\n    end\nend",
},
["Time"] = 1755151105,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 429383,
["Enabled"] = true,
["Revision"] = 2324,
["semver"] = "",
["Author"] = "Nimeshady-Zul'jin",
["Desc"] = "Shows who a cast is targeting in the cast bar as well as other configurable options.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["LastHookEdited"] = "",
["Options"] = {
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Feature - Custom cast bar coloring:",
["Name"] = "CUSTOM CAST BAR COLORS",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showInterruptColor",
["Value"] = true,
["Name"] = "Enable custom colored enemy cast bars.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When an enemy is casting the cast bar will change to the colors below based on the status of you being able to interrupt the cast.",
},
{
["Type"] = 4,
["Key"] = "showSecondaryInterrupts",
["Value"] = true,
["Name"] = "Enable support for secondary interrupts: Avenger's Shield (Paladin), Spell Reflection (Warrior).",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Colors casts that can be reflected with Spell Reflection (Warrior) and interrupted with Avenger's Shield (Paladin).",
},
{
["Type"] = 1,
["Key"] = "colorInterruptAvailable",
["Value"] = {
1,
0.96078437566757,
0.070588238537312,
1,
},
["Name"] = "Color when my primary interrupt is available.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "This color will be used when you have an interrupt available to interrupt the current cast.",
},
{
["Type"] = 1,
["Key"] = "colorInterruptSoon",
["Value"] = {
1,
0.96078437566757,
0.070588238537312,
1,
},
["Name"] = "Color when my primary interrupt is down but will be available before cast finishes.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "This color will be used when you have an interrupt on cooldown but it will be available to interrupt the current cast.",
},
{
["Type"] = 1,
["Key"] = "colorNoInterrupt",
["Value"] = {
1,
0.49411767721176,
0.13725490868092,
1,
},
["Name"] = "Color when my primary interrupt is unavailable.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "This color will be used when you do not have an interrupt available to interrupt the current cast",
},
{
["Type"] = 1,
["Key"] = "colorSecondaryInterrupt",
["Value"] = {
1,
0.0078431377187371,
0.78431379795074,
1,
},
["Name"] = "Color for secondary interrupts. (Avenger's Shield and Spell Reflection)",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "This color will be used when the current cast targeting you can be reflected with Spell Reflection or interrupted with Avenger's Shield. Only active when playing the appropriate class with the skill off cooldown.",
},
{
["Type"] = 1,
["Key"] = "colorProtected",
["Value"] = {
0.80784320831299,
0.29411765933037,
0.28627452254295,
1,
},
["Name"] = "Color for casts that are protected/un-interruptable.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "This color will be used when the current cast can not be interrupted by a standard interrupt.",
},
{
["Type"] = 1,
["Key"] = "colorTick",
["Value"] = {
0,
1,
0.0078431377187371,
1,
},
["Name"] = "Color of interrupt available tick. (Hover for more info)",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "When your interrupt is currently down but will become available before the current cast completes a tick will appear in the cast bar showing you the exact position in the cast you will be able to interrupt the cast. You can customize the color of the tick using this setting.  YOU MUST /RELOAD YOUR UI AFTER CHANGING THIS COLOR.",
},
{
["Type"] = 5,
["Key"] = "option4",
["Value"] = "Feature - Show name of target in the cast bar:",
["Name"] = "Settings Target Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showTargetName",
["Value"] = true,
["Name"] = "Show the name of cast targets in the cast bar.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When an enemy is casting a spell at a target, the targets name will appear in the cast bar.",
},
{
["Type"] = 4,
["Key"] = "hideNameSolo",
["Value"] = false,
["Name"] = "Hide my name when not in a party.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When you are not in a party or raid group casts targetting you will not display your name in the cast bar.",
},
{
["Type"] = 4,
["Key"] = "replaceName",
["Value"] = false,
["Name"] = "Show \"Me\" instead of my character name.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When targetted by casts, instead of showing your character name it will show \"Me\".",
},
{
["Type"] = 5,
["Key"] = "option8",
["Value"] = "Feature - Flash nameplates when a spell targets you:",
["Name"] = "Settings Border Flash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "Namplate Flash",
},
{
["Type"] = 4,
["Key"] = "nameplateFlash",
["Value"] = false,
["Name"] = "Flash the nameplates of enemies that are casting a spell or ability targeting me.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When an enemy is targetting you with a cast, this option will flash the nameplate of that enemy to indicate that cast is targeting you.",
},
{
["Type"] = 4,
["Key"] = "hideNameplateFlashSolo",
["Value"] = true,
["Name"] = "Hide flash effect when not in a party.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "The flash effect will be hidden when you are playing solo.",
},
{
["Type"] = 4,
["Key"] = "hideFlashAsTank",
["Value"] = true,
["Name"] = "Hide flash effect when I'm playing a tank specialization.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "The flash effect will be hidden when you are playing as a tank specialization.",
},
},
["Name"] = "Enhanced Castbar - Jundies",
},
{
["OptionsValues"] = {
["color2"] = {
0.960784375667572,
0.5176470875740051,
0.6470588445663452,
1,
},
["ids"] = {
{
"457129",
"color1",
},
{
"442679",
"color1",
},
},
["color1"] = {
0,
1,
0.2862745225429535,
1,
},
},
["HooksTemp"] = {
},
["UID"] = "0x6892f0222771f46",
["Hooks"] = {
["Initialization"] = "function (modTable)\n    ---@type PlaterRecolorNameConfig\n    ---@key ids number[]\n    ---@key color number[]\n    local config = {}\n    \n    local colors = {\n        color1 = modTable.config.color1,\n        color2 = modTable.config.color2,\n        color3 = modTable.config.color3,\n    }\n    \n    for idString, colorReference in pairs(modTable.config.ids) do\n        if colors[colorReference] then\n            local ids = {}\n            \n            for num in idString:gmatch(\"%d+\") do\n                table.insert(ids, tonumber(num))\n            end\n            \n            if #ids > 0 then\n                table.insert(config, {\n                        ids = ids,\n                        color = colors[colorReference],\n                })\n            end\n        end\n    end\n    \n    -- sort config by amount of #ids present in desc order for matching reasons below\n    table.sort(config, function(a, b)\n            return #a.ids > #b.ids\n    end)\n    \n    local defaultColor = { 1, 1, 1, 1 }\n    \n    function modTable.MaybePerformColorChange(unitFrame)\n        local possibleNextColors = {}\n        local prioritiesSeen = {}\n        \n        for _, auraInfo in pairs(config) do\n            local match = true\n            \n            for _, id in pairs(auraInfo.ids) do\n                if not Plater.NameplateHasAura(unitFrame, id) then\n                    match = false\n                    break\n                end\n            end\n            \n            if match then\n                local priority = #auraInfo.ids\n                \n                table.insert(possibleNextColors, {\n                        color = auraInfo.color,\n                        priority = priority,\n                })\n                \n                prioritiesSeen[priority] = true\n            end\n            \n            -- the moment we see 2 diff matches with varying priority, since we traversed desc we must have a match since all further possible matches\n            -- must have an even lower priority which can never match\n            if #prioritiesSeen > 1 then\n                break\n            end\n        end\n        \n        table.sort(possibleNextColors, function(a, b)\n                return a.priority > b.priority\n        end)\n        \n        local currentR, currentG, currentB, currentA = unitFrame.healthBar.unitName:GetTextColor()\n        local nextR, nextG, nextB, nextA = unpack(possibleNextColors[1] and possibleNextColors[1].color or defaultColor)\n        \n        if currentR ~= nextR or currentG ~= nextG or currentB ~= nextB or currentA ~= nextA then\n            unitFrame.healthBar.unitName:SetTextColor(nextR, nextG, nextB, nextA)\n        end\n    end\nend\n\n\n-- 1 = 457129 - Deathstalker's Mark\n-- 2 = 442679 - Reaver's Mark",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.MaybePerformColorChange(unitFrame)\nend",
},
["Time"] = 1755151150,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["Icon"] = 4667421,
["Enabled"] = false,
["Revision"] = 116,
["Options"] = {
{
["Type"] = 1,
["Key"] = "color1",
["Value"] = {
0,
1,
0.2862745225429535,
1,
},
["Name"] = "color1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "color2",
["Value"] = {
0.960784375667572,
0.5176470875740051,
0.6470588445663452,
1,
},
["Name"] = "color2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "color3",
["Value"] = {
0,
0.4392157196998596,
0.8705883026123047,
1,
},
["Name"] = "color3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 7,
["Key"] = "ids",
["Value"] = {
{
"457129",
"color1",
},
{
"442679",
"color1",
},
},
["Name"] = "Aura Config",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "",
},
},
["Author"] = "Ljósberinn-Blackmoore",
["Desc"] = "",
["Prio"] = 99,
["Name"] = "Aura Recolor Name - Jundies",
["PlaterCore"] = 1,
["LastHookEdited"] = "Initialization",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Player Logon"] = "function ()\n    \n    -- /RELOAD AFTER IMPORTING OR CHANGING THE SCRIPT\n    -- SELECT THE INDICATOR AT THE TARGET TAB\n    \n    Plater.TargetIndicators    [\"Double Arrows\"] = {\n        path = [[Interface\\AddOns\\Plater\\media\\arrow_double_right_64]],\n        coords = {\n            {0, 1, 0, 1}, \n            {1, 0, 0, 1}\n        },\n        desaturated = false,\n        width = 17,\n        height = 13,\n        x = 14,\n        y = 0,\n        blend = \"ADD\",\n        color = \"white\",\n    }    \n    \nend\n\n\n",
},
["Time"] = 1754767783,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\media\\arrow_double_right_64",
["Enabled"] = true,
["Revision"] = 225,
["semver"] = "",
["Author"] = "�r��ne-Kel'thuzad",
["Desc"] = "Adds double arrow as a target indicators option",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Double Arrow Target",
["LastHookEdited"] = "",
["Options"] = {
},
},
},
["auras_per_row_auto"] = false,
["extra_icon_show_purge_border"] = {
nil,
0.92549019607843,
},
["auras_per_row_amount2"] = 2,
["disable_omnicc_on_auras"] = true,
["bossmod_castrename_enabled"] = false,
["bossmod_support_enabled"] = false,
["ghost_auras"] = {
["auras"] = {
["WARLOCK"] = {
{
[172] = true,
[980] = true,
},
},
},
},
["blizzard_nameplate_large_font_size"] = 9,
["pet_width_scale"] = 0.99999994039536,
["castbar_target_anchor"] = {
["y"] = -1.5,
["x"] = -13,
},
["aura_show_enrage"] = true,
["extra_icon_timer_size"] = 11,
["target_highlight_color"] = {
0.9921568627451,
1,
0.97254901960784,
},
["bossmod_aura_glow_cooldown"] = false,
["aura_width2"] = 19,
["extra_icon_stack_outline"] = "OUTLINE",
["resources"] = {
["y_offset"] = -54.45000076293945,
["y_offset_target"] = 0,
["scale"] = 1,
},
["click_space"] = {
141,
21,
},
["extra_icon_auras"] = {
328501,
328986,
204490,
"Rescind",
409463,
"Breath of Eons",
278431,
323059,
438706,
372824,
388523,
114404,
22703,
164275,
77505,
255941,
200672,
377014,
451026,
440179,
273721,
76151,
456252,
456245,
1330,
423246,
439208,
448977,
423839,
460156,
296080,
434743,
434745,
460603,
1215595,
256493,
1215194,
1226890,
372048,
445134,
1233415,
1228265,
1228317,
1219731,
1226492,
1231328,
1236971,
},
["castbar_target_font"] = "Expressway",
["last_news_time"] = 1751316438,
["range_check_in_range_or_target_alpha_friendlies"] = 1,
["version"] = 117,
["cast_statusbar_spark_texture"] = "Interface\\AddOns\\Plater\\images\\spark2",
["aura_show_only_important_buffs_personal"] = true,
["aura_width"] = 19,
["cast_statusbar_use_fade_effects"] = false,
["indicator_raidmark_scale"] = 0.8499999642372131,
["target_shady_enabled"] = false,
["castbar_target_text_size"] = 9,
["pet_height_scale"] = 0.99999994039536,
["aura_x_offset"] = 1.199996948242188,
["first_run3"] = true,
["aura_sort"] = true,
["ui_parent_scale_tune"] = 0.300000011920929,
["aura_stack_color"] = {
nil,
0,
0.062745098039216,
},
["indicator_raidmark_anchor"] = {
["y"] = 7.819999694824219,
["x"] = 0,
["side"] = 12,
},
["tank"] = {
["colors"] = {
["pulling_from_tank"] = {
0.54117647058824,
0.43137254901961,
},
["anothertank"] = {
0.50196078431373,
0.50196078431373,
},
["aggro"] = {
0.74509805440903,
0.18823531270027,
0.11372549831867,
},
["noaggro"] = {
0.8666667342186,
0.43529415130615,
},
["nocombat"] = {
0.74509803921569,
0.18823529411765,
0.11372549019608,
},
["pulling"] = {
nil,
0.91372549019608,
0.22745098039216,
},
},
},
["aura_tracker"] = {
["buff_tracked"] = {
["227931"] = true,
["365338"] = true,
["368364"] = true,
["389808"] = true,
["233210"] = true,
["338510"] = false,
["1221063"] = false,
["438706"] = true,
["256493"] = false,
["385528"] = true,
["460603"] = false,
["343502"] = false,
["209859"] = true,
["297133"] = true,
["440177"] = false,
["343503"] = true,
["163689"] = true,
["465420"] = false,
["434745"] = false,
},
["buff"] = {
273607,
283928,
311975,
343208,
197862,
66235,
344548,
189949,
343196,
317929,
259895,
290494,
327993,
322540,
332672,
321708,
305395,
41450,
200327,
290583,
320407,
236801,
194223,
333920,
74001,
212753,
175395,
197874,
200816,
196718,
173898,
315948,
122783,
322108,
343150,
296497,
344363,
205202,
255016,
289626,
337851,
228048,
341857,
23333,
198144,
292152,
321702,
29166,
197061,
215776,
209194,
272682,
212640,
216451,
79542,
187827,
124974,
207812,
212295,
34976,
196555,
129035,
316849,
265314,
69369,
321745,
316828,
278454,
285272,
279043,
203048,
198817,
316834,
344878,
320379,
335255,
231627,
328767,
198111,
125174,
317138,
322110,
284508,
236439,
328682,
325208,
185422,
317138,
213602,
323048,
},
["debuff"] = {
315341,
207756,
280322,
340075,
316220,
280321,
319504,
256495,
190533,
345569,
347037,
},
["debuff_tracked"] = {
["409990"] = true,
["335372"] = false,
["323059"] = false,
},
["debuff_banned"] = {
["353354"] = true,
["444736"] = true,
["461498"] = false,
["444834"] = false,
["374557"] = false,
["331016"] = false,
["392388"] = true,
["443404"] = false,
["458169"] = false,
["295367"] = true,
["204167"] = false,
["269576"] = true,
["424965"] = true,
["453599"] = false,
["370898"] = false,
["417490"] = true,
["394021"] = true,
["394453"] = false,
["394255"] = true,
["273836"] = true,
["452229"] = false,
["314113"] = true,
["294909"] = true,
["281242"] = true,
["206760"] = true,
["381628"] = true,
["279416"] = true,
["390271"] = false,
["321330"] = true,
["294934"] = true,
["388550"] = true,
["324260"] = true,
["204206"] = false,
["426339"] = true,
["391568"] = true,
["454025"] = false,
["356372"] = false,
["360277"] = true,
["403391"] = true,
["345466"] = true,
["382426"] = true,
["378983"] = true,
["211793"] = false,
["255909"] = true,
["389788"] = false,
["354052"] = true,
["429750"] = true,
["356995"] = false,
["410790"] = false,
["463192"] = true,
["455366"] = true,
["397712"] = true,
["352534"] = true,
["394328"] = true,
["256148"] = true,
["331653"] = true,
["204242"] = true,
["397478"] = true,
["449217"] = true,
["205027"] = false,
["356329"] = true,
["420144"] = true,
["457928"] = false,
["169623"] = true,
["286581"] = true,
["358379"] = true,
["406770"] = true,
["244813"] = false,
["443541"] = true,
["373281"] = false,
["392490"] = false,
["5760"] = true,
["6343"] = true,
["461981"] = false,
["457133"] = false,
["377359"] = false,
},
["buff_banned"] = {
["318486"] = true,
["323961"] = true,
["333553"] = true,
["422682"] = false,
["396106"] = true,
["236502"] = true,
["5760"] = true,
["396098"] = true,
["343553"] = true,
["396109"] = true,
["343613"] = false,
["216777"] = true,
["327416"] = false,
["302564"] = true,
["417039"] = false,
["292664"] = true,
["61574"] = true,
["303380"] = true,
["333575"] = true,
["317602"] = true,
["286145"] = true,
["425565"] = false,
["268710"] = true,
["333579"] = true,
["61573"] = true,
["441394"] = false,
["206150"] = true,
["209746"] = true,
["311571"] = true,
["284882"] = true,
["284471"] = true,
["422067"] = false,
["266499"] = true,
["396113"] = true,
},
},
["extra_icon_cooldown_edge_texture"] = "Interface\\AddOns\\Plater\\images\\cooldown_edge_1",
["cast_statusbar_color"] = {
nil,
1,
nil,
1,
},
["update_throttle"] = 0.24999998509884,
["aura_show_buffs_personal"] = true,
["tocversion"] = 110200,
["castbar_icon_show"] = false,
["indicator_extra_raidmark"] = false,
["extra_icon_timer_font"] = "Expressway",
["not_affecting_combat_alpha"] = 1,
["focus_as_target_alpha"] = true,
["aura_width_personal"] = 28,
["aura_breakline_space"] = 1,
["target_highlight_alpha"] = 1,
["news_frame"] = {
["PlaterNewsFrame"] = {
["scale"] = 1,
},
},
["extra_icon_show_offensive_border"] = {
nil,
0.65098039215686,
0.10196078431373,
},
["url"] = "https://wago.io/ak3iS95aa/117",
["hover_highlight_alpha"] = 0.5,
["cast_statusbar_spark_alpha"] = 1,
["target_shady_alpha"] = 0,
["target_highlight"] = false,
["aura_height_personal"] = 18,
["target_highlight_height"] = 10,
["health_animation_time_dilatation"] = 1.6699999570847,
["health_selection_overlay_alpha"] = 0,
["show_health_prediction"] = false,
["aura2_grow_direction"] = 3,
["cast_statusbar_texture"] = "You Are Beautiful!",
["health_statusbar_bgcolor"] = {
0,
0,
0,
1,
},
["extra_icon_auras_mine"] = {
["Serrated Bone Spike"] = true,
["209859"] = false,
["Violent Detonation"] = false,
["Plague Bomb"] = false,
},
["range_check_enabled"] = false,
["cast_statusbar_color_interrupted"] = {
0.8,
0.30196078431373,
0.30196078431373,
},
["range_check_in_range_or_target_alpha"] = 1,
["aura_timer_text_size"] = 9,
["script_auto_imported"] = {
["Cast - Important by Color [P]"] = 2,
["Relics 9.2 M Dungeons"] = 2,
["Cast - Effect After Cast [P]"] = 2,
["Explosion Affix M+"] = 14,
["Unit - Show Energy"] = 11,
["Aura - Debuff Alert"] = 12,
["Aura - Is Cast Bar [P]"] = 1,
["Cast - Shining Green [P]"] = 3,
["Cast - Castbar is Timer [P]"] = 2,
["Blink by Time Left"] = 1,
["Unit Power"] = 1,
["Add - Health Markers [P]"] = 3,
["Cast - Small Alert"] = 12,
["Fixate"] = 11,
["Aura - Invalidate Unit"] = 1,
["Add - Important [P]"] = 4,
["Cast - Glowing [P]"] = 10,
["Unit - Main Target"] = 11,
["Aura - Blink Time Left"] = 13,
["Fixate by Unit Buff [P]"] = 2,
["Add - Tag Number [P]"] = 2,
["Unit - Health Markers"] = 12,
["Cast - Stop Casting"] = 4,
["Cast - Special Ability [P]"] = 3,
["Cast - Tank Interrupt"] = 12,
["Countdown"] = 12,
["Cast - Spark Color [P]"] = 2,
["Cast - Heal Stun [P]"] = 2,
["Aura - Buff Alert"] = 15,
["Cast - Tankbuster [P]"] = 1,
["Unit - Important"] = 11,
["Color Change"] = 1,
["Cast - Alert + Timer [P]"] = 4,
["Auto Set Skull"] = 11,
["Cast - Quick Flash"] = 2,
["Cast - AoE Hit All [P]"] = 3,
["Cast - Very Important"] = 15,
["Add - Warning [P]"] = 5,
["Aura is Shield [P]"] = 5,
["Cast - Debuff [P]"] = 2,
["Cast - Simple Interrupt [P]"] = 2,
["Aura While Casting [P]"] = 1,
["Cast - Big Alert"] = 14,
["Cast - Ongoing Cast [P]"] = 4,
["Cast - Voidzone [P]"] = 2,
["Cast - Heal Cut [P]"] = 3,
["Cast - Watch Step [P]"] = 1,
["Spiteful Affix"] = 3,
["Cast - Shield Interrupt"] = 2,
["Add - Non Elite Trash [P]"] = 4,
["Cast - Important Target [P]"] = 2,
["Aura Border Color"] = 1,
["Cast - On Going Cast [P]"] = 2,
["Cast - AoE With Range [P]"] = 2,
["Cast - Frontal Cone"] = 17,
["Add - Explode on Die [P]"] = 1,
["Cast - Heroic Leap [P]"] = 3,
["Cast - Ultra Important"] = 14,
["Cast - Circular Swipe"] = 4,
["Fixate On You"] = 12,
},
["number_region_first_run"] = true,
["cast_statusbar_color_channeling"] = {
1,
nil,
0.035294119268656,
1,
},
["range_check_alpha_friendlies"] = 1,
["extra_icon_caster_font"] = "Expressway",
["dps"] = {
["colors"] = {
["notontank"] = {
0.50196078431373,
0.50196078431373,
},
["aggro"] = {
0.86666666666667,
0.43529411764706,
},
["noaggro"] = {
0.74509805440903,
0.18823531270027,
0.11372549831867,
},
},
},
["indicator_elite"] = false,
["tap_denied_color"] = {
0.46666666666667,
0.46666666666667,
0.46666666666667,
},
["extra_icon_stack_size"] = 11,
["patch_version"] = 39,
["indicator_rare"] = false,
["auto_toggle_stacking"] = {
["party"] = false,
["raid"] = false,
["arena"] = false,
["world"] = false,
},
["auto_toggle_friendly_enabled"] = true,
["cast_statusbar_spark_width"] = 9,
["auto_toggle_enemy"] = {
["party"] = false,
["raid"] = false,
["arena"] = false,
["world"] = false,
},
},
},
["InterruptableSpells"] = {
[1229474] = true,
[354297] = true,
[220543] = true,
[1235326] = true,
[1064] = true,
[427609] = true,
[428086] = true,
[427356] = true,
[47528] = true,
[427357] = true,
[270481] = true,
[465871] = true,
[453616] = true,
[147362] = true,
[356843] = true,
[6552] = true,
[317791] = true,
[422090] = true,
[1229510] = true,
[317792] = true,
[1214780] = true,
[31935] = true,
[132409] = true,
[357196] = true,
[432031] = true,
[357260] = true,
[355641] = true,
[325701] = true,
[31707] = true,
[355642] = true,
[452099] = true,
[431303] = true,
[97547] = true,
[347008] = true,
[8092] = true,
[104318] = true,
[465595] = true,
[356407] = true,
[1245669] = true,
[395160] = true,
[353836] = true,
[1766] = true,
[382266] = true,
[462771] = true,
[1222815] = true,
[448248] = true,
[57994] = true,
[328322] = true,
[463058] = true,
[356537] = true,
[355934] = true,
[424419] = true,
[434786] = true,
[347775] = true,
[434802] = true,
[436322] = true,
[394976] = true,
[433841] = true,
[96231] = true,
[391528] = true,
[468631] = true,
[194153] = true,
[427469] = true,
[93985] = true,
[431333] = true,
[424421] = true,
[433662] = true,
[444743] = true,
[350922] = true,
[423051] = true,
[432520] = true,
[355225] = true,
[338003] = true,
[323538] = true,
[1214468] = true,
[423536] = true,
[351338] = true,
[471733] = true,
[386071] = true,
[423664] = true,
[183752] = true,
[1236949] = true,
[193473] = true,
[352347] = true,
[451113] = true,
[15407] = true,
[190984] = true,
[116705] = true,
[373279] = true,
[326829] = true,
[19647] = true,
[2139] = true,
[449734] = true,
[434793] = true,
[351119] = true,
[442210] = true,
[59638] = true,
[326450] = true,
[355057] = true,
[32747] = true,
},
["performance_units"] = {
[217126] = 6,
[191714] = 0,
[214441] = true,
[189707] = 0,
[220626] = true,
[176920] = 0,
[96247] = 0,
[196679] = 0,
[100529] = 0,
[208994] = 0,
[87329] = false,
[198594] = false,
[210231] = 0,
[219746] = 0,
[84401] = 0,
[194999] = 0,
[196642] = 0,
[189363] = 0,
[189706] = 0,
[197398] = 0,
[167999] = true,
[211306] = 0,
},
["captured_casts"] = {
[1238834] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "执行者加克图尔",
["npcID"] = 245601,
},
[1249065] = {
["encounterName"] = "缚魂者娜欣达利",
["source"] = "缚魂者娜欣达利",
["encounterID"] = 3130,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 233816,
},
[460602] = {
["encounterName"] = "破拆双人组",
["source"] = "齐扎·迅索",
["npcID"] = 226403,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3019,
},
[372369] = {
["event"] = "SPELL_CAST_START",
["source"] = "怒鳍处刑者",
["npcID"] = 213408,
},
[424798] = {
["event"] = "SPELL_CAST_START",
["source"] = "被感染的野兽",
["npcID"] = 210478,
},
[326846] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "审判官西加尔",
["npcID"] = 167876,
},
[427356] = {
["event"] = "SPELL_CAST_START",
["source"] = "虔诚的牧师",
["npcID"] = 206697,
},
[465463] = {
["encounterName"] = "吉泽尔·超震",
["source"] = "吉泽尔·超震",
["npcID"] = 226404,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3054,
},
[326847] = {
["event"] = "SPELL_CAST_START",
["source"] = "审判官西加尔",
["npcID"] = 167876,
},
[427357] = {
["event"] = "SPELL_CAST_START",
["source"] = "虔诚的牧师",
["npcID"] = 206697,
},
[346286] = {
["encounterName"] = "收发室乱战",
["source"] = "P.O.S.T.总管",
["encounterID"] = 2424,
["event"] = "SPELL_CAST_START",
["npcID"] = 175646,
},
[427359] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "阿拉希步兵",
["npcID"] = 206705,
},
[427360] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "阿拉希步兵",
["npcID"] = 206705,
},
[425315] = {
["encounterName"] = "旋菇",
["source"] = "旋菇",
["npcID"] = 207481,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2831,
},
[357542] = {
["encounterName"] = "麦扎的绿洲",
["source"] = "维尔特",
["encounterID"] = 2440,
["event"] = "SPELL_CAST_START",
["npcID"] = 180484,
},
[353706] = {
["encounterName"] = "麦扎的绿洲",
["source"] = "打架的顾客",
["encounterID"] = 2440,
["event"] = "SPELL_CAST_START",
["npcID"] = 176562,
},
[1238867] = {
["encounterName"] = "熔炉编织者阿拉兹",
["source"] = "奥能回响",
["encounterID"] = 3132,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 241923,
},
[423015] = {
["encounterName"] = "布朗派克男爵",
["source"] = "布朗派克男爵",
["npcID"] = 207939,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2835,
},
[450637] = {
["event"] = "SPELL_CAST_START",
["source"] = "蛛魔领主",
["npcID"] = 218103,
},
[1221483] = {
["source"] = "废土遗民祭师",
["event"] = "SPELL_CAST_START",
["npcID"] = 234957,
},
[1221484] = {
["isChanneled"] = false,
["source"] = "废土遗民祭师",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 234957,
},
[1231716] = {
["encounterName"] = "诸界吞噬者迪门修斯",
["source"] = "迪门修斯",
["npcID"] = 233824,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3135,
},
[427621] = {
["event"] = "SPELL_CAST_START",
["source"] = "阿拉希骑士",
["npcID"] = 206696,
},
[1231719] = {
["encounterName"] = "熔炉编织者阿拉兹",
["source"] = "熔炉编织者阿拉兹",
["npcID"] = 233817,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3132,
},
[1231720] = {
["encounterName"] = "熔炉编织者阿拉兹",
["source"] = "熔炉编织者阿拉兹",
["npcID"] = 233817,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3132,
},
[1227629] = {
["event"] = "SPELL_CAST_START",
["source"] = "暗影具象",
["npcID"] = 241632,
},
[450128] = {
["encounterName"] = "蜡面",
["source"] = "蜡面",
["encounterID"] = 2894,
["event"] = "SPELL_CAST_START",
["npcID"] = 214263,
},
[1227631] = {
["encounterName"] = "熔炉编织者阿拉兹",
["source"] = "熔炉编织者阿拉兹",
["npcID"] = 233817,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3132,
},
[1215356] = {
["event"] = "SPELL_CAST_START",
["source"] = "遥控嘀嗒机器人",
["npcID"] = 236027,
},
[1219450] = {
["encounterName"] = "集能哨兵",
["source"] = "集能哨兵",
["npcID"] = 233814,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3129,
},
[438877] = {
["event"] = "SPELL_CAST_START",
["source"] = "纳克特",
["npcID"] = 218324,
},
[470591] = {
["event"] = "SPELL_CAST_START",
["source"] = "夜幕窃愿者",
["npcID"] = 217517,
},
[448341] = {
["source"] = "狗头人领职者",
["event"] = "SPELL_CAST_START",
["npcID"] = 204127,
},
[436322] = {
["event"] = "SPELL_CAST_START",
["source"] = "阿提克",
["npcID"] = 217533,
},
[1220489] = {
["encounterName"] = "集能哨兵",
["source"] = "集能哨兵",
["npcID"] = 233814,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3129,
},
[426860] = {
["encounterName"] = "阿努布伊卡基",
["source"] = "阿努布伊卡基",
["npcID"] = 211089,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2838,
},
[423536] = {
["encounterName"] = "隐修院长穆普雷",
["source"] = "隐修院长穆普雷",
["npcID"] = 207940,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2848,
},
[323538] = {
["encounterName"] = "高阶裁决官阿丽兹",
["source"] = "高阶裁决官阿丽兹",
["npcID"] = 165410,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2403,
},
[448600] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "喷火引线看护者",
["npcID"] = 211777,
},
[1231749] = {
["event"] = "SPELL_CAST_START",
["source"] = "脚踢炸弹",
["npcID"] = 242891,
},
[427629] = {
["event"] = "SPELL_CAST_START",
["source"] = "热诚的神射手",
["npcID"] = 206694,
},
[1219477] = {
["event"] = "SPELL_CAST_START",
["source"] = "宣传推广员",
["npcID"] = 225826,
},
[1243007] = {
["event"] = "SPELL_CAST_START",
["source"] = "誓约沙尘剑士",
["npcID"] = 244415,
},
[446300] = {
["event"] = "SPELL_CAST_START",
["source"] = "地渊之海憎恶",
["npcID"] = 247461,
},
[1236872] = {
["encounterName"] = "节点之王萨哈达尔",
["source"] = "皇家虚空之翼",
["encounterID"] = 3134,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 233823,
},
[1219482] = {
["encounterName"] = "塔尔·巴特和阿瓦兹吉",
["source"] = "阿瓦兹吉",
["encounterID"] = 3108,
["event"] = "SPELL_CAST_START",
["npcID"] = 237514,
},
[443232] = {
["event"] = "SPELL_CAST_START",
["source"] = "夜幕哨兵",
["npcID"] = 217485,
},
[434281] = {
["source"] = "低泣之影",
["event"] = "SPELL_CAST_START",
["npcID"] = 217268,
},
[1221532] = {
["source"] = "废土遗民诉契者",
["event"] = "SPELL_CAST_START",
["npcID"] = 234955,
},
[442210] = {
["encounterName"] = "阿努布泽克特",
["source"] = "沾血的网法师",
["npcID"] = 220599,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2906,
},
[1243017] = {
["event"] = "SPELL_CAST_START",
["source"] = "誓约沙尘剑士",
["npcID"] = 244415,
},
[1248133] = {
["encounterName"] = "熔炉编织者阿拉兹",
["source"] = "虚空裂缝",
["encounterID"] = 3132,
["event"] = "SPELL_CAST_START",
["npcID"] = 243108,
},
[1217446] = {
["encounterName"] = "阿兹希卡",
["source"] = "阿兹希卡",
["encounterID"] = 3107,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 234893,
},
[1238930] = {
["event"] = "SPELL_CAST_START",
["source"] = "誓约掠沙者",
["npcID"] = 244410,
},
[356537] = {
["source"] = "传送门操控师佐·霍恩",
["event"] = "SPELL_CAST_START",
["npcID"] = 179334,
},
[450142] = {
["encounterName"] = "蜡面",
["source"] = "蜡面",
["encounterID"] = 2894,
["event"] = "SPELL_CAST_START",
["npcID"] = 214263,
},
[453212] = {
["encounterName"] = "代言人夏多克朗",
["source"] = "代言人夏多克朗",
["npcID"] = 211087,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2837,
},
[428916] = {
["event"] = "SPELL_CAST_START",
["source"] = "虔诚的牧师",
["npcID"] = 206697,
},
[427894] = {
["event"] = "SPELL_CAST_START",
["source"] = "铸炉大师达米安",
["npcID"] = 212831,
},
[428150] = {
["event"] = "SPELL_CAST_START",
["source"] = "高阶牧师艾姆雅",
["npcID"] = 212827,
},
[1238954] = {
["event"] = "SPELL_CAST_START",
["source"] = "熔骨者",
["npcID"] = 245617,
},
[1224634] = {
["event"] = "SPELL_CAST_START",
["source"] = "掘地蠕行者",
["npcID"] = 236947,
},
[1227704] = {
["event"] = "SPELL_CAST_START",
["source"] = "影卫主宰",
["npcID"] = 241666,
},
[350916] = {
["encounterName"] = "麦扎的绿洲",
["source"] = "绿洲保安",
["encounterID"] = 2440,
["event"] = "SPELL_CAST_START",
["npcID"] = 179269,
},
[1244075] = {
["event"] = "SPELL_CAST_START",
["source"] = "誓约奥术师",
["npcID"] = 244411,
},
[1239988] = {
["encounterName"] = "缚魂者娜欣达利",
["source"] = "无缚相位剑士",
["encounterID"] = 3130,
["event"] = "SPELL_CAST_START",
["npcID"] = 245008,
},
[1220553] = {
["encounterName"] = "集能哨兵",
["source"] = "集能哨兵",
["npcID"] = 233814,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3129,
},
[1219531] = {
["encounterName"] = "集能哨兵",
["source"] = "集能哨兵",
["npcID"] = 233814,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3129,
},
[1220555] = {
["encounterName"] = "集能哨兵",
["source"] = "集能哨兵",
["encounterID"] = 3129,
["event"] = "SPELL_CAST_START",
["npcID"] = 233814,
},
[374192] = {
["source"] = "覆甲裂蜥",
["event"] = "SPELL_CAST_START",
["npcID"] = 217524,
},
[350919] = {
["encounterName"] = "麦扎的绿洲",
["source"] = "佐·格伦",
["encounterID"] = 2440,
["event"] = "SPELL_CAST_START",
["npcID"] = 176563,
},
[1219535] = {
["encounterName"] = "塔尔·巴特和阿瓦兹吉",
["source"] = "阿瓦兹吉",
["encounterID"] = 3108,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 237514,
},
[1219536] = {
["encounterName"] = "塔尔·巴特和阿瓦兹吉",
["source"] = "阿瓦兹吉",
["encounterID"] = 3108,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 237514,
},
[1254321] = {
["encounterName"] = "熔炉编织者阿拉兹",
["source"] = "熔炉编织者阿拉兹",
["encounterID"] = 3132,
["event"] = "SPELL_CAST_START",
["npcID"] = 233817,
},
[1241023] = {
["encounterName"] = "麦扎的绿洲",
["source"] = "佐·格伦",
["encounterID"] = 2440,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 176563,
},
[1233863] = {
["encounterName"] = "狩魂猎手",
["source"] = "维拉瑞安·血愤",
["encounterID"] = 3122,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 237660,
},
[1223634] = {
["event"] = "SPELL_CAST_START",
["source"] = "界门观察者",
["npcID"] = 235853,
},
[356548] = {
["source"] = "大门看护者佐·马兹",
["event"] = "SPELL_CAST_START",
["npcID"] = 178392,
},
[350922] = {
["encounterName"] = "麦扎的绿洲",
["source"] = "绿洲保安",
["encounterID"] = 2440,
["event"] = "SPELL_CAST_START",
["npcID"] = 179269,
},
[465754] = {
["event"] = "SPELL_CAST_START",
["source"] = "撕碎王3000型",
["npcID"] = 230740,
},
[458849] = {
["encounterName"] = "潜伏者奈拉瑟克",
["source"] = "潜伏者奈拉瑟克",
["npcID"] = 220577,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2949,
},
[1241032] = {
["encounterName"] = "麦扎的绿洲",
["source"] = "佐·格伦",
["encounterID"] = 2440,
["event"] = "SPELL_CAST_START",
["npcID"] = 176563,
},
[1227734] = {
["encounterName"] = "节点之王萨哈达尔",
["source"] = "节点之王萨哈达尔",
["npcID"] = 237763,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3134,
},
[1234898] = {
["encounterName"] = "诸界吞噬者迪门修斯",
["source"] = "迪门修斯",
["npcID"] = 241517,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3135,
},
[473684] = {
["event"] = "SPELL_CAST_START",
["source"] = "新潮机器人",
["npcID"] = 231908,
},
[1244108] = {
["event"] = "SPELL_CAST_START",
["source"] = "誓约掠沙者",
["npcID"] = 248084,
},
[451435] = {
["source"] = "虚空幽灵",
["event"] = "SPELL_CAST_START",
["npcID"] = 224466,
},
[1226721] = {
["encounterName"] = "卢米萨尔",
["source"] = "卢米萨尔",
["encounterID"] = 3131,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 233815,
},
[1227745] = {
["encounterName"] = "阿兹希卡",
["source"] = "阿兹希卡",
["encounterID"] = 3107,
["event"] = "SPELL_CAST_START",
["npcID"] = 234893,
},
[458853] = {
["encounterName"] = "潜伏者奈拉瑟克",
["source"] = "潜伏者奈拉瑟克",
["npcID"] = 220577,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2949,
},
[1248209] = {
["encounterName"] = "索·阿兹密",
["source"] = "索·阿兹密",
["encounterID"] = 2437,
["event"] = "SPELL_CAST_START",
["npcID"] = 175806,
},
[449135] = {
["source"] = "郁齿揍虫者",
["event"] = "SPELL_CAST_START",
["npcID"] = 222176,
},
[398497] = {
["event"] = "SPELL_CAST_START",
["source"] = "雷巅岩喉蝠",
["npcID"] = 212364,
},
[449136] = {
["isChanneled"] = true,
["source"] = "郁齿揍虫者",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 222176,
},
[443510] = {
["event"] = "SPELL_CAST_START",
["source"] = "夜幕行刑者",
["npcID"] = 217516,
},
[1223667] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "界门观察者",
["npcID"] = 235853,
},
[423051] = {
["encounterName"] = "布朗派克男爵",
["source"] = "布朗派克男爵",
["npcID"] = 207939,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2835,
},
[356812] = {
["source"] = "领袖赛·维勒",
["event"] = "SPELL_CAST_START",
["npcID"] = 180286,
},
[473690] = {
["encounterName"] = "破拆双人组",
["source"] = "齐扎·迅索",
["npcID"] = 226403,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3019,
},
[347094] = {
["encounterName"] = "希尔布兰德",
["source"] = "希尔布兰德",
["encounterID"] = 2426,
["event"] = "SPELL_CAST_START",
["npcID"] = 175663,
},
[1242086] = {
["encounterName"] = "缚魂者娜欣达利",
["source"] = "缚魂者娜欣达利",
["encounterID"] = 3130,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 233816,
},
[1245156] = {
["event"] = "SPELL_CAST_START",
["source"] = "凯威扎",
["npcID"] = 248134,
},
[443001] = {
["event"] = "SPELL_CAST_START",
["source"] = "苏雷吉根除者",
["npcID"] = 238773,
},
[1214468] = {
["event"] = "SPELL_CAST_START",
["source"] = "无人机狙击手",
["npcID"] = 229069,
},
[340446] = {
["event"] = "SPELL_CAST_START",
["source"] = "嫉妒具象",
["npcID"] = 167898,
},
[460393] = {
["encounterName"] = "老大娘",
["source"] = "暗索无人机",
["npcID"] = 228424,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3020,
},
[428169] = {
["encounterName"] = "隐修院长穆普雷",
["source"] = "隐修院长穆普雷",
["npcID"] = 207940,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2848,
},
[431494] = {
["event"] = "SPELL_CAST_START",
["source"] = "夜幕战略家",
["npcID"] = 213934,
},
[1231871] = {
["encounterName"] = "弗兰克提鲁斯",
["source"] = "弗兰克提鲁斯",
["npcID"] = 237861,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3133,
},
[319733] = {
["encounterName"] = "艾谢朗",
["source"] = "艾谢朗",
["npcID"] = 164185,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2380,
},
[1227782] = {
["encounterName"] = "卢米萨尔",
["source"] = "卢米萨尔",
["npcID"] = 233815,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3131,
},
[1227784] = {
["encounterName"] = "卢米萨尔",
["source"] = "卢米萨尔",
["npcID"] = 233815,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3131,
},
[432520] = {
["event"] = "SPELL_CAST_START",
["source"] = "夜幕暗法师",
["npcID"] = 213893,
},
[1224719] = {
["event"] = "SPELL_CAST_START",
["source"] = "进流守护者",
["npcID"] = 246874,
},
[1231882] = {
["source"] = "影卫虚空窃贼",
["event"] = "SPELL_CAST_START",
["npcID"] = 238090,
},
[450424] = {
["event"] = "SPELL_CAST_START",
["source"] = "凝结的蜡油巨人",
["npcID"] = 223206,
},
[471652] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "暗索土狼",
["npcID"] = 226398,
},
[440195] = {
["event"] = "SPELL_CAST_START",
["source"] = "暗影元素",
["npcID"] = 220575,
},
[118297] = {
["source"] = "原始火元素",
["event"] = "SPELL_CAST_START",
["npcID"] = 61029,
},
[445311] = {
["event"] = "SPELL_CAST_START",
["source"] = "影冠钳蟹",
["npcID"] = 216963,
},
[1224731] = {
["encounterName"] = "节点之王萨哈达尔",
["source"] = "节点之王萨哈达尔",
["npcID"] = 237763,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3134,
},
[1241100] = {
["encounterName"] = "缚魂者娜欣达利",
["source"] = "缚魂者娜欣达利",
["encounterID"] = 3130,
["event"] = "SPELL_CAST_START",
["npcID"] = 233816,
},
[468841] = {
["encounterName"] = "吉泽尔·超震",
["source"] = "吉泽尔·超震",
["npcID"] = 226404,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3054,
},
[423062] = {
["encounterName"] = "布朗派克男爵",
["source"] = "布朗派克男爵",
["npcID"] = 207939,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2835,
},
[1226783] = {
["source"] = "无缚实体",
["event"] = "SPELL_CAST_START",
["npcID"] = 236072,
},
[348128] = {
["encounterName"] = "哨卫佐·菲克斯",
["source"] = "佐·菲克斯",
["encounterID"] = 2425,
["event"] = "SPELL_CAST_START",
["npcID"] = 175616,
},
[444546] = {
["encounterName"] = "隐修院长穆普雷",
["source"] = "隐修院长穆普雷",
["npcID"] = 207940,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2848,
},
[1227809] = {
["encounterName"] = "狩魂猎手",
["source"] = "维拉瑞安·血愤",
["npcID"] = 237660,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3122,
},
[1242133] = {
["encounterName"] = "狩魂猎手",
["source"] = "伊莉萨·悲夜",
["npcID"] = 237662,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3122,
},
[1245203] = {
["event"] = "SPELL_CAST_START",
["source"] = "节点女亲王凯威扎",
["npcID"] = 244755,
},
[464240] = {
["event"] = "SPELL_CAST_START",
["source"] = "高阶牧师艾姆雅",
["npcID"] = 212827,
},
[470379] = {
["event"] = "SPELL_CAST_START",
["source"] = "黏滑污物",
["npcID"] = 234571,
},
[1213497] = {
["event"] = "SPELL_CAST_START",
["source"] = "征募执行者",
["npcID"] = 225827,
},
[1242143] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "训练假人",
["npcID"] = 246874,
},
[450176] = {
["event"] = "SPELL_CAST_START",
["source"] = "蛛魔斩击者",
["npcID"] = 208243,
},
[468846] = {
["encounterName"] = "吉泽尔·超震",
["source"] = "吉泽尔·超震",
["npcID"] = 226404,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3054,
},
[1240102] = {
["encounterName"] = "时空船长钩尾",
["source"] = "时空船长钩尾",
["encounterID"] = 2419,
["event"] = "SPELL_CAST_START",
["npcID"] = 175546,
},
[1231919] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "钢魂奥能守卫",
["npcID"] = 247624,
},
[1224760] = {
["isChanneled"] = true,
["source"] = "熔炉哨兵",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 234041,
},
[8137] = {
["source"] = "格里什异种蝎",
["event"] = "SPELL_CAST_START",
["npcID"] = 6551,
},
[460156] = {
["encounterName"] = "老大娘",
["source"] = "老大娘",
["npcID"] = 226398,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3020,
},
[474223] = {
["source"] = "丑恶聚合体",
["event"] = "SPELL_CAST_START",
["npcID"] = 234208,
},
[1245240] = {
["event"] = "SPELL_CAST_START",
["source"] = "节点女亲王凯威扎",
["npcID"] = 244755,
},
[1224787] = {
["encounterName"] = "节点之王萨哈达尔",
["source"] = "节点之王萨哈达尔",
["npcID"] = 237763,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3134,
},
[1232973] = {
["encounterName"] = "诸界吞噬者迪门修斯",
["source"] = "迪门修斯",
["npcID"] = 233824,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3135,
},
[1233997] = {
["encounterName"] = "熔炉编织者阿拉兹",
["source"] = "奥术收集装置",
["encounterID"] = 3132,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 240905,
},
[1237068] = {
["encounterName"] = "节点之王萨哈达尔",
["source"] = "维度传送门",
["encounterID"] = 3134,
["event"] = "SPELL_CAST_START",
["npcID"] = 241916,
},
[1231954] = {
["isChanneled"] = true,
["source"] = "影卫编织大师",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 240974,
},
[470902] = {
["event"] = "SPELL_CAST_START",
["source"] = "苏法迪驯刃者",
["npcID"] = 230352,
},
[430238] = {
["event"] = "SPELL_CAST_START",
["source"] = "腐化的塑法者",
["npcID"] = 219302,
},
[355048] = {
["source"] = "浊盐碎壳者",
["event"] = "SPELL_CAST_START",
["npcID"] = 178139,
},
[470903] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "苏法迪驯刃者",
["npcID"] = 230352,
},
[349934] = {
["encounterName"] = "卖品会",
["source"] = "阿喀琉忒",
["encounterID"] = 2441,
["event"] = "SPELL_CAST_START",
["npcID"] = 176555,
},
[1234009] = {
["isChanneled"] = true,
["source"] = "影卫科技巫师",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 237132,
},
[1230941] = {
["source"] = "相位剑士破坏者",
["event"] = "SPELL_CAST_START",
["npcID"] = 237233,
},
[424614] = {
["event"] = "SPELL_CAST_START",
["source"] = "真菌戳刺者",
["npcID"] = 207450,
},
[355306] = {
["source"] = "裂隙冲击传送门",
["event"] = "SPELL_CAST_START",
["npcID"] = 179778,
},
[434589] = {
["source"] = "大恶魔",
["event"] = "SPELL_CAST_START",
["npcID"] = 217429,
},
[1244249] = {
["event"] = "SPELL_CAST_START",
["source"] = "誓约掠沙者",
["npcID"] = 248084,
},
[1217653] = {
["encounterName"] = "破拆双人组",
["source"] = "齐扎·迅索",
["npcID"] = 226403,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3019,
},
[1235045] = {
["encounterName"] = "狩魂猎手",
["source"] = "阿达拉斯·暮焰",
["npcID"] = 237661,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3122,
},
[356843] = {
["source"] = "时沙号海潮贤者",
["event"] = "SPELL_CAST_START",
["npcID"] = 179388,
},
[326409] = {
["event"] = "SPELL_CAST_START",
["source"] = "哈尔吉亚斯的碎片",
["npcID"] = 164557,
},
[461446] = {
["isChanneled"] = true,
["source"] = "猩红臭盖菌",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 212579,
},
[1235052] = {
["isChanneled"] = false,
["source"] = "雷铸守护者",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 178171,
},
[1217664] = {
["encounterName"] = "阿兹希卡",
["source"] = "阿兹希卡",
["event"] = "SPELL_CAST_START",
["npcID"] = 234893,
},
[1227900] = {
["encounterName"] = "塔尔·巴特和阿瓦兹吉",
["source"] = "阿瓦兹吉",
["encounterID"] = 3108,
["event"] = "SPELL_CAST_START",
["npcID"] = 241375,
},
[466308] = {
["event"] = "SPELL_CAST_START",
["source"] = "垃圾啮咬者",
["npcID"] = 230611,
},
[424621] = {
["event"] = "SPELL_CAST_START",
["source"] = "歇尼麦尔中士",
["npcID"] = 239836,
},
[440222] = {
["event"] = "SPELL_CAST_START",
["source"] = "暗狂收割者",
["npcID"] = 206067,
},
[450197] = {
["event"] = "SPELL_CAST_START",
["source"] = "敏捷的聚生虫",
["npcID"] = 208245,
},
[1230979] = {
["encounterName"] = "诸界吞噬者迪门修斯",
["source"] = "迪门修斯",
["npcID"] = 241517,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3135,
},
[328206] = {
["encounterName"] = "艾谢朗",
["source"] = "艾谢朗",
["npcID"] = 164185,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2380,
},
[1219731] = {
["encounterName"] = "塔尔·巴特和阿瓦兹吉",
["source"] = "塔尔·巴特",
["encounterID"] = 3108,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 234933,
},
[1227918] = {
["encounterName"] = "塔尔·巴特和阿瓦兹吉",
["source"] = "阿瓦兹吉",
["encounterID"] = 3108,
["event"] = "SPELL_CAST_START",
["npcID"] = 237514,
},
[427950] = {
["event"] = "SPELL_CAST_START",
["source"] = "铸炉大师达米安",
["npcID"] = 212831,
},
[353783] = {
["encounterName"] = "麦扎的绿洲",
["source"] = "捣乱的顾客",
["encounterID"] = 2440,
["event"] = "SPELL_CAST_START",
["npcID"] = 176565,
},
[358131] = {
["encounterName"] = "希尔布兰德",
["source"] = "雷鸣破灭者",
["encounterID"] = 2426,
["event"] = "SPELL_CAST_START",
["npcID"] = 180640,
},
[434089] = {
["encounterName"] = "拉夏南",
["source"] = "拉夏南",
["npcID"] = 213937,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2839,
},
[355830] = {
["source"] = "财团潜伏者",
["event"] = "SPELL_CAST_START",
["npcID"] = 179893,
},
[1226903] = {
["event"] = "SPELL_CAST_START",
["source"] = "影卫收获者",
["npcID"] = 241242,
},
[191726] = {
["source"] = "强力闪电元素",
["event"] = "SPELL_CAST_START",
["npcID"] = 97022,
},
[347903] = {
["source"] = "过载的邮件元素",
["event"] = "SPELL_CAST_START",
["npcID"] = 176395,
},
[354297] = {
["source"] = "支援警官",
["event"] = "SPELL_CAST_START",
["npcID"] = 177817,
},
[446368] = {
["encounterName"] = "布朗派克男爵",
["source"] = "布朗派克男爵",
["npcID"] = 207939,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2835,
},
[355577] = {
["source"] = "雷铸守护者",
["event"] = "SPELL_CAST_START",
["npcID"] = 178171,
},
[1242259] = {
["encounterName"] = "狩魂猎手",
["source"] = "伊莉萨·悲夜",
["npcID"] = 237662,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3122,
},
[440231] = {
["event"] = "SPELL_CAST_START",
["source"] = "暗狂收割者",
["npcID"] = 206067,
},
[346116] = {
["encounterName"] = "希尔布兰德",
["source"] = "希尔布兰德",
["encounterID"] = 2426,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 175663,
},
[1244313] = {
["event"] = "SPELL_CAST_START",
["source"] = "誓约奥术师",
["npcID"] = 244411,
},
[1236130] = {
["encounterName"] = "塔尔·巴特和阿瓦兹吉",
["source"] = "阿瓦兹吉",
["encounterID"] = 3108,
["event"] = "SPELL_CAST_START",
["npcID"] = 237514,
},
[391385] = {
["source"] = "狂暴的岩浆之怒",
["event"] = "SPELL_CAST_START",
["npcID"] = 214924,
},
[349954] = {
["encounterName"] = "卖品会",
["source"] = "阿喀琉忒",
["encounterID"] = 2441,
["event"] = "SPELL_CAST_START",
["npcID"] = 176555,
},
[1223859] = {
["encounterName"] = "缚魂者娜欣达利",
["source"] = "缚魂者娜欣达利",
["encounterID"] = 3130,
["event"] = "SPELL_CAST_START",
["npcID"] = 233816,
},
[433841] = {
["event"] = "SPELL_CAST_START",
["source"] = "鲜血监督者",
["npcID"] = 216364,
},
[1241254] = {
["encounterName"] = "狩魂猎手",
["source"] = "维拉瑞安·血愤",
["encounterID"] = 3122,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 237660,
},
[424891] = {
["event"] = "SPELL_CAST_START",
["source"] = "真菌护矛者",
["npcID"] = 207456,
},
[1213641] = {
["event"] = "SPELL_CAST_START",
["source"] = "征募执行者",
["npcID"] = 225827,
},
[355584] = {
["source"] = "雷铸守护者",
["event"] = "SPELL_CAST_START",
["npcID"] = 178171,
},
[432565] = {
["event"] = "SPELL_CAST_START",
["source"] = "暗影具象",
["npcID"] = 211341,
},
[433845] = {
["event"] = "SPELL_CAST_START",
["source"] = "鲜血监督者",
["npcID"] = 216364,
},
[1223880] = {
["source"] = "看守者加兹克雷斯",
["event"] = "SPELL_CAST_START",
["npcID"] = 239702,
},
[1226950] = {
["event"] = "SPELL_CAST_START",
["source"] = "影卫注魔者",
["npcID"] = 241304,
},
[1224906] = {
["encounterName"] = "节点之王萨哈达尔",
["source"] = "节点之王萨哈达尔",
["encounterID"] = 3134,
["event"] = "SPELL_CAST_START",
["npcID"] = 237763,
},
[191732] = {
["source"] = "强力闪电元素",
["event"] = "SPELL_CAST_START",
["npcID"] = 97022,
},
[1233093] = {
["encounterName"] = "狩魂猎手",
["source"] = "阿达拉斯·暮焰",
["npcID"] = 237661,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3122,
},
[1214680] = {
["encounterName"] = "殴棘",
["source"] = "暗索咯笑魔",
["npcID"] = 235505,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3374,
},
[449960] = {
["event"] = "SPELL_CAST_START",
["source"] = "无彻斥候",
["npcID"] = 219933,
},
[347149] = {
["encounterName"] = "时空船长钩尾",
["source"] = "时空船长钩尾",
["encounterID"] = 2419,
["event"] = "SPELL_CAST_START",
["npcID"] = 175546,
},
[468631] = {
["event"] = "SPELL_CAST_START",
["source"] = "风险管理公司潜水员",
["npcID"] = 231496,
},
[1237195] = {
["source"] = "掘地蠕行者",
["event"] = "SPELL_CAST_START",
["npcID"] = 245092,
},
[448429] = {
["source"] = "狗头人秘法师",
["event"] = "SPELL_CAST_START",
["npcID"] = 203878,
},
["358320"] = {
["npcID"] = 180162,
},
[1236186] = {
["event"] = "SPELL_CAST_START",
["source"] = "影卫虚空精英",
["npcID"] = 244111,
},
[431552] = {
["event"] = "SPELL_CAST_START",
["source"] = "苏雷吉虫群牧人",
["npcID"] = 238972,
},
[354572] = {
["source"] = "暴躁的顾客",
["event"] = "SPELL_CAST_START",
["npcID"] = 180158,
},
[1239262] = {
["encounterName"] = "诸界吞噬者迪门修斯",
["source"] = "阿托席恩",
["npcID"] = 245255,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3135,
},
[1225966] = {
["isChanneled"] = true,
["source"] = "无缚实体",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 237132,
},
[1237220] = {
["source"] = "掘地蠕行者",
["event"] = "SPELL_CAST_START",
["npcID"] = 245092,
},
[326441] = {
["event"] = "SPELL_CAST_START",
["source"] = "哈尔吉亚斯的碎片",
["npcID"] = 164557,
},
[1239268] = {
["encounterName"] = "诸界吞噬者迪门修斯",
["source"] = "虚空守卫",
["npcID"] = 245705,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3135,
},
[224729] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "集市维和者",
["npcID"] = 179840,
},
[438973] = {
["source"] = "深渊领主",
["event"] = "SPELL_CAST_START",
["npcID"] = 228574,
},
[465827] = {
["event"] = "SPELL_CAST_START",
["source"] = "暗索扭血者",
["npcID"] = 230748,
},
[1239281] = {
["encounterName"] = "塔尔·巴特和阿瓦兹吉",
["source"] = "阿瓦兹吉",
["encounterID"] = 3108,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 237514,
},
[431303] = {
["event"] = "SPELL_CAST_START",
["source"] = "夜幕影法师",
["npcID"] = 213892,
},
[1237240] = {
["isChanneled"] = true,
["source"] = "初生的影卫",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 240974,
},
[1240310] = {
["encounterName"] = "诸界吞噬者迪门修斯",
["source"] = "迪门修斯",
["npcID"] = 234478,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3135,
},
[446649] = {
["encounterName"] = "布朗派克男爵",
["source"] = "布朗派克男爵",
["npcID"] = 207939,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2835,
},
[445882] = {
["event"] = "SPELL_CAST_START",
["source"] = "影狂母猪",
["npcID"] = 214930,
},
[1237245] = {
["event"] = "SPELL_CAST_START",
["source"] = "大吞噬者",
["npcID"] = 244444,
},
[427469] = {
["event"] = "SPELL_CAST_START",
["source"] = "狂热的咒术师",
["npcID"] = 206698,
},
["330868"] = {
["npcID"] = 160495,
},
[319941] = {
["encounterName"] = "艾谢朗",
["source"] = "艾谢朗",
["npcID"] = 164185,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2380,
},
[448399] = {
["source"] = "狗头人领职者",
["event"] = "SPELL_CAST_START",
["npcID"] = 204127,
},
[1236229] = {
["event"] = "SPELL_CAST_START",
["source"] = "影卫奥法技师",
["npcID"] = 244137,
},
[462508] = {
["event"] = "SPELL_CAST_START",
["source"] = "虚空大使",
["npcID"] = 229537,
},
[1224980] = {
["isChanneled"] = true,
["source"] = "影卫科技巫师",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 237132,
},
[427609] = {
["event"] = "SPELL_CAST_START",
["source"] = "阿拉希骑士",
["npcID"] = 206696,
},
[13878] = {
["source"] = "灼热元素",
["event"] = "SPELL_CAST_START",
["npcID"] = 6520,
},
[326450] = {
["event"] = "SPELL_CAST_START",
["source"] = "堕落的驯犬者",
["npcID"] = 164562,
},
[448443] = {
["encounterName"] = "蛛网将军阿贝纳尔",
["source"] = "蛛网将军阿贝纳尔",
["npcID"] = 221896,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2877,
},
[1242028] = {
["source"] = "影卫哨兵扎·德林",
["event"] = "SPELL_CAST_START",
["npcID"] = 242705,
},
[1227759] = {
["source"] = "迷失相位的蠕行者",
["event"] = "SPELL_CAST_START",
["npcID"] = 246608,
},
[461487] = {
["encounterName"] = "收割者吉卡塔尔",
["source"] = "收割者吉卡塔尔",
["npcID"] = 215407,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2901,
},
[448444] = {
["encounterName"] = "蛛网将军阿贝纳尔",
["source"] = "蛛网将军阿贝纳尔",
["npcID"] = 221896,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2877,
},
[444608] = {
["encounterName"] = "隐修院长穆普雷",
["source"] = "隐修院长穆普雷",
["npcID"] = 207940,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2848,
},
[1239907] = {
["isChanneled"] = true,
["source"] = "蔽影塑命者",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 242517,
},
[1241357] = {
["encounterName"] = "缚魂者娜欣达利",
["source"] = "无缚相位剑士",
["encounterID"] = 3130,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 245008,
},
[1240891] = {
["encounterName"] = "狩魂猎手",
["source"] = "伊莉萨·悲夜",
["encounterID"] = 3122,
["event"] = "SPELL_CAST_START",
["npcID"] = 237662,
},
[444609] = {
["encounterName"] = "隐修院长穆普雷",
["source"] = "隐修院长穆普雷",
["npcID"] = 207940,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2848,
},
[1231130] = {
["source"] = "缚魂者娜欣达利",
["event"] = "SPELL_CAST_START",
["npcID"] = 233816,
},
[444743] = {
["event"] = "SPELL_CAST_START",
["source"] = "亡灵法师",
["npcID"] = 221760,
},
[1234733] = {
["encounterName"] = "集能哨兵",
["source"] = "集能哨兵",
["encounterID"] = 3129,
["event"] = "SPELL_CAST_START",
["npcID"] = 233814,
},
[352796] = {
["source"] = "大门看护者佐·马兹",
["event"] = "SPELL_CAST_START",
["npcID"] = 178392,
},
[1237272] = {
["encounterName"] = "卢米萨尔",
["source"] = "卢米萨尔",
["npcID"] = 233815,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3131,
},
[1214614] = {
["event"] = "SPELL_CAST_START",
["source"] = "殴棘",
["npcID"] = 247480,
},
[1232781] = {
["source"] = "惊魂的奥利斯",
["event"] = "SPELL_CAST_START",
["npcID"] = 232127,
},
[1216815] = {
["source"] = "萨拉塔斯",
["event"] = "SPELL_CAST_START",
["npcID"] = 236933,
},
[1225673] = {
["encounterName"] = "弗兰克提鲁斯",
["source"] = "弗兰克提鲁斯",
["encounterID"] = 3133,
["event"] = "SPELL_CAST_START",
["npcID"] = 237861,
},
[1226024] = {
["encounterName"] = "节点之王萨哈达尔",
["source"] = "节点之王萨哈达尔",
["encounterID"] = 3134,
["event"] = "SPELL_CAST_START",
["npcID"] = 237763,
},
[474001] = {
["source"] = "蒙面自由职业者",
["event"] = "SPELL_CAST_START",
["npcID"] = 231910,
},
[1236256] = {
["event"] = "SPELL_CAST_START",
["source"] = "影卫相位斩裂者",
["npcID"] = 244101,
},
[1215374] = {
["event"] = "SPELL_CAST_START",
["source"] = "芬戴尔·断轴",
["npcID"] = 247482,
},
[1225010] = {
["encounterName"] = "节点之王萨哈达尔",
["source"] = "节点之王萨哈达尔",
["npcID"] = 237763,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3134,
},
[1244443] = {
["source"] = "贸易执行者",
["event"] = "SPELL_CAST_START",
["npcID"] = 179842,
},
[446405] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "地渊之海憎恶",
["npcID"] = 247461,
},
[440137] = {
["event"] = "SPELL_CAST_START",
["source"] = "狂野锋爪兽",
["npcID"] = 221470,
},
[369423] = {
["encounterName"] = "殴棘",
["source"] = "暗索咯笑魔",
["npcID"] = 235505,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3374,
},
[440266] = {
["event"] = "SPELL_CAST_START",
["source"] = "黑暗猎犬",
["npcID"] = 217698,
},
[438476] = {
["encounterName"] = "阿瓦诺克斯",
["source"] = "阿瓦诺克斯",
["npcID"] = 213179,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2926,
},
[1228081] = {
["encounterName"] = "节点之王萨哈达尔",
["source"] = "节点亲王泽沃斯",
["encounterID"] = 3134,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 241798,
},
[349987] = {
["encounterName"] = "卖品会",
["source"] = "阿喀琉忒",
["encounterID"] = 2441,
["event"] = "SPELL_CAST_START",
["npcID"] = 176555,
},
[430037] = {
["event"] = "SPELL_CAST_START",
["source"] = "蜃鱼人矛渔夫",
["npcID"] = 214338,
},
[1231893] = {
["event"] = "SPELL_CAST_START",
["source"] = "钢魂奥能守卫",
["npcID"] = 247624,
},
[1225016] = {
["encounterName"] = "节点之王萨哈达尔",
["source"] = "节点之王萨哈达尔",
["npcID"] = 237763,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3134,
},
[1237293] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "佣兵收购专家",
["npcID"] = 244442,
},
[1237294] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "佣兵收购专家",
["npcID"] = 244442,
},
[433002] = {
["event"] = "SPELL_CAST_START",
["source"] = "沾血的助手",
["npcID"] = 216333,
},
[353312] = {
["encounterName"] = "希尔布兰德",
["source"] = "希尔布兰德",
["encounterID"] = 2426,
["event"] = "SPELL_CAST_START",
["npcID"] = 175663,
},
[1216826] = {
["encounterName"] = "老大娘",
["source"] = "暗索土狼",
["npcID"] = 230748,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3020,
},
[157348] = {
["source"] = "原始风暴元素",
["event"] = "SPELL_CAST_START",
["npcID"] = 77942,
},
[438473] = {
["encounterName"] = "阿瓦诺克斯",
["source"] = "阿瓦诺克斯",
["npcID"] = 213179,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2926,
},
[351646] = {
["encounterName"] = "索·莉亚",
["source"] = "索·莉亚",
["encounterID"] = 2442,
["event"] = "SPELL_CAST_START",
["npcID"] = 177269,
},
[434786] = {
["event"] = "SPELL_CAST_START",
["source"] = "颤声侍从",
["npcID"] = 216293,
},
[434802] = {
["event"] = "SPELL_CAST_START",
["source"] = "伊克辛",
["npcID"] = 217531,
},
[450756] = {
["event"] = "SPELL_CAST_START",
["source"] = "夜幕司令官",
["npcID"] = 214762,
},
[424414] = {
["encounterName"] = "戴尔克莱上尉",
["source"] = "戴尔克莱上尉",
["npcID"] = 207946,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2847,
},
[1217456] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "被惊扰的海藻",
["npcID"] = 231223,
},
[1228100] = {
["encounterName"] = "熔炉编织者阿拉兹",
["source"] = "奥术收集装置",
["encounterID"] = 3132,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 240905,
},
[449734] = {
["encounterName"] = "拉夏南",
["source"] = "拉夏南",
["npcID"] = 213937,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2839,
},
[427484] = {
["event"] = "SPELL_CAST_START",
["source"] = "狂热的咒术师",
["npcID"] = 206698,
},
[1214620] = {
["event"] = "SPELL_CAST_START",
["source"] = "殴棘",
["npcID"] = 247480,
},
[1239356] = {
["source"] = "复生的潜伏者",
["event"] = "SPELL_CAST_START",
["npcID"] = 99541,
},
[275563] = {
["event"] = "SPELL_CAST_START",
["source"] = "饥影牛蛙",
["npcID"] = 214406,
},
[160772] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "落网的受害者",
["npcID"] = 225601,
},
[1225582] = {
["encounterName"] = "缚魂者娜欣达利",
["source"] = "缚魂者娜欣达利",
["encounterID"] = 3130,
["event"] = "SPELL_CAST_START",
["npcID"] = 233816,
},
[472452] = {
["encounterName"] = "老大娘",
["source"] = "暗索无人机",
["npcID"] = 228424,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3020,
},
[439506] = {
["encounterName"] = "阿努布泽克特",
["source"] = "阿努布泽克特",
["npcID"] = 215405,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2906,
},
[434793] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "颤声侍从",
["npcID"] = 216293,
},
[1215337] = {
["event"] = "SPELL_CAST_START",
["source"] = "芬戴尔·断轴",
["npcID"] = 247482,
},
[418791] = {
["event"] = "SPELL_CAST_START",
["source"] = "比尔",
["npcID"] = 211062,
},
[1237319] = {
["encounterName"] = "诸界吞噬者迪门修斯",
["source"] = "虚空守卫",
["encounterID"] = 3135,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 234478,
},
[1224025] = {
["encounterName"] = "缚魂者娜欣达利",
["source"] = "缚魂者娜欣达利",
["encounterID"] = 3130,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 233816,
},
[356133] = {
["source"] = "肌肉虬结的水手",
["event"] = "SPELL_CAST_START",
["npcID"] = 180015,
},
[1228115] = {
["encounterName"] = "节点之王萨哈达尔",
["source"] = "节点之王萨哈达尔",
["npcID"] = 237763,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3134,
},
[59638] = {
["event"] = "SPELL_CAST_START",
["source"] = "镜像",
["npcID"] = 31216,
},
[323142] = {
["encounterName"] = "宫务大臣",
["source"] = "宫务大臣",
["npcID"] = 164218,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2381,
},
[471733] = {
["event"] = "SPELL_CAST_START",
["source"] = "被惊扰的海藻",
["npcID"] = 231223,
},
[453496] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "夜幕影法师",
["npcID"] = 225479,
},
[1225616] = {
["encounterName"] = "缚魂者娜欣达利",
["source"] = "缚魂者娜欣达利",
["encounterID"] = 3130,
["event"] = "SPELL_CAST_START",
["npcID"] = 233816,
},
[323143] = {
["encounterName"] = "宫务大臣",
["source"] = "宫务大臣",
["npcID"] = 164218,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2381,
},
[1223007] = {
["source"] = "废土蠕行者",
["event"] = "SPELL_CAST_START",
["npcID"] = 234918,
},
[3110] = {
["event"] = "SPELL_CAST_START",
["source"] = "基格提普",
["npcID"] = 416,
},
[1213803] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "风险投资公司建筑师",
["npcID"] = 229251,
},
[1234263] = {
["encounterName"] = "诸界吞噬者迪门修斯",
["source"] = "迪门修斯",
["npcID"] = 233824,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3135,
},
[1215850] = {
["source"] = "掘地蠕行者",
["event"] = "SPELL_CAST_START",
["npcID"] = 245092,
},
[447439] = {
["encounterName"] = "戴尔克莱上尉",
["source"] = "戴尔克莱上尉",
["npcID"] = 207946,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2847,
},
[418796] = {
["event"] = "SPELL_CAST_START",
["source"] = "比尔",
["npcID"] = 211062,
},
[1232221] = {
["encounterName"] = "熔炉编织者阿拉兹",
["source"] = "熔炉编织者阿拉兹",
["encounterID"] = 3132,
["event"] = "SPELL_CAST_START",
["npcID"] = 233817,
},
[471736] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "被惊扰的海藻",
["npcID"] = 231223,
},
[450509] = {
["event"] = "SPELL_CAST_START",
["source"] = "蛛魔队长",
["npcID"] = 216584,
},
[468813] = {
["encounterName"] = "吉泽尔·超震",
["source"] = "吉泽尔·超震",
["npcID"] = 226404,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3054,
},
[353836] = {
["encounterName"] = "麦扎的绿洲",
["source"] = "捣乱的顾客",
["encounterID"] = 2440,
["event"] = "SPELL_CAST_START",
["npcID"] = 176565,
},
[1221401] = {
["event"] = "SPELL_CAST_START",
["source"] = "影卫虚空召唤师",
["npcID"] = 231588,
},
[435165] = {
["event"] = "SPELL_CAST_START",
["source"] = "布朗派克爵士",
["npcID"] = 217658,
},
[1246541] = {
["encounterName"] = "诸界吞噬者迪门修斯",
["source"] = "虚无束缚者",
["encounterID"] = 3135,
["event"] = "SPELL_CAST_START",
["npcID"] = 248589,
},
[414945] = {
["event"] = "SPELL_CAST_START",
["source"] = "真菌散腐者",
["npcID"] = 207453,
},
[450714] = {
["event"] = "SPELL_CAST_START",
["source"] = "蛛魔领主",
["npcID"] = 218103,
},
[328125] = {
["encounterName"] = "艾谢朗",
["source"] = "不死石精",
["npcID"] = 164363,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2380,
},
[1227117] = {
["encounterName"] = "狩魂猎手",
["source"] = "伊莉萨·悲夜",
["encounterID"] = 3122,
["event"] = "SPELL_CAST_START",
["npcID"] = 237662,
},
[456138] = {
["source"] = "沙背钻地虫",
["event"] = "SPELL_CAST_START",
["npcID"] = 241360,
},
[1220981] = {
["encounterName"] = "集能哨兵",
["source"] = "集能哨兵",
["npcID"] = 233814,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3129,
},
[1220982] = {
["encounterName"] = "集能哨兵",
["source"] = "集能哨兵",
["encounterID"] = 3129,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 233814,
},
[1221396] = {
["source"] = "影卫虚空召唤师",
["event"] = "SPELL_CAST_START",
["npcID"] = 231588,
},
[1221395] = {
["isChanneled"] = false,
["source"] = "影卫虚空召唤师",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 231588,
},
[1215870] = {
["event"] = "SPELL_CAST_START",
["source"] = "芬戴尔·断轴",
["npcID"] = 247482,
},
[1242469] = {
["event"] = "SPELL_CAST_START",
["source"] = "誓约掠沙者",
["npcID"] = 244410,
},
[468672] = {
["event"] = "SPELL_CAST_START",
["source"] = "爆壳螃蟹",
["npcID"] = 231497,
},
[445910] = {
["event"] = "SPELL_CAST_START",
["source"] = "孢点",
["npcID"] = 237337,
},
[347958] = {
["encounterName"] = "希尔布兰德",
["source"] = "宝库净化者",
["encounterID"] = 2426,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 176551,
},
[325701] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "堕落的搜集者",
["npcID"] = 165529,
},
[431333] = {
["event"] = "SPELL_CAST_START",
["source"] = "夜幕暗法师",
["npcID"] = 213893,
},
[451026] = {
["encounterName"] = "代言人夏多克朗",
["source"] = "代言人夏多克朗",
["npcID"] = 211087,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2837,
},
[448213] = {
["encounterName"] = "拉夏南",
["source"] = "拉夏南",
["npcID"] = 213937,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2839,
},
[444377] = {
["event"] = "SPELL_CAST_START",
["source"] = "晦崖灰熊",
["npcID"] = 227954,
},
[1226111] = {
["source"] = "贪婪的毁灭者",
["event"] = "SPELL_CAST_START",
["npcID"] = 236995,
},
[473533] = {
["event"] = "SPELL_CAST_START",
["source"] = "顺服的掠食者",
["npcID"] = 231930,
},
[1227529] = {
["encounterName"] = "节点之王萨哈达尔",
["source"] = "节点之王萨哈达尔",
["encounterID"] = 3134,
["event"] = "SPELL_CAST_START",
["npcID"] = 237763,
},
[349498] = {
["encounterName"] = "卖品会",
["source"] = "阿尔克鲁克斯",
["encounterID"] = 2441,
["event"] = "SPELL_CAST_START",
["npcID"] = 176556,
},
[1238780] = {
["encounterName"] = "戴尔克莱上尉",
["source"] = "戴尔克莱上尉",
["npcID"] = 207946,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2847,
},
[429545] = {
["event"] = "SPELL_CAST_START",
["source"] = "虚触代言人",
["npcID"] = 223469,
},
[1228161] = {
["encounterName"] = "熔炉编织者阿拉兹",
["source"] = "熔炉编织者阿拉兹",
["npcID"] = 233817,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3132,
},
[1228163] = {
["encounterName"] = "节点之王萨哈达尔",
["source"] = "皇家虚空之翼",
["encounterID"] = 3134,
["event"] = "SPELL_CAST_START",
["npcID"] = 233823,
},
[1236348] = {
["encounterName"] = "哨卫佐·菲克斯",
["source"] = "佐·菲克斯",
["encounterID"] = 2425,
["event"] = "SPELL_CAST_START",
["npcID"] = 175616,
},
[424431] = {
["encounterName"] = "戴尔克莱上尉",
["source"] = "艾蕾娜·安博兰兹",
["npcID"] = 211290,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2847,
},
[423664] = {
["encounterName"] = "隐修院长穆普雷",
["source"] = "隐修院长穆普雷",
["npcID"] = 207940,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2848,
},
[466124] = {
["encounterName"] = "吉泽尔·超震",
["source"] = "吉泽尔·超震",
["encounterID"] = 3054,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 226404,
},
[1225099] = {
["encounterName"] = "节点之王萨哈达尔",
["source"] = "皇家虚空之翼",
["npcID"] = 244170,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3134,
},
[1245575] = {
["encounterName"] = "狩魂猎手",
["source"] = "阿达拉斯·暮焰",
["npcID"] = 237661,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3122,
},
[426734] = {
["encounterName"] = "代言人夏多克朗",
["source"] = "代言人夏多克朗",
["npcID"] = 211087,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2837,
},
[104318] = {
["source"] = "野生小鬼",
["event"] = "SPELL_CAST_START",
["npcID"] = 55659,
},
[434407] = {
["encounterName"] = "拉夏南",
["source"] = "拉夏南",
["npcID"] = 213937,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2839,
},
[473537] = {
["event"] = "SPELL_CAST_START",
["source"] = "重拳恶党",
["npcID"] = 231904,
},
[1237381] = {
["event"] = "SPELL_CAST_START",
["source"] = "佣兵收购专家",
["npcID"] = 244442,
},
[356404] = {
["source"] = "上古熔火恶犬",
["event"] = "SPELL_CAST_START",
["npcID"] = 180091,
},
[355637] = {
["encounterName"] = "卖品会",
["source"] = "集市维和者",
["encounterID"] = 2441,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 179840,
},
[460867] = {
["encounterName"] = "破拆双人组",
["source"] = "齐扎·迅索",
["npcID"] = 226403,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3019,
},
[455380] = {
["event"] = "SPELL_CAST_START",
["source"] = "失控的轨机",
["npcID"] = 218251,
},
[1244556] = {
["source"] = "惊魂的奥利斯",
["event"] = "SPELL_CAST_START",
["npcID"] = 232127,
},
[355638] = {
["encounterName"] = "卖品会",
["source"] = "集市维和者",
["encounterID"] = 2441,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 179840,
},
[1215905] = {
["encounterName"] = "殴棘",
["source"] = "葬轮",
["npcID"] = 247481,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3374,
},
[1225113] = {
["source"] = "影卫科技巫师",
["event"] = "SPELL_CAST_START",
["npcID"] = 237132,
},
[1231252] = {
["isChanneled"] = false,
["source"] = "过载的哨兵",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 242631,
},
[387352] = {
["event"] = "SPELL_CAST_START",
["source"] = "帕特洛",
["npcID"] = 211061,
},
[1242521] = {
["event"] = "SPELL_CAST_START",
["source"] = "誓约唤荒者",
["npcID"] = 244418,
},
[1224094] = {
["event"] = "SPELL_CAST_START",
["source"] = "掘地蠕行者",
["npcID"] = 236947,
},
[454615] = {
["event"] = "SPELL_CAST_START",
["source"] = "大胆的恫吓者",
["npcID"] = 230774,
},
[440549] = {
["event"] = "SPELL_CAST_START",
["source"] = "怒鳍处刑者",
["npcID"] = 213408,
},
[473541] = {
["event"] = "SPELL_CAST_START",
["source"] = "重拳恶党",
["npcID"] = 231904,
},
[1234328] = {
["encounterName"] = "熔炉编织者阿拉兹",
["source"] = "奥术收集装置",
["encounterID"] = 3132,
["event"] = "SPELL_CAST_START",
["npcID"] = 240905,
},
[355473] = {
["source"] = "指挥官佐·法",
["event"] = "SPELL_CAST_START",
["npcID"] = 179821,
},
[355641] = {
["source"] = "老练的火花法师",
["event"] = "SPELL_CAST_START",
["npcID"] = 179841,
},
[317792] = {
["source"] = "亡者魔导师",
["event"] = "SPELL_CAST_START",
["npcID"] = 163366,
},
[359222] = {
["encounterName"] = "麦扎的绿洲",
["source"] = "暴躁的顾客",
["encounterID"] = 2440,
["event"] = "SPELL_CAST_START",
["npcID"] = 176561,
},
[1232287] = {
["source"] = "影卫传送门先知",
["event"] = "SPELL_CAST_START",
["npcID"] = 238091,
},
[1228196] = {
["encounterName"] = "节点之王萨哈达尔",
["source"] = "皇家虚空之翼",
["encounterID"] = 3134,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 233823,
},
[1228197] = {
["encounterName"] = "节点之王萨哈达尔",
["source"] = "维度传送门",
["encounterID"] = 3134,
["event"] = "SPELL_CAST_START",
["npcID"] = 241916,
},
[346947] = {
["encounterName"] = "收发室乱战",
["source"] = "P.O.S.T.总管",
["encounterID"] = 2424,
["event"] = "SPELL_CAST_START",
["npcID"] = 175646,
},
[465871] = {
["event"] = "SPELL_CAST_START",
["source"] = "暗索扭血者",
["npcID"] = 230748,
},
[463058] = {
["event"] = "SPELL_CAST_START",
["source"] = "暗索土狼",
["npcID"] = 229252,
},
[463061] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "暗索土狼",
["npcID"] = 229252,
},
[1228216] = {
["encounterName"] = "熔炉编织者阿拉兹",
["source"] = "熔炉编织者阿拉兹",
["npcID"] = 233817,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3132,
},
[432113] = {
["source"] = "主宰",
["event"] = "SPELL_CAST_START",
["npcID"] = 228575,
},
[453856] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "代言人夏多克朗",
["npcID"] = 225601,
},
[347716] = {
["source"] = "P.O.S.T.工人",
["event"] = "SPELL_CAST_START",
["npcID"] = 176394,
},
[443111] = {
["event"] = "SPELL_CAST_START",
["source"] = "晦幽织暗者",
["npcID"] = 216868,
},
[1235368] = {
["source"] = "过载的哨兵",
["event"] = "SPELL_CAST_START",
["npcID"] = 242631,
},
[350101] = {
["encounterName"] = "卖品会",
["source"] = "雯扎·金线",
["encounterID"] = 2441,
["event"] = "SPELL_CAST_START",
["npcID"] = 176705,
},
[448485] = {
["event"] = "SPELL_CAST_START",
["source"] = "守卫队长苏雷曼",
["npcID"] = 212826,
},
[348566] = {
["encounterName"] = "麦扎的绿洲",
["source"] = "打架的顾客",
["encounterID"] = 2440,
["event"] = "SPELL_CAST_START",
["npcID"] = 176562,
},
[357436] = {
["encounterName"] = "麦扎的绿洲",
["source"] = "维利席安",
["encounterID"] = 2440,
["event"] = "SPELL_CAST_START",
["npcID"] = 180470,
},
[1242534] = {
["event"] = "SPELL_CAST_START",
["source"] = "誓约唤荒者",
["npcID"] = 244418,
},
[1228213] = {
["encounterName"] = "熔炉编织者阿拉兹",
["source"] = "奥术收集装置",
["npcID"] = 240905,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3132,
},
[415492] = {
["encounterName"] = "旋菇",
["source"] = "旋菇",
["npcID"] = 207481,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2831,
},
[427001] = {
["encounterName"] = "阿努布伊卡基",
["source"] = "阿努布伊卡基",
["npcID"] = 211089,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2838,
},
[431349] = {
["event"] = "SPELL_CAST_START",
["source"] = "夜幕筑暗师",
["npcID"] = 213885,
},
[1230263] = {
["encounterName"] = "节点之王萨哈达尔",
["source"] = "节点亲王凯沃尔",
["encounterID"] = 3134,
["event"] = "SPELL_CAST_START",
["npcID"] = 241803,
},
[1216967] = {
["event"] = "SPELL_CAST_START",
["source"] = "虚帷蝠鲼",
["npcID"] = 234842,
},
[432117] = {
["encounterName"] = "收割者吉卡塔尔",
["source"] = "收割者吉卡塔尔",
["npcID"] = 215407,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2901,
},
[1245611] = {
["event"] = "SPELL_CAST_START",
["source"] = "进流守护者",
["npcID"] = 246874,
},
[1228214] = {
["encounterName"] = "熔炉编织者阿拉兹",
["source"] = "奥术收集装置",
["encounterID"] = 3132,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 240905,
},
[324447] = {
["event"] = "SPELL_CAST_START",
["source"] = "蜃鱼人矛渔夫",
["npcID"] = 214338,
},
[1232315] = {
["source"] = "影卫哨兵扎·德林",
["event"] = "SPELL_CAST_START",
["npcID"] = 242705,
},
[462771] = {
["event"] = "SPELL_CAST_START",
["source"] = "风险投资公司勘探员",
["npcID"] = 229686,
},
[347721] = {
["source"] = "损坏的分拣机",
["event"] = "SPELL_CAST_START",
["npcID"] = 176396,
},
[1236973] = {
["encounterName"] = "宫务大臣",
["source"] = "宫务大臣",
["npcID"] = 164218,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2381,
},
[338003] = {
["event"] = "SPELL_CAST_START",
["source"] = "堕落的歼灭者",
["npcID"] = 165414,
},
[1244596] = {
["encounterName"] = "麦扎的绿洲",
["source"] = "艾薇勒",
["encounterID"] = 2440,
["event"] = "SPELL_CAST_START",
["npcID"] = 180399,
},
[356929] = {
["source"] = "追踪者佐·刻斯",
["event"] = "SPELL_CAST_START",
["npcID"] = 179837,
},
[355139] = {
["source"] = "活力鱼串",
["event"] = "SPELL_CAST_START",
["npcID"] = 179733,
},
[1225162] = {
["encounterName"] = "撰魂师",
["source"] = "撰魂师",
["encounterID"] = 3109,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 234935,
},
[1222815] = {
["source"] = "废土遗民祭师",
["event"] = "SPELL_CAST_START",
["npcID"] = 234957,
},
[378413] = {
["source"] = "狂乱的潮汐之核",
["event"] = "SPELL_CAST_START",
["npcID"] = 213699,
},
[1242071] = {
["encounterName"] = "缚魂者娜欣达利",
["source"] = "缚魂者娜欣达利",
["npcID"] = 233816,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3130,
},
[1232327] = {
["encounterName"] = "节点之王萨哈达尔",
["source"] = "节点之王萨哈达尔",
["encounterID"] = 3134,
["event"] = "SPELL_CAST_START",
["npcID"] = 237763,
},
[1235326] = {
["event"] = "SPELL_CAST_START",
["source"] = "石裔切割者",
["npcID"] = 167607,
},
[1228238] = {
["encounterName"] = "狩魂猎手",
["source"] = "维拉瑞安·血愤",
["npcID"] = 237660,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3122,
},
[346957] = {
["encounterName"] = "希尔布兰德",
["source"] = "泰坦防御炮台",
["encounterID"] = 2426,
["event"] = "SPELL_CAST_START",
["npcID"] = 175667,
},
[1248699] = {
["source"] = "废土遗民诉契者",
["event"] = "SPELL_CAST_START",
["npcID"] = 234955,
},
[1245634] = {
["encounterName"] = "索·阿兹密",
["source"] = "索·阿兹密",
["encounterID"] = 2437,
["event"] = "SPELL_CAST_START",
["npcID"] = 175806,
},
[1248701] = {
["isChanneled"] = true,
["source"] = "废土遗民诉契者",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 234955,
},
[1248702] = {
["isChanneled"] = true,
["source"] = "废土遗民诉契者",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 234955,
},
[1225174] = {
["encounterName"] = "撰魂师",
["source"] = "撰魂师",
["encounterID"] = 3109,
["event"] = "SPELL_CAST_START",
["npcID"] = 234935,
},
[1236428] = {
["event"] = "SPELL_CAST_START",
["source"] = "影目眼魔",
["npcID"] = 244138,
},
[1215227] = {
["event"] = "SPELL_CAST_START",
["source"] = "暗法师扎杜斯",
["npcID"] = 239454,
},
[448492] = {
["event"] = "SPELL_CAST_START",
["source"] = "守卫队长苏雷曼",
["npcID"] = 212826,
},
[1219040] = {
["encounterName"] = "缚魂者娜欣达利",
["source"] = "无缚法师",
["encounterID"] = 3130,
["event"] = "SPELL_CAST_START",
["npcID"] = 237872,
},
[433403] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "敏捷的聚生虫",
["npcID"] = 208245,
},
[1227226] = {
["encounterName"] = "卢米萨尔",
["source"] = "卢米萨尔",
["npcID"] = 233815,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3131,
},
[1227227] = {
["encounterName"] = "卢米萨尔",
["source"] = "卢米萨尔",
["npcID"] = 233815,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3131,
},
[1215975] = {
["encounterName"] = "殴棘",
["source"] = "葬轮",
["npcID"] = 247481,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3374,
},
[326438] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "哈尔吉亚斯的碎片",
["npcID"] = 164557,
},
[1234044] = {
["encounterName"] = "诸界吞噬者迪门修斯",
["source"] = "迪门修斯",
["encounterID"] = 3135,
["event"] = "SPELL_CAST_START",
["npcID"] = 233824,
},
[463169] = {
["event"] = "SPELL_CAST_START",
["source"] = "风险投资公司勘探员",
["npcID"] = 229686,
},
[433053] = {
["event"] = "SPELL_CAST_START",
["source"] = "食光者",
["npcID"] = 216036,
},
[458867] = {
["encounterName"] = "潜伏者奈拉瑟克",
["source"] = "潜伏者奈拉瑟克",
["npcID"] = 220577,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2949,
},
[357513] = {
["encounterName"] = "麦扎的绿洲",
["source"] = "屁屁",
["encounterID"] = 2440,
["event"] = "SPELL_CAST_START",
["npcID"] = 180485,
},
[449251] = {
["event"] = "SPELL_CAST_START",
["source"] = "蛛魔追猎者",
["npcID"] = 228951,
},
[1231328] = {
["isChanneled"] = true,
["source"] = "过载的哨兵",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 242631,
},
[1219053] = {
["encounterName"] = "缚魂者娜欣达利",
["source"] = "无缚刺客",
["encounterID"] = 3130,
["event"] = "SPELL_CAST_START",
["npcID"] = 237871,
},
[433662] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "飞翼运输者",
["npcID"] = 216856,
},
[1244630] = {
["encounterName"] = "麦扎的绿洲",
["source"] = "泥哨",
["encounterID"] = 2440,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 180486,
},
[449071] = {
["source"] = "狗头人领职者",
["event"] = "SPELL_CAST_START",
["npcID"] = 204127,
},
[465120] = {
["event"] = "SPELL_CAST_START",
["source"] = "载货机器人",
["npcID"] = 231014,
},
[1228265] = {
["encounterName"] = "节点之王萨哈达尔",
["source"] = "节点之王萨哈达尔",
["npcID"] = 237763,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3134,
},
[1232765] = {
["source"] = "惊魂的奥利斯",
["event"] = "SPELL_CAST_START",
["npcID"] = 232127,
},
[461796] = {
["event"] = "SPELL_CAST_START",
["source"] = "暗索爆破手",
["npcID"] = 229212,
},
[473220] = {
["encounterName"] = "老大娘",
["source"] = "老大娘",
["npcID"] = 226398,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3020,
},
[1236703] = {
["encounterName"] = "撰魂师",
["source"] = "撰魂师",
["encounterID"] = 3109,
["event"] = "SPELL_CAST_START",
["npcID"] = 234935,
},
[351057] = {
["encounterName"] = "索·莉亚",
["source"] = "索·莉亚",
["encounterID"] = 2442,
["event"] = "SPELL_CAST_START",
["npcID"] = 177269,
},
[432130] = {
["encounterName"] = "收割者吉卡塔尔",
["source"] = "收割者吉卡塔尔",
["npcID"] = 215407,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2901,
},
[465595] = {
["event"] = "SPELL_CAST_START",
["source"] = "风险投资公司电工",
["npcID"] = 231312,
},
[1235766] = {
["event"] = "SPELL_CAST_START",
["source"] = "石裔掠夺者",
["npcID"] = 167612,
},
[357196] = {
["source"] = "财团智囊",
["event"] = "SPELL_CAST_START",
["npcID"] = 180336,
},
[449522] = {
["source"] = "聚生尖啸者",
["event"] = "SPELL_CAST_START",
["npcID"] = 220087,
},
[431364] = {
["event"] = "SPELL_CAST_START",
["source"] = "夜幕祭师",
["npcID"] = 214761,
},
[1220618] = {
["encounterName"] = "集能哨兵",
["source"] = "集能哨兵",
["npcID"] = 233814,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3129,
},
[1245669] = {
["encounterName"] = "索·阿兹密",
["source"] = "索·阿兹密",
["encounterID"] = 2437,
["event"] = "SPELL_CAST_START",
["npcID"] = 175806,
},
[450546] = {
["event"] = "SPELL_CAST_START",
["source"] = "蛛魔掠夺者",
["npcID"] = 228954,
},
[433411] = {
["event"] = "SPELL_CAST_START",
["source"] = "蛛魔暗法师",
["npcID"] = 208242,
},
[356942] = {
["source"] = "追踪者佐·刻斯",
["event"] = "SPELL_CAST_START",
["npcID"] = 179837,
},
[436360] = {
["event"] = "SPELL_CAST_START",
["source"] = "晦幽织暗者",
["npcID"] = 216868,
},
[453616] = {
["source"] = "末日守卫",
["event"] = "SPELL_CAST_START",
["npcID"] = 225493,
},
[1227261] = {
["encounterName"] = "卢米萨尔",
["source"] = "卢米萨尔",
["encounterID"] = 3131,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 233815,
},
[1216233] = {
["event"] = "SPELL_CAST_START",
["source"] = "结晶魔像",
["npcID"] = 236549,
},
[1227263] = {
["encounterName"] = "卢米萨尔",
["source"] = "卢米萨尔",
["npcID"] = 233815,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3131,
},
[1225218] = {
["encounterName"] = "撰魂师",
["source"] = "撰魂师",
["encounterID"] = 3109,
["event"] = "SPELL_CAST_START",
["npcID"] = 234935,
},
[398631] = {
["event"] = "SPELL_CAST_START",
["source"] = "郁齿诱捕者",
["npcID"] = 220256,
},
[424462] = {
["event"] = "SPELL_CAST_START",
["source"] = "泰纳·杜尔玛",
["npcID"] = 239834,
},
[1213656] = {
["source"] = "钻头中士",
["event"] = "SPELL_CAST_START",
["npcID"] = 231925,
},
[432135] = {
["event"] = "SPELL_CAST_START",
["source"] = "水能堡投机者",
["npcID"] = 222867,
},
[465127] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "载货机器人",
["npcID"] = 231014,
},
[1238737] = {
["source"] = "入侵的相位爬行者",
["event"] = "SPELL_CAST_START",
["npcID"] = 244448,
},
[448248] = {
["event"] = "SPELL_CAST_START",
["source"] = "沾血的网法师",
["npcID"] = 223253,
},
[346204] = {
["encounterName"] = "哨卫佐·菲克斯",
["source"] = "佐·菲克斯",
["encounterID"] = 2425,
["event"] = "SPELL_CAST_START",
["npcID"] = 175616,
},
[1240912] = {
["source"] = "集市监督者",
["event"] = "SPELL_CAST_START",
["npcID"] = 246285,
},
[355642] = {
["isChanneled"] = true,
["source"] = "老练的火花法师",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 179841,
},
[326389] = {
["encounterName"] = "艾谢朗",
["source"] = "艾谢朗",
["npcID"] = 164185,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2380,
},
[454643] = {
["event"] = "SPELL_CAST_START",
["source"] = "大胆的恫吓者",
["npcID"] = 235496,
},
[1213805] = {
["event"] = "SPELL_CAST_START",
["source"] = "风险投资公司建筑师",
["npcID"] = 229251,
},
[1233416] = {
["encounterName"] = "弗兰克提鲁斯",
["source"] = "弗兰克提鲁斯",
["npcID"] = 237861,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3133,
},
[1227279] = {
["encounterName"] = "缚魂者娜欣达利",
["source"] = "缚魂者娜欣达利",
["encounterID"] = 3130,
["event"] = "SPELL_CAST_START",
["npcID"] = 233816,
},
[1228065] = {
["encounterName"] = "节点之王萨哈达尔",
["source"] = "节点之王萨哈达尔",
["encounterID"] = 3134,
["event"] = "SPELL_CAST_START",
["npcID"] = 237763,
},
[474337] = {
["event"] = "SPELL_CAST_START",
["source"] = "撕碎王3000型",
["npcID"] = 230740,
},
[469478] = {
["encounterName"] = "沼面",
["source"] = "沼面",
["npcID"] = 226396,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3053,
},
[424421] = {
["event"] = "SPELL_CAST_START",
["source"] = "泰纳·杜尔玛",
["npcID"] = 239834,
},
[1232399] = {
["encounterName"] = "节点之王萨哈达尔",
["source"] = "法力铸造泰坦",
["encounterID"] = 3134,
["event"] = "SPELL_CAST_START",
["npcID"] = 241800,
},
[1220511] = {
["encounterName"] = "塔尔·巴特和阿瓦兹吉",
["source"] = "塔尔·巴特",
["encounterID"] = 3108,
["event"] = "SPELL_CAST_START",
["npcID"] = 234933,
},
[357508] = {
["source"] = "暴怒的恐角龙",
["event"] = "SPELL_CAST_START",
["npcID"] = 180495,
},
[1232590] = {
["encounterName"] = "熔炉编织者阿拉兹",
["source"] = "奥术收集装置",
["encounterID"] = 3132,
["event"] = "SPELL_CAST_START",
["npcID"] = 240905,
},
[1243656] = {
["event"] = "SPELL_CAST_START",
["source"] = "誓约奥术师",
["npcID"] = 244411,
},
[1223944] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "相位追猎者",
["npcID"] = 234843,
},
[1221152] = {
["source"] = "贪食的饕餮者",
["event"] = "SPELL_CAST_START",
["npcID"] = 234883,
},
[1216039] = {
["event"] = "SPELL_CAST_START",
["source"] = "暗索爆破手",
["npcID"] = 229212,
},
[352347] = {
["encounterName"] = "希尔布兰德",
["source"] = "宝库净化者",
["encounterID"] = 2426,
["event"] = "SPELL_CAST_START",
["npcID"] = 176551,
},
[322936] = {
["encounterName"] = "哈尔吉亚斯，罪污巨像",
["source"] = "哈尔吉亚斯",
["npcID"] = 165408,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2401,
},
[1228317] = {
["encounterName"] = "节点之王萨哈达尔",
["source"] = "皇家虚空之翼",
["npcID"] = 233823,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3134,
},
[456438] = {
["event"] = "SPELL_CAST_START",
["source"] = "被诅咒的矿工",
["npcID"] = 213565,
},
[377923] = {
["source"] = "升腾岩浆",
["event"] = "SPELL_CAST_START",
["npcID"] = 225390,
},
[470308] = {
["event"] = "SPELL_CAST_START",
["source"] = "苏雷吉助祭",
["npcID"] = 238771,
},
[424419] = {
["encounterName"] = "戴尔克莱上尉",
["source"] = "戴尔克莱上尉",
["npcID"] = 207946,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2847,
},
[1219700] = {
["encounterName"] = "塔尔·巴特和阿瓦兹吉",
["source"] = "阿瓦兹吉",
["encounterID"] = 3108,
["event"] = "SPELL_CAST_START",
["npcID"] = 237514,
},
[1226277] = {
["source"] = "灵牙吠魂者",
["event"] = "SPELL_CAST_START",
["npcID"] = 234051,
},
[350796] = {
["encounterName"] = "索·莉亚",
["source"] = "索·莉亚",
["encounterID"] = 2442,
["event"] = "SPELL_CAST_START",
["npcID"] = 177269,
},
[31707] = {
["event"] = "SPELL_CAST_START",
["source"] = "Water Elemental",
["npcID"] = 208441,
},
[1223211] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "暗法师扎杜斯",
["npcID"] = 239454,
},
[472047] = {
["event"] = "SPELL_CAST_START",
["source"] = "傲慢的闯入者",
["npcID"] = 225823,
},
[349797] = {
["encounterName"] = "卖品会",
["source"] = "阿尔克鲁克斯",
["encounterID"] = 2441,
["event"] = "SPELL_CAST_START",
["npcID"] = 176556,
},
[1235490] = {
["encounterName"] = "诸界吞噬者迪门修斯",
["source"] = "迪门修斯",
["npcID"] = 234478,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3135,
},
[346980] = {
["encounterName"] = "希尔布兰德",
["source"] = "宝库净化者",
["encounterID"] = 2426,
["event"] = "SPELL_CAST_START",
["npcID"] = 176551,
},
[1226442] = {
["encounterName"] = "节点之王萨哈达尔",
["source"] = "节点之王萨哈达尔",
["encounterID"] = 3134,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 237763,
},
[1237694] = {
["encounterName"] = "诸界吞噬者迪门修斯",
["source"] = "阿托席恩",
["npcID"] = 245255,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3135,
},
[1218103] = {
["encounterName"] = "狩魂猎手",
["source"] = "维拉瑞安·血愤",
["npcID"] = 237660,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3122,
},
[1231403] = {
["encounterName"] = "卢米萨尔",
["source"] = "卢米萨尔",
["npcID"] = 233815,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3131,
},
[1245726] = {
["encounterName"] = "狩魂猎手",
["source"] = "阿达拉斯·暮焰",
["encounterID"] = 3122,
["event"] = "SPELL_CAST_START",
["npcID"] = 238401,
},
[383298] = {
["source"] = "狂暴的岩浆之怒",
["event"] = "SPELL_CAST_START",
["npcID"] = 214924,
},
[388669] = {
["event"] = "SPELL_CAST_START",
["source"] = "满口大蒜味的多头蛇",
["npcID"] = 224751,
},
[1223222] = {
["event"] = "SPELL_CAST_START",
["source"] = "暗法师扎杜斯",
["npcID"] = 239454,
},
[448515] = {
["encounterName"] = "戴尔克莱上尉",
["source"] = "艾蕾娜·安博兰兹",
["npcID"] = 211290,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2847,
},
[455932] = {
["event"] = "SPELL_CAST_START",
["source"] = "食光者",
["npcID"] = 216036,
},
[473579] = {
["source"] = "空中支援机器人",
["event"] = "SPELL_CAST_START",
["npcID"] = 231906,
},
[445191] = {
["source"] = "喷火冲锋者",
["event"] = "SPELL_CAST_START",
["npcID"] = 213577,
},
[355934] = {
["source"] = "支援警官",
["event"] = "SPELL_CAST_START",
["npcID"] = 177817,
},
[322943] = {
["encounterName"] = "哈尔吉亚斯，罪污巨像",
["source"] = "哈尔吉亚斯",
["npcID"] = 165408,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2401,
},
[1231414] = {
["event"] = "SPELL_CAST_START",
["source"] = "被丢弃的地雷",
["npcID"] = 242768,
},
[353635] = {
["encounterName"] = "索·莉亚",
["source"] = "索·莉亚",
["encounterID"] = 2442,
["event"] = "SPELL_CAST_START",
["npcID"] = 177269,
},
[1250853] = {
["encounterName"] = "节点之王萨哈达尔",
["source"] = "扭曲虚空幻影",
["npcID"] = 250215,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3134,
},
[1226302] = {
["source"] = "灵牙吠魂者",
["event"] = "SPELL_CAST_START",
["npcID"] = 234051,
},
[1230529] = {
["encounterName"] = "熔炉编织者阿拉兹",
["source"] = "熔炉编织者阿拉兹",
["encounterID"] = 3132,
["event"] = "SPELL_CAST_START",
["npcID"] = 233817,
},
[1223235] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "暗法师扎杜斯",
["npcID"] = 239454,
},
[473070] = {
["encounterName"] = "沼面",
["source"] = "沼面",
["npcID"] = 226396,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3053,
},
[1245743] = {
["encounterName"] = "狩魂猎手",
["source"] = "阿达拉斯·暮焰",
["encounterID"] = 3122,
["event"] = "SPELL_CAST_START",
["npcID"] = 237661,
},
[452099] = {
["encounterName"] = "阿努布伊卡基",
["source"] = "活化暗影",
["npcID"] = 224616,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2838,
},
[449318] = {
["event"] = "SPELL_CAST_START",
["source"] = "蛛魔暗法师",
["npcID"] = 208242,
},
[1231005] = {
["encounterName"] = "诸界吞噬者迪门修斯",
["source"] = "活体物质",
["npcID"] = 242587,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3135,
},
[444683] = {
["source"] = "曲角磐羊",
["event"] = "SPELL_CAST_START",
["npcID"] = 221672,
},
[329340] = {
["encounterName"] = "高阶裁决官阿丽兹",
["source"] = "高阶裁决官阿丽兹",
["npcID"] = 165410,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2403,
},
[466197] = {
["encounterName"] = "吉泽尔·超震",
["source"] = "吉泽尔·超震",
["npcID"] = 226404,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3054,
},
[446474] = {
["event"] = "SPELL_CAST_START",
["source"] = "凝结的蜡油巨人",
["npcID"] = 223206,
},
[1223364] = {
["encounterName"] = "集能哨兵",
["source"] = "集能哨兵",
["npcID"] = 233814,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3129,
},
[387652] = {
["event"] = "SPELL_CAST_START",
["source"] = "帕特洛",
["npcID"] = 211061,
},
[445705] = {
["source"] = "深水龙虾人",
["event"] = "SPELL_CAST_START",
["npcID"] = 220643,
},
[1232569] = {
["encounterName"] = "狩魂猎手",
["source"] = "阿达拉斯·暮焰",
["npcID"] = 237661,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3122,
},
[399701] = {
["source"] = "废土剥石者",
["event"] = "SPELL_CAST_START",
["npcID"] = 220363,
},
[473993] = {
["source"] = "蒙面自由职业者",
["event"] = "SPELL_CAST_START",
["npcID"] = 231910,
},
[468726] = {
["event"] = "SPELL_CAST_START",
["source"] = "风险管理公司潜水员",
["npcID"] = 231496,
},
[355429] = {
["source"] = "踏滨巨人",
["event"] = "SPELL_CAST_START",
["npcID"] = 178165,
},
[1221207] = {
["event"] = "SPELL_CAST_START",
["source"] = "影卫精英",
["npcID"] = 231584,
},
[1216093] = {
["source"] = "无拘观察者",
["event"] = "SPELL_CAST_START",
["npcID"] = 241640,
},
[1238713] = {
["event"] = "SPELL_CAST_START",
["source"] = "入侵的相位爬行者",
["npcID"] = 244448,
},
[3606] = {
["event"] = "SPELL_CAST_START",
["source"] = "灼热图腾",
["npcID"] = 2523,
},
[326997] = {
["event"] = "SPELL_CAST_START",
["source"] = "石裔切割者",
["npcID"] = 167607,
},
[1245752] = {
["encounterName"] = "索·阿兹密",
["source"] = "索·阿兹密",
["encounterID"] = 2437,
["event"] = "SPELL_CAST_START",
["npcID"] = 175806,
},
[432142] = {
["event"] = "SPELL_CAST_START",
["source"] = "惧袭伏击者",
["npcID"] = 217481,
},
[431639] = {
["source"] = "苏雷吉掠夺者",
["event"] = "SPELL_CAST_START",
["npcID"] = 238772,
},
[436180] = {
["source"] = "狂放空气元素",
["event"] = "SPELL_CAST_START",
["npcID"] = 215048,
},
[328322] = {
["encounterName"] = "艾谢朗",
["source"] = "不死石精",
["npcID"] = 164363,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2380,
},
[1227355] = {
["encounterName"] = "狩魂猎手",
["source"] = "阿达拉斯·暮焰",
["npcID"] = 237661,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3122,
},
[356407] = {
["source"] = "上古熔火恶犬",
["event"] = "SPELL_CAST_START",
["npcID"] = 180091,
},
[470593] = {
["event"] = "SPELL_CAST_START",
["source"] = "暗影元素",
["npcID"] = 220572,
},
[356967] = {
["source"] = "财团打手",
["event"] = "SPELL_CAST_START",
["npcID"] = 180348,
},
[426787] = {
["encounterName"] = "阿努布伊卡基",
["source"] = "阿努布伊卡基",
["npcID"] = 211089,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2838,
},
[459779] = {
["encounterName"] = "破拆双人组",
["source"] = "布隆特",
["npcID"] = 226402,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3019,
},
[57984] = {
["source"] = "原始火元素",
["event"] = "SPELL_CAST_START",
["npcID"] = 61029,
},
[422090] = {
["source"] = "树人",
["event"] = "SPELL_CAST_START",
["npcID"] = 54983,
},
[352345] = {
["encounterName"] = "时空船长钩尾",
["source"] = "时沙号火炮",
["encounterID"] = 2419,
["event"] = "SPELL_CAST_START",
["npcID"] = 176178,
},
[1242088] = {
["encounterName"] = "缚魂者娜欣达利",
["source"] = "缚魂者娜欣达利",
["encounterID"] = 3130,
["event"] = "SPELL_CAST_START",
["npcID"] = 233816,
},
[1225319] = {
["encounterName"] = "节点之王萨哈达尔",
["source"] = "节点之王萨哈达尔",
["npcID"] = 237763,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3134,
},
[459799] = {
["encounterName"] = "破拆双人组",
["source"] = "布隆特",
["npcID"] = 226402,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3019,
},
[449295] = {
["encounterName"] = "古墓掠影者干须",
["source"] = "古墓掠影者干须",
["encounterID"] = 2878,
["event"] = "SPELL_CAST_START",
["npcID"] = 204188,
},
[429091] = {
["event"] = "SPELL_CAST_START",
["source"] = "高阶牧师艾姆雅",
["npcID"] = 212827,
},
[444692] = {
["source"] = "曲角磐羊",
["event"] = "SPELL_CAST_START",
["npcID"] = 221672,
},
[465408] = {
["event"] = "SPELL_CAST_START",
["source"] = "风险投资公司建筑师",
["npcID"] = 229251,
},
[1241693] = {
["event"] = "SPELL_CAST_START",
["source"] = "魁梧的血卫",
["npcID"] = 216338,
},
[1241694] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "魁梧的血卫",
["npcID"] = 216338,
},
[71792] = {
["source"] = "初生的格里什巨虫",
["event"] = "SPELL_CAST_START",
["npcID"] = 38305,
},
[448528] = {
["event"] = "SPELL_CAST_START",
["source"] = "喷火引线看护者",
["npcID"] = 211777,
},
[424423] = {
["event"] = "SPELL_CAST_START",
["source"] = "歇尼麦尔中士",
["npcID"] = 239836,
},
[326794] = {
["event"] = "SPELL_CAST_START",
["source"] = "审判官西加尔",
["npcID"] = 167876,
},
[1252952] = {
["encounterName"] = "缚魂者娜欣达利",
["source"] = "影卫法师",
["encounterID"] = 3130,
["event"] = "SPELL_CAST_START",
["npcID"] = 237981,
},
[346742] = {
["encounterName"] = "收发室乱战",
["source"] = "P.O.S.T.总管",
["encounterID"] = 2424,
["event"] = "SPELL_CAST_START",
["npcID"] = 175646,
},
[465666] = {
["event"] = "SPELL_CAST_START",
["source"] = "暗索接线者",
["npcID"] = 231325,
},
[355438] = {
["encounterName"] = "麦扎的绿洲",
["source"] = "佐·格伦",
["encounterID"] = 2440,
["event"] = "SPELL_CAST_START",
["npcID"] = 176563,
},
[448787] = {
["event"] = "SPELL_CAST_START",
["source"] = "光耀之子",
["npcID"] = 206710,
},
[352390] = {
["source"] = "传送门操控师佐·霍恩",
["event"] = "SPELL_CAST_START",
["npcID"] = 179334,
},
[446230] = {
["encounterName"] = "殴棘",
["source"] = "地渊之海憎恶",
["npcID"] = 247461,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3374,
},
[355439] = {
["encounterName"] = "麦扎的绿洲",
["source"] = "佐·格伦",
["encounterID"] = 2440,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 176563,
},
[451102] = {
["event"] = "SPELL_CAST_START",
["source"] = "扬升者维斯可里亚",
["npcID"] = 211261,
},
[357243] = {
["source"] = "流浪的脉冲星",
["event"] = "SPELL_CAST_START",
["npcID"] = 180433,
},
[357226] = {
["source"] = "盛装的星辰先知",
["event"] = "SPELL_CAST_START",
["npcID"] = 180429,
},
[355640] = {
["isChanneled"] = true,
["source"] = "集市维和者",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 179840,
},
[1226366] = {
["encounterName"] = "卢米萨尔",
["source"] = "卢米萨尔",
["npcID"] = 233815,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3131,
},
[345990] = {
["encounterName"] = "哨卫佐·菲克斯",
["source"] = "佐·菲克斯",
["encounterID"] = 2425,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 175616,
},
[473351] = {
["encounterName"] = "老大娘",
["source"] = "老大娘",
["npcID"] = 226398,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3020,
},
[1229474] = {
["source"] = "吃撑的幼虫",
["event"] = "SPELL_CAST_START",
["npcID"] = 242209,
},
[424750] = {
["event"] = "SPELL_CAST_START",
["source"] = "真菌腐法师",
["npcID"] = 207459,
},
[351096] = {
["encounterName"] = "索·莉亚",
["source"] = "索·莉亚",
["encounterID"] = 2442,
["event"] = "SPELL_CAST_START",
["npcID"] = 177269,
},
[445210] = {
["source"] = "喷火冲锋者",
["event"] = "SPELL_CAST_START",
["npcID"] = 213577,
},
[116] = {
["npcID"] = 188027,
},
[448791] = {
["event"] = "SPELL_CAST_START",
["source"] = "热切的圣骑士",
["npcID"] = 206704,
},
[1234565] = {
["encounterName"] = "狩魂猎手",
["source"] = "阿达拉斯·暮焰",
["npcID"] = 237661,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3122,
},
[1235583] = {
["event"] = "SPELL_CAST_START",
["source"] = "被污染的碎片",
["npcID"] = 223416,
},
[451605] = {
["encounterName"] = "隐修院长穆普雷",
["source"] = "隐修院长穆普雷",
["npcID"] = 207940,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2848,
},
[1233539] = {
["encounterName"] = "诸界吞噬者迪门修斯",
["source"] = "迪门修斯",
["npcID"] = 233824,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3135,
},
[453140] = {
["encounterName"] = "代言人夏多克朗",
["source"] = "代言人夏多克朗",
["npcID"] = 211087,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2837,
},
[1243771] = {
["encounterName"] = "卢米萨尔",
["source"] = "卢米萨尔",
["npcID"] = 233815,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3131,
},
[462859] = {
["event"] = "SPELL_CAST_START",
["source"] = "热诚的神射手",
["npcID"] = 206694,
},
[1236614] = {
["event"] = "SPELL_CAST_START",
["source"] = "审判官西加尔",
["npcID"] = 167876,
},
[453141] = {
["encounterName"] = "代言人夏多克朗",
["source"] = "代言人夏多克朗",
["npcID"] = 211087,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2837,
},
[455443] = {
["source"] = "蜡克斯",
["event"] = "SPELL_CAST_START",
["npcID"] = 226267,
},
[472842] = {
["source"] = "炸弹机器人",
["event"] = "SPELL_CAST_START",
["npcID"] = 231928,
},
[1231501] = {
["encounterName"] = "狩魂猎手",
["source"] = "维拉瑞安·血愤",
["npcID"] = 237660,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3122,
},
[431659] = {
["event"] = "SPELL_CAST_START",
["source"] = "恐网祭师",
["npcID"] = 221300,
},
[438823] = {
["source"] = "敬魔小鬼",
["event"] = "SPELL_CAST_START",
["npcID"] = 219161,
},
[381535] = {
["source"] = "嘲蔑沙洲",
["event"] = "SPELL_CAST_START",
["npcID"] = 214662,
},
[329104] = {
["encounterName"] = "宫务大臣",
["source"] = "宫务大臣",
["npcID"] = 164218,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2381,
},
[1234529] = {
["encounterName"] = "节点之王萨哈达尔",
["source"] = "皇家虚空之翼",
["encounterID"] = 3134,
["event"] = "SPELL_CAST_START",
["npcID"] = 233823,
},
[456468] = {
["event"] = "SPELL_CAST_START",
["source"] = "斯卡丁躯壳",
["npcID"] = 213566,
},
[322711] = {
["encounterName"] = "哈尔吉亚斯，罪污巨像",
["source"] = "哈尔吉亚斯",
["npcID"] = 165408,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2401,
},
[347775] = {
["source"] = "过载的邮件元素",
["event"] = "SPELL_CAST_START",
["npcID"] = 176395,
},
[1226395] = {
["encounterName"] = "卢米萨尔",
["source"] = "卢米萨尔",
["npcID"] = 233815,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3131,
},
[357238] = {
["source"] = "盛装的星辰先知",
["event"] = "SPELL_CAST_START",
["npcID"] = 180429,
},
[359028] = {
["encounterName"] = "麦扎的绿洲",
["source"] = "佐·格伦",
["encounterID"] = 2440,
["event"] = "SPELL_CAST_START",
["npcID"] = 176563,
},
[450330] = {
["encounterName"] = "蜡面",
["source"] = "蜡面",
["encounterID"] = 2894,
["event"] = "SPELL_CAST_START",
["npcID"] = 214263,
},
[445984] = {
["source"] = "贪食的利颚爬行者",
["event"] = "SPELL_CAST_START",
["npcID"] = 223931,
},
[71791] = {
["source"] = "初生的格里什巨虫",
["event"] = "SPELL_CAST_START",
["npcID"] = 38305,
},
[1226401] = {
["source"] = "影卫编织大师",
["event"] = "SPELL_CAST_START",
["npcID"] = 240974,
},
[1242770] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "誓约唤厄者",
["npcID"] = 244413,
},
[472833] = {
["event"] = "SPELL_CAST_START",
["source"] = "炸弹机器人",
["npcID"] = 231928,
},
[464655] = {
["event"] = "SPELL_CAST_START",
["source"] = "无人机狙击手",
["npcID"] = 229069,
},
[1232543] = {
["encounterName"] = "集能哨兵",
["source"] = "进流守护者",
["encounterID"] = 3129,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 243241,
},
[466190] = {
["encounterName"] = "吉泽尔·超震",
["source"] = "吉泽尔·超震",
["npcID"] = 226404,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3054,
},
[1238873] = {
["encounterName"] = "熔炉编织者阿拉兹",
["source"] = "奥能回响",
["encounterID"] = 3132,
["event"] = "SPELL_CAST_START",
["npcID"] = 241923,
},
[1224812] = {
["encounterName"] = "节点之王萨哈达尔",
["source"] = "节点之王萨哈达尔",
["npcID"] = 237763,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3134,
},
[422969] = {
["encounterName"] = "布朗派克男爵",
["source"] = "布朗派克男爵",
["npcID"] = 207939,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2835,
},
[1236640] = {
["source"] = "树妖",
["event"] = "SPELL_CAST_START",
["npcID"] = 244905,
},
[438826] = {
["event"] = "SPELL_CAST_START",
["source"] = "阿提克",
["npcID"] = 217533,
},
[357229] = {
["source"] = "财团打手",
["event"] = "SPELL_CAST_START",
["npcID"] = 180348,
},
[449568] = {
["encounterName"] = "蛛网将军阿贝纳尔",
["source"] = "蛛网将军阿贝纳尔",
["npcID"] = 221896,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2877,
},
[373279] = {
["event"] = "SPELL_CAST_START",
["source"] = "彼岸之物",
["npcID"] = 189988,
},
[438827] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "阿提克",
["npcID"] = 217533,
},
[1242784] = {
["event"] = "SPELL_CAST_START",
["source"] = "誓约唤厄者",
["npcID"] = 244413,
},
[428086] = {
["encounterName"] = "代言人夏多克朗",
["source"] = "代言人夏多克朗",
["npcID"] = 211087,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2837,
},
[1237671] = {
["event"] = "SPELL_CAST_START",
["source"] = "德鲁德",
["npcID"] = 244453,
},
[452127] = {
["encounterName"] = "阿努布伊卡基",
["source"] = "阿努布伊卡基",
["npcID"] = 211089,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2838,
},
[465682] = {
["event"] = "SPELL_CAST_START",
["source"] = "暗索调查员",
["npcID"] = 231385,
},
[348350] = {
["encounterName"] = "哨卫佐·菲克斯",
["source"] = "佐·菲克斯",
["encounterID"] = 2425,
["event"] = "SPELL_CAST_START",
["npcID"] = 175616,
},
[1237695] = {
["encounterName"] = "诸界吞噬者迪门修斯",
["source"] = "帕哥斯",
["npcID"] = 245222,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3135,
},
[1245579] = {
["encounterName"] = "索·阿兹密",
["source"] = "索·阿兹密",
["encounterID"] = 2437,
["event"] = "SPELL_CAST_START",
["npcID"] = 175806,
},
[1219263] = {
["encounterName"] = "集能哨兵",
["source"] = "集能哨兵",
["npcID"] = 233814,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3129,
},
[1231540] = {
["event"] = "SPELL_CAST_START",
["source"] = "苏法迪缚魂者",
["npcID"] = 230354,
},
[329113] = {
["encounterName"] = "宫务大臣",
["source"] = "宫务大臣",
["npcID"] = 164218,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2381,
},
[1231542] = {
["isChanneled"] = true,
["source"] = "影卫收获者",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 241304,
},
[432120] = {
["source"] = "主宰",
["event"] = "SPELL_CAST_START",
["npcID"] = 228575,
},
[470366] = {
["event"] = "SPELL_CAST_START",
["source"] = "苏雷吉指挥官",
["npcID"] = 242088,
},
[1232568] = {
["encounterName"] = "狩魂猎手",
["source"] = "伊莉萨·悲夜",
["npcID"] = 237662,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3122,
},
[451107] = {
["event"] = "SPELL_CAST_START",
["source"] = "苏雷吉网法师",
["npcID"] = 210966,
},
[350086] = {
["encounterName"] = "卖品会",
["source"] = "雯扎·金线",
["encounterID"] = 2441,
["event"] = "SPELL_CAST_START",
["npcID"] = 176705,
},
[1222341] = {
["source"] = "废土蠕行者",
["event"] = "SPELL_CAST_START",
["npcID"] = 234918,
},
[1216204] = {
["event"] = "SPELL_CAST_START",
["source"] = "结晶魔像",
["npcID"] = 236549,
},
[355057] = {
["source"] = "浊盐碎壳者",
["event"] = "SPELL_CAST_START",
["npcID"] = 178139,
},
[325535] = {
["event"] = "SPELL_CAST_START",
["source"] = "堕落的驯犬者",
["npcID"] = 164562,
},
[1237690] = {
["encounterName"] = "诸界吞噬者迪门修斯",
["source"] = "活体物质",
["npcID"] = 245255,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3135,
},
[1221190] = {
["source"] = "贪婪的毁灭者",
["event"] = "SPELL_CAST_START",
["npcID"] = 236995,
},
[1217232] = {
["encounterName"] = "阿兹希卡",
["source"] = "阿兹希卡",
["encounterID"] = 3107,
["event"] = "SPELL_CAST_START",
["npcID"] = 234893,
},
[1224793] = {
["encounterName"] = "撰魂师",
["source"] = "撰魂师",
["encounterID"] = 3109,
["event"] = "SPELL_CAST_START",
["npcID"] = 234935,
},
[1229510] = {
["source"] = "废土遗民远遁者",
["event"] = "SPELL_CAST_START",
["npcID"] = 234962,
},
[450854] = {
["event"] = "SPELL_CAST_START",
["source"] = "死亡尖啸者艾肯塔克",
["npcID"] = 211263,
},
[440551] = {
["event"] = "SPELL_CAST_START",
["source"] = "蜃鱼人破壳者",
["npcID"] = 213598,
},
[1225172] = {
["isChanneled"] = true,
["source"] = "影卫黑暗法师",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 234833,
},
[1228075] = {
["encounterName"] = "节点之王萨哈达尔",
["source"] = "节点亲王泽沃斯",
["encounterID"] = 3134,
["event"] = "SPELL_CAST_START",
["npcID"] = 241798,
},
[188046] = {
["source"] = "梦境住民",
["event"] = "SPELL_CAST_START",
["npcID"] = 198489,
},
[323236] = {
["encounterName"] = "宫务大臣",
["source"] = "宫务大臣",
["npcID"] = 164218,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2381,
},
[1222356] = {
["source"] = "驯服的废墟追猎者",
["event"] = "SPELL_CAST_START",
["npcID"] = 234960,
},
[424429] = {
["event"] = "SPELL_CAST_START",
["source"] = "热切的圣骑士",
["npcID"] = 206704,
},
[118905] = {
["source"] = "电能图腾",
["event"] = "SPELL_CAST_START",
["npcID"] = 61245,
},
[346766] = {
["encounterName"] = "希尔布兰德",
["source"] = "希尔布兰德",
["encounterID"] = 2426,
["event"] = "SPELL_CAST_START",
["npcID"] = 175663,
},
[1231567] = {
["encounterName"] = "熔炉编织者阿拉兹",
["source"] = "奥术收集装置",
["npcID"] = 240905,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3132,
},
[83367] = {
["event"] = "SPELL_CAST_START",
["source"] = "双帆龙",
["npcID"] = 9163,
},
[1229523] = {
["isChanneled"] = true,
["source"] = "集能哨兵",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 239454,
},
[451113] = {
["event"] = "SPELL_CAST_START",
["source"] = "苏雷吉网法师",
["npcID"] = 210966,
},
[1228502] = {
["encounterName"] = "熔炉编织者阿拉兹",
["source"] = "熔炉编织者阿拉兹",
["npcID"] = 233817,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3132,
},
[374719] = {
["source"] = "覆甲裂蜥",
["event"] = "SPELL_CAST_START",
["npcID"] = 217524,
},
[374158] = {
["source"] = "覆甲裂蜥",
["event"] = "SPELL_CAST_START",
["npcID"] = 217524,
},
[267997] = {
["source"] = "灼焦恶犬",
["event"] = "SPELL_CAST_START",
["npcID"] = 226269,
},
[473691] = {
["event"] = "SPELL_CAST_START",
["source"] = "新潮机器人",
["npcID"] = 231908,
},
[355464] = {
["source"] = "踏滨巨人",
["event"] = "SPELL_CAST_START",
["npcID"] = 178165,
},
[433410] = {
["event"] = "SPELL_CAST_START",
["source"] = "啾鸣释惧蛛",
["npcID"] = 216583,
},
[453161] = {
["event"] = "SPELL_CAST_START",
["source"] = "魁梧的血卫",
["npcID"] = 216338,
},
[1241583] = {
["source"] = "破誓者德萨米拉尔",
["event"] = "SPELL_CAST_START",
["npcID"] = 241384,
},
[1237071] = {
["event"] = "SPELL_CAST_START",
["source"] = "石裔切割者",
["npcID"] = 167607,
},
[471841] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "暗索土狼",
["npcID"] = 231312,
},
[1225444] = {
["encounterName"] = "节点之王萨哈达尔",
["source"] = "节点之王萨哈达尔",
["npcID"] = 237763,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3134,
},
[440306] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "蛛魔祭师",
["npcID"] = 219810,
},
[357512] = {
["source"] = "暴怒的恐角龙",
["event"] = "SPELL_CAST_START",
["npcID"] = 180495,
},
[384366] = {
["event"] = "SPELL_CAST_START",
["source"] = "灰白茶隼",
["npcID"] = 215070,
},
[451117] = {
["event"] = "SPELL_CAST_START",
["source"] = "坚不可摧的伊克斯雷腾",
["npcID"] = 211262,
},
[351119] = {
["encounterName"] = "索·莉亚",
["source"] = "索财团刺客",
["encounterID"] = 2442,
["event"] = "SPELL_CAST_START",
["npcID"] = 177716,
},
[463905] = {
["event"] = "SPELL_CAST_START",
["source"] = "帕特洛",
["npcID"] = 211061,
},
[432448] = {
["event"] = "SPELL_CAST_START",
["source"] = "夜幕祭师",
["npcID"] = 214761,
},
[438954] = {
["encounterName"] = "阿瓦诺克斯",
["source"] = "阿瓦诺克斯",
["npcID"] = 213179,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2926,
},
[445236] = {
["event"] = "SPELL_CAST_START",
["source"] = "潮末鳗",
["npcID"] = 228212,
},
[456745] = {
["event"] = "SPELL_CAST_START",
["source"] = "猩红织亡者",
["npcID"] = 222692,
},
[1225130] = {
["encounterName"] = "狩魂猎手",
["source"] = "维拉瑞安·血愤",
["npcID"] = 237660,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3122,
},
[451119] = {
["event"] = "SPELL_CAST_START",
["source"] = "坚不可摧的伊克斯雷腾",
["npcID"] = 211262,
},
[346006] = {
["encounterName"] = "哨卫佐·菲克斯",
["source"] = "佐·菲克斯",
["encounterID"] = 2425,
["event"] = "SPELL_CAST_START",
["npcID"] = 175616,
},
[473114] = {
["encounterName"] = "沼面",
["source"] = "沼面",
["npcID"] = 226396,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3053,
},
[448818] = {
["source"] = "狗头人颅面者",
["event"] = "SPELL_CAST_START",
["npcID"] = 203951,
},
[1237769] = {
["encounterName"] = "熔炉编织者阿拉兹",
["source"] = "奥能回响",
["encounterID"] = 3132,
["event"] = "SPELL_CAST_START",
["npcID"] = 241923,
},
[357260] = {
["source"] = "专心的祭师",
["event"] = "SPELL_CAST_START",
["npcID"] = 180431,
},
[1215957] = {
["event"] = "SPELL_CAST_START",
["source"] = "葬轮",
["npcID"] = 247481,
},
[430036] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "蜃鱼人矛渔夫",
["npcID"] = 214338,
},
[473550] = {
["source"] = "空中支援机器人",
["event"] = "SPELL_CAST_START",
["npcID"] = 231906,
},
[1241833] = {
["encounterName"] = "狩魂猎手",
["source"] = "伊莉萨·悲夜",
["npcID"] = 237662,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3122,
},
[1238765] = {
["encounterName"] = "诸界吞噬者迪门修斯",
["source"] = "迪门修斯",
["npcID"] = 234478,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3135,
},
[448820] = {
["source"] = "狗头人颅面者",
["event"] = "SPELL_CAST_START",
["npcID"] = 203951,
},
[433731] = {
["encounterName"] = "阿努布泽克特",
["source"] = "阿努布泽克特",
["npcID"] = 215405,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2906,
},
[351124] = {
["encounterName"] = "索·莉亚",
["source"] = "索·莉亚",
["encounterID"] = 2442,
["event"] = "SPELL_CAST_START",
["npcID"] = 177269,
},
[446519] = {
["event"] = "SPELL_CAST_START",
["source"] = "漫步的岩角麋",
["npcID"] = 222619,
},
[270481] = {
["source"] = "恶魔暴君",
["event"] = "SPELL_CAST_START",
["npcID"] = 135002,
},
[328791] = {
["encounterName"] = "宫务大臣",
["source"] = "宫务大臣",
["npcID"] = 164218,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2381,
},
[1243887] = {
["encounterName"] = "熔炉编织者阿拉兹",
["source"] = "黑暗奇点",
["npcID"] = 243859,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3132,
},
[326829] = {
["event"] = "SPELL_CAST_START",
["source"] = "审判官西加尔",
["npcID"] = 167876,
},
[317791] = {
["source"] = "亡者魔导师",
["event"] = "SPELL_CAST_START",
["npcID"] = 163366,
},
[1240821] = {
["source"] = "集市监督者",
["event"] = "SPELL_CAST_START",
["npcID"] = 246285,
},
[435012] = {
["encounterName"] = "阿努布泽克特",
["source"] = "阿努布泽克特",
["npcID"] = 215405,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2906,
},
[449242] = {
["encounterName"] = "古墓掠影者干须",
["source"] = "古墓掠影者干须",
["encounterID"] = 2878,
["event"] = "SPELL_CAST_START",
["npcID"] = 204188,
},
[458866] = {
["encounterName"] = "潜伏者奈拉瑟克",
["source"] = "潜伏者奈拉瑟克",
["npcID"] = 220577,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2949,
},
[471585] = {
["encounterName"] = "老大娘",
["source"] = "老大娘",
["npcID"] = 226398,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3020,
},
[432967] = {
["event"] = "SPELL_CAST_START",
["source"] = "哨兵鹿壳虫",
["npcID"] = 216340,
},
[450188] = {
["event"] = "SPELL_CAST_START",
["source"] = "孢吻掘地者",
["npcID"] = 230919,
},
[1238782] = {
["encounterName"] = "戴尔克莱上尉",
["source"] = "戴尔克莱上尉",
["npcID"] = 207946,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2847,
},
[205231] = {
["event"] = "SPELL_CAST_START",
["source"] = "黑眼",
["npcID"] = 103673,
},
[1233672] = {
["encounterName"] = "狩魂猎手",
["source"] = "伊莉萨·悲夜",
["encounterID"] = 3122,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 237662,
},
[474004] = {
["source"] = "钻头中士",
["event"] = "SPELL_CAST_START",
["npcID"] = 231925,
},
[427342] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "阿拉希步兵",
["npcID"] = 206705,
},
[391793] = {
["source"] = "狂乱的潮汐之核",
["event"] = "SPELL_CAST_START",
["npcID"] = 213699,
},
[157331] = {
["source"] = "原始风暴元素",
["event"] = "SPELL_CAST_START",
["npcID"] = 77942,
},
[355477] = {
["source"] = "指挥官佐·法",
["event"] = "SPELL_CAST_START",
["npcID"] = 179821,
},
[1236193] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "结晶魔像",
["npcID"] = 236549,
},
[427897] = {
["event"] = "SPELL_CAST_START",
["source"] = "铸炉大师达米安",
["npcID"] = 212831,
},
[1230608] = {
["event"] = "SPELL_CAST_START",
["source"] = "钢魂奥能守卫",
["npcID"] = 247624,
},
[461870] = {
["source"] = "萨拉塔斯",
["event"] = "SPELL_CAST_START",
["npcID"] = 229227,
},
[135029] = {
["event"] = "SPELL_CAST_START",
["source"] = "Water Elemental",
["npcID"] = 208441,
},
[350875] = {
["encounterName"] = "索·莉亚",
["source"] = "索·莉亚",
["encounterID"] = 2442,
["event"] = "SPELL_CAST_START",
["npcID"] = 177269,
},
[449339] = {
["encounterName"] = "古墓掠影者干须",
["source"] = "古墓掠影者干须",
["encounterID"] = 2878,
["event"] = "SPELL_CAST_START",
["npcID"] = 204188,
},
[355479] = {
["source"] = "指挥官佐·法",
["event"] = "SPELL_CAST_START",
["npcID"] = 179821,
},
[347949] = {
["encounterName"] = "哨卫佐·菲克斯",
["source"] = "佐·菲克斯",
["encounterID"] = 2425,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 175616,
},
[427601] = {
["event"] = "SPELL_CAST_START",
["source"] = "光耀之子",
["npcID"] = 206710,
},
[433766] = {
["encounterName"] = "阿努布泽克特",
["source"] = "阿努布泽克特",
["npcID"] = 215405,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2906,
},
[1230087] = {
["encounterName"] = "诸界吞噬者迪门修斯",
["source"] = "迪门修斯",
["npcID"] = 241517,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3135,
},
[1248009] = {
["encounterName"] = "熔炉编织者阿拉兹",
["source"] = "熔炉编织者阿拉兹",
["npcID"] = 233817,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3132,
},
[448888] = {
["encounterName"] = "拉夏南",
["source"] = "拉夏南",
["npcID"] = 213937,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2839,
},
[355225] = {
["source"] = "浊盐鱼术师",
["event"] = "SPELL_CAST_START",
["npcID"] = 178142,
},
[1214780] = {
["encounterName"] = "老大娘",
["source"] = "暗索无人机",
["npcID"] = 228424,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3020,
},
[434824] = {
["event"] = "SPELL_CAST_START",
["source"] = "伊克辛",
["npcID"] = 217531,
},
[1215278] = {
["event"] = "SPELL_CAST_START",
["source"] = "影卫士兵",
["npcID"] = 234050,
},
[1220394] = {
["encounterName"] = "弗兰克提鲁斯",
["source"] = "弗兰克提鲁斯",
["npcID"] = 237861,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3133,
},
[465966] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "水能堡食泥者",
["npcID"] = 231312,
},
[1217327] = {
["encounterName"] = "阿兹希卡",
["source"] = "阿兹希卡",
["encounterID"] = 3107,
["event"] = "SPELL_CAST_START",
["npcID"] = 234893,
},
[432031] = {
["encounterName"] = "收割者吉卡塔尔",
["source"] = "飞翼运输者",
["npcID"] = 215968,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2901,
},
[445771] = {
["source"] = "深水龙虾人",
["event"] = "SPELL_CAST_START",
["npcID"] = 220643,
},
[357404] = {
["encounterName"] = "麦扎的绿洲",
["source"] = "艾薇勒",
["encounterID"] = 2440,
["event"] = "SPELL_CAST_START",
["npcID"] = 180399,
},
[465051] = {
["event"] = "SPELL_CAST_START",
["source"] = "萨拉塔斯",
["npcID"] = 230937,
},
[431697] = {
["event"] = "SPELL_CAST_START",
["source"] = "苏雷吉根除者",
["npcID"] = 238773,
},
[1236770] = {
["event"] = "SPELL_CAST_START",
["source"] = "影卫钢魂守卫",
["npcID"] = 244140,
},
[1245978] = {
["encounterName"] = "狩魂猎手",
["source"] = "维拉瑞安·血愤",
["encounterID"] = 3122,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 237660,
},
[1229038] = {
["encounterName"] = "诸界吞噬者迪门修斯",
["source"] = "迪门修斯",
["npcID"] = 241517,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3135,
},
[414944] = {
["event"] = "SPELL_CAST_START",
["source"] = "真菌护矛者",
["npcID"] = 207456,
},
[431491] = {
["event"] = "SPELL_CAST_START",
["source"] = "夜幕司令官",
["npcID"] = 214762,
},
[438471] = {
["encounterName"] = "阿瓦诺克斯",
["source"] = "阿瓦诺克斯",
["npcID"] = 213179,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2926,
},
[1217589] = {
["event"] = "SPELL_CAST_START",
["source"] = "孢点",
["npcID"] = 237337,
},
[167385] = {
["source"] = "水晶之喉",
["event"] = "SPELL_CAST_START",
["npcID"] = 225978,
},
[438883] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "纳克特",
["npcID"] = 218324,
},
[446533] = {
["event"] = "SPELL_CAST_START",
["source"] = "畏缩的雄麋",
["npcID"] = 224586,
},
[1244964] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "誓约掠沙者",
["npcID"] = 248084,
},
[446615] = {
["event"] = "SPELL_CAST_START",
["source"] = "夜幕筑暗师",
["npcID"] = 213885,
},
[1214656] = {
["encounterName"] = "殴棘",
["source"] = "殴棘",
["npcID"] = 247480,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3374,
},
[349663] = {
["encounterName"] = "卖品会",
["source"] = "阿尔克鲁克斯",
["encounterID"] = 2441,
["event"] = "SPELL_CAST_START",
["npcID"] = 176556,
},
[356001] = {
["source"] = "装甲监工",
["event"] = "SPELL_CAST_START",
["npcID"] = 177808,
},
[1235762] = {
["event"] = "SPELL_CAST_START",
["source"] = "石裔掠夺者",
["npcID"] = 167612,
},
[415406] = {
["encounterName"] = "旋菇",
["source"] = "旋菇",
["npcID"] = 207481,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2831,
},
[1244414] = {
["event"] = "SPELL_CAST_START",
["source"] = "苏法迪缚魂者",
["npcID"] = 230354,
},
[1231865] = {
["event"] = "SPELL_CAST_START",
["source"] = "苏法迪驯刃者",
["npcID"] = 230352,
},
},
}
PlaterLanguage = {
["language"] = "zhCN",
["version"] = 1,
}
PlaterLogs = {
["_general_logs"] = {
"2025-09-14 13:49:24 | INIT | Plater-v615-Retail | Framework v619 | 11.2.0 | zhCN | Maweidoodoo",
"2025-09-14 13:48:42 | INIT | Plater-v615-Retail | Framework v619 | 11.2.0 | zhCN | Maweigavel",
"2025-09-13 01:48:57 | INIT | Plater-v615-Retail | Framework v619 | 11.2.0 | zhCN | Maweigavel",
"2025-09-12 22:19:46 | INIT | Plater-v615-Retail | Framework v619 | 11.2.0 | zhCN | Maweigavel",
"2025-09-11 20:56:21 | INIT | Plater-v615-Retail | Framework v619 | 11.2.0 | zhCN | Maweigavel",
"2025-09-10 20:49:31 | INIT | Plater-v615-Retail | Framework v619 | 11.2.0 | zhCN | Maweigavel",
"2025-09-10 20:43:37 | INIT | Plater-v615-Retail | Framework v619 | 11.2.0 | zhCN | Maweigavel",
"2025-09-10 00:27:51 | INIT | Plater-v615-Retail | Framework v619 | 11.2.0 | zhCN | Maweigavel",
"2025-09-09 23:39:27 | INIT | Plater-v615-Retail | Framework v619 | 11.2.0 | zhCN | Maweidoodoo",
"2025-09-09 21:28:04 | INIT | Plater-v615-Retail | Framework v619 | 11.2.0 | zhCN | Maweigavel",
"2025-09-09 11:11:49 | INIT | Plater-v615-Retail | Framework v619 | 11.2.0 | zhCN | Maweidoodoo",
"2025-09-09 11:11:19 | INIT | Plater-v615-Retail | Framework v619 | 11.2.0 | zhCN | Maweihunt",
"2025-09-09 11:09:05 | INIT | Plater-v615-Retail | Framework v619 | 11.2.0 | zhCN | Maweigavel",
"2025-09-09 02:33:41 | INIT | Plater-v615-Retail | Framework v619 | 11.2.0 | zhCN | Maweigavel",
"2025-09-09 00:50:11 | INIT | Plater-v615-Retail | Framework v619 | 11.2.0 | zhCN | Maweidoodoo",
"2025-09-08 20:55:56 | INIT | Plater-v615-Retail | Framework v619 | 11.2.0 | zhCN | Maweihunt",
"2025-09-08 20:13:37 | INIT | Plater-v615-Retail | Framework v619 | 11.2.0 | zhCN | Maweidk",
"2025-09-08 20:07:09 | INIT | Plater-v615-Retail | Framework v619 | 11.2.0 | zhCN | Maweidk",
"2025-09-08 19:57:20 | INIT | Plater-v615-Retail | Framework v619 | 11.2.0 | zhCN | Maweidk",
},
["_error_logs"] = {
},
}
PlaterBackup = {
}
